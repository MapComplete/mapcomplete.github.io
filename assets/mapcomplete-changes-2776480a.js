var c=Object.defineProperty;var d=(t,e,r)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var n=(t,e,r)=>(d(t,typeof e!="symbol"?e+"":e,r),r);import"./modulepreload-polyfill-3cfb730f.js";import"./Pencil-aacb7668.js";import{m as s}from"./mapcomplete-changes-0058aa7c.js";import{U as i}from"./UIEventSource-f89b731e.js";import{s as u,g,a as h,h as y,b as _,r as f}from"./range-1a77d9f3.js";import{M as w,T as b,a as v,l as C,s as T}from"./ThemeViewGUI-f415ab05.js";import{f as L}from"./FloatOver-3216ece5.js";import{s as S,g as A}from"./SelectedElementView-b78216c8.js";import{L as E}from"./LayoutConfig-d54699a6.js";import{F as x}from"./tw-merge-b4a810af.js";import{C as p}from"./Constants-80be1fc0.js";import"./RasterLayerProperties-357e6e36.js";import"./Searchbar-3b6d618c.js";import"./index-34c7dc31.js";import"./LocalStorageSource-0cfd9299.js";import"./OsmConnection-9a6edb9f.js";import"./InputHelper-e9b39252.js";import"./tw-join-70ce42f3.js";import"./Loading-aa985c94.js";import"./Checkbox-c43e2db2.js";import"./Dropdown-a176b096.js";import"./Marker-984bbca1.js";import"./PrivacyPolicy-b54f9831.js";import"./Community-b145c89c.js";import"./AccordionSingle-7432d798.js";import"./Filterview-cc62c217.js";import"./BackButton-0fa61937.js";import"./Login-c68ac5fb.js";class l{metaTaggging_for_mapcomplete_changes(e,r){}metaTaggging_for_current_view(e,r){const{distanceTo:m,overlapWith:a,enclosingFeatures:W,intersectionsWith:k,closest:z,closestn:G,get:V}=r;i.AddLazyProperty(e.properties,"_embedded_cs",()=>a(e)("mapcomplete-changes").map(o=>o.feat.properties)),i.AddLazyProperty(e.properties,"_embedded_cs:themes",()=>e.get("_embedded_cs").map(o=>o.theme)),i.AddLazyProperty(e.properties,"_embedded_cs:users",()=>e.get("_embedded_cs").map(o=>o["_last_edit:contributor"]))}}n(l,"themeName","mapcomplete-changes");function F(){try{var t=document.createElement("canvas");return!!window.WebGLRenderingContext&&(t.getContext("webgl")||t.getContext("experimental-webgl"))}catch{return!1}}async function M(t){return await i.waitFor(t),{layers:[]}}async function U(){if(!p.SummaryServer)return new Set;try{const t=new URL(p.SummaryServer).host,e=await Promise.any([i.downloadJson("https://"+t+"/summary/status.json"),M(0)]);return new Set(e.layers)}catch(t){return console.error("Could not get MVT available layers due to",t),new Set}}async function P(){if(!F())new x("WebGL is not supported or not enabled. This is essential for MapComplete to function, please enable this.").SetClass("block alert").AttachTo("maindiv");else{const t=await U();w.setThemeMetatagging(new l),s.layers.push(u),s.layers.push(g),s.layers.push(h),s.layers.push(y),s.layers.push(_),s.layers.push(f),s.layers.push(C),s.layers.push(L),s.layers.push(T),s.layers.push(S),s.layers.push(A);const e=new b(new E(s),t),r=document.getElementById("maindiv"),m=Array.from(r.children);new v({target:r,props:{state:e}}),m.forEach(a=>r.removeChild(a)),Array.from(document.getElementsByClassName("delete-on-load")).forEach(a=>{a.parentElement.removeChild(a)})}}P();
//# sourceMappingURL=mapcomplete-changes-2776480a.js.map
