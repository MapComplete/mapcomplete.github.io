var S0=Object.defineProperty;var j0=(a,e,t)=>e in a?S0(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var $=(a,e,t)=>(j0(a,typeof e!="symbol"?e+"":e,t),t);import{S as Bt,i as Et,s as Mt,D as ut,k as Aa,l as zt,b as ge,p as St,d as ue,f as Ve,q as Ae,E as dt,F as ft,G as ht,r as Yi,t as ee,g as ce,h as de,u as Xi,v as jt,w as Qi,x as We,y as ri,z as _i,A as wi,B as Hi,e as Oa,c as qa,a as Na,m as Fa,j as Wa,o as A0,n as x0,_ as B0,M as Mr,N as Ia,O as zi}from"./index-c311521b.js";import{a as yt,I as Wt,U as Ca,S as E0}from"./UIEventSource-1f90e2d8.js";import{S as wo,o as Vt,n as M0,G as Wn,L as L0,u as R0,I as H0}from"./FixImages-9c0554f7.js";import{L as ya,Q as zs,i as Ss,a as Lr,T as ur,t as Ki,j as vi}from"./tw-merge-bb88ff72.js";import{C as js}from"./Constants-6995a291.js";import{L as C0}from"./Loading-fd21a5f0.js";import{D as O0}from"./Dropdown-636e0985.js";function N0(a){let e,t,i,n,r;const s=a[2].default,o=ut(s,a,a[1],null);let d=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},a[0]],p={};for(let u=0;u<d.length;u+=1)p=Aa(p,d[u]);return{c(){e=zt("svg"),o&&o.c(),t=zt("path"),ge(t,"fill-rule","evenodd"),ge(t,"d","M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"),ge(t,"clip-rule","evenodd"),St(e,p)},m(u,v){ue(u,e,v),o&&o.m(e,null),Ve(e,t),i=!0,n||(r=[Ae(e,"click",a[3]),Ae(e,"mouseover",a[4]),Ae(e,"mouseenter",a[5]),Ae(e,"mouseleave",a[6]),Ae(e,"keydown",a[7])],n=!0)},p(u,[v]){o&&o.p&&(!i||v&2)&&dt(o,s,u,u[1],i?ht(s,u[1],v,null):ft(u[1]),null),St(e,p=Yi(d,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},v&1&&u[0]]))},i(u){i||(ee(o,u),i=!0)},o(u){ce(o,u),i=!1},d(u){u&&de(e),o&&o.d(u),n=!1,Xi(r)}}}function I0(a,e,t){const i=[];let n=jt(e,i),{$$slots:r={},$$scope:s}=e;function o(S){We.call(this,a,S)}function d(S){We.call(this,a,S)}function p(S){We.call(this,a,S)}function u(S){We.call(this,a,S)}function v(S){We.call(this,a,S)}return a.$$set=S=>{e=Aa(Aa({},e),Qi(S)),t(0,n=jt(e,i)),"$$scope"in S&&t(1,s=S.$$scope)},[n,s,r,o,d,p,u,v]}class W2 extends Bt{constructor(e){super(),Et(this,e,I0,N0,Mt,{})}}function P0(a,e){T0(a,e==null?void 0:e.current)}function T0(a,e){if(!e)return;let t;return e==null||e.mapD(i=>{a.setAttribute("aria-label",i),a.setAttribute("title",i)},[],i=>{t=i}),{destroy:t}}var wa={},en={},Lt={},Rr={exports:{}};Rr.exports;(function(a){(function(e,t){function i(j,l){if(!j)throw new Error(l||"Assertion failed")}function n(j,l){j.super_=l;var g=function(){};g.prototype=l.prototype,j.prototype=new g,j.prototype.constructor=j}function r(j,l,g){if(r.isBN(j))return j;this.negative=0,this.words=null,this.length=0,this.red=null,j!==null&&((l==="le"||l==="be")&&(g=l,l=10),this._init(j||0,l||10,g||"be"))}typeof e=="object"?e.exports=r:t.BN=r,r.BN=r,r.wordSize=26;var s;try{typeof window<"u"&&typeof window.Buffer<"u"?s=window.Buffer:s=wo.Buffer}catch{}r.isBN=function(l){return l instanceof r?!0:l!==null&&typeof l=="object"&&l.constructor.wordSize===r.wordSize&&Array.isArray(l.words)},r.max=function(l,g){return l.cmp(g)>0?l:g},r.min=function(l,g){return l.cmp(g)<0?l:g},r.prototype._init=function(l,g,b){if(typeof l=="number")return this._initNumber(l,g,b);if(typeof l=="object")return this._initArray(l,g,b);g==="hex"&&(g=16),i(g===(g|0)&&g>=2&&g<=36),l=l.toString().replace(/\s+/g,"");var k=0;l[0]==="-"&&(k++,this.negative=1),k<l.length&&(g===16?this._parseHex(l,k,b):(this._parseBase(l,g,k),b==="le"&&this._initArray(this.toArray(),g,b)))},r.prototype._initNumber=function(l,g,b){l<0&&(this.negative=1,l=-l),l<67108864?(this.words=[l&67108863],this.length=1):l<4503599627370496?(this.words=[l&67108863,l/67108864&67108863],this.length=2):(i(l<9007199254740992),this.words=[l&67108863,l/67108864&67108863,1],this.length=3),b==="le"&&this._initArray(this.toArray(),g,b)},r.prototype._initArray=function(l,g,b){if(i(typeof l.length=="number"),l.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(l.length/3),this.words=new Array(this.length);for(var k=0;k<this.length;k++)this.words[k]=0;var z,B,M=0;if(b==="be")for(k=l.length-1,z=0;k>=0;k-=3)B=l[k]|l[k-1]<<8|l[k-2]<<16,this.words[z]|=B<<M&67108863,this.words[z+1]=B>>>26-M&67108863,M+=24,M>=26&&(M-=26,z++);else if(b==="le")for(k=0,z=0;k<l.length;k+=3)B=l[k]|l[k+1]<<8|l[k+2]<<16,this.words[z]|=B<<M&67108863,this.words[z+1]=B>>>26-M&67108863,M+=24,M>=26&&(M-=26,z++);return this.strip()};function o(j,l){var g=j.charCodeAt(l);return g>=65&&g<=70?g-55:g>=97&&g<=102?g-87:g-48&15}function d(j,l,g){var b=o(j,g);return g-1>=l&&(b|=o(j,g-1)<<4),b}r.prototype._parseHex=function(l,g,b){this.length=Math.ceil((l.length-g)/6),this.words=new Array(this.length);for(var k=0;k<this.length;k++)this.words[k]=0;var z=0,B=0,M;if(b==="be")for(k=l.length-1;k>=g;k-=2)M=d(l,g,k)<<z,this.words[B]|=M&67108863,z>=18?(z-=18,B+=1,this.words[B]|=M>>>26):z+=8;else{var w=l.length-g;for(k=w%2===0?g+1:g;k<l.length;k+=2)M=d(l,g,k)<<z,this.words[B]|=M&67108863,z>=18?(z-=18,B+=1,this.words[B]|=M>>>26):z+=8}this.strip()};function p(j,l,g,b){for(var k=0,z=Math.min(j.length,g),B=l;B<z;B++){var M=j.charCodeAt(B)-48;k*=b,M>=49?k+=M-49+10:M>=17?k+=M-17+10:k+=M}return k}r.prototype._parseBase=function(l,g,b){this.words=[0],this.length=1;for(var k=0,z=1;z<=67108863;z*=g)k++;k--,z=z/g|0;for(var B=l.length-b,M=B%k,w=Math.min(B,B-M)+b,h=0,_=b;_<w;_+=k)h=p(l,_,_+k,g),this.imuln(z),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h);if(M!==0){var O=1;for(h=p(l,_,l.length,g),_=0;_<M;_++)O*=g;this.imuln(O),this.words[0]+h<67108864?this.words[0]+=h:this._iaddn(h)}this.strip()},r.prototype.copy=function(l){l.words=new Array(this.length);for(var g=0;g<this.length;g++)l.words[g]=this.words[g];l.length=this.length,l.negative=this.negative,l.red=this.red},r.prototype.clone=function(){var l=new r(null);return this.copy(l),l},r.prototype._expand=function(l){for(;this.length<l;)this.words[this.length++]=0;return this},r.prototype.strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},r.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},r.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var u=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],v=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],S=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];r.prototype.toString=function(l,g){l=l||10,g=g|0||1;var b;if(l===16||l==="hex"){b="";for(var k=0,z=0,B=0;B<this.length;B++){var M=this.words[B],w=((M<<k|z)&16777215).toString(16);z=M>>>24-k&16777215,z!==0||B!==this.length-1?b=u[6-w.length]+w+b:b=w+b,k+=2,k>=26&&(k-=26,B--)}for(z!==0&&(b=z.toString(16)+b);b.length%g!==0;)b="0"+b;return this.negative!==0&&(b="-"+b),b}if(l===(l|0)&&l>=2&&l<=36){var h=v[l],_=S[l];b="";var O=this.clone();for(O.negative=0;!O.isZero();){var K=O.modn(_).toString(l);O=O.idivn(_),O.isZero()?b=K+b:b=u[h-K.length]+K+b}for(this.isZero()&&(b="0"+b);b.length%g!==0;)b="0"+b;return this.negative!==0&&(b="-"+b),b}i(!1,"Base should be between 2 and 36")},r.prototype.toNumber=function(){var l=this.words[0];return this.length===2?l+=this.words[1]*67108864:this.length===3&&this.words[2]===1?l+=4503599627370496+this.words[1]*67108864:this.length>2&&i(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-l:l},r.prototype.toJSON=function(){return this.toString(16)},r.prototype.toBuffer=function(l,g){return i(typeof s<"u"),this.toArrayLike(s,l,g)},r.prototype.toArray=function(l,g){return this.toArrayLike(Array,l,g)},r.prototype.toArrayLike=function(l,g,b){var k=this.byteLength(),z=b||Math.max(1,k);i(k<=z,"byte array longer than desired length"),i(z>0,"Requested array length <= 0"),this.strip();var B=g==="le",M=new l(z),w,h,_=this.clone();if(B){for(h=0;!_.isZero();h++)w=_.andln(255),_.iushrn(8),M[h]=w;for(;h<z;h++)M[h]=0}else{for(h=0;h<z-k;h++)M[h]=0;for(h=0;!_.isZero();h++)w=_.andln(255),_.iushrn(8),M[z-h-1]=w}return M},Math.clz32?r.prototype._countBits=function(l){return 32-Math.clz32(l)}:r.prototype._countBits=function(l){var g=l,b=0;return g>=4096&&(b+=13,g>>>=13),g>=64&&(b+=7,g>>>=7),g>=8&&(b+=4,g>>>=4),g>=2&&(b+=2,g>>>=2),b+g},r.prototype._zeroBits=function(l){if(l===0)return 26;var g=l,b=0;return g&8191||(b+=13,g>>>=13),g&127||(b+=7,g>>>=7),g&15||(b+=4,g>>>=4),g&3||(b+=2,g>>>=2),g&1||b++,b},r.prototype.bitLength=function(){var l=this.words[this.length-1],g=this._countBits(l);return(this.length-1)*26+g};function E(j){for(var l=new Array(j.bitLength()),g=0;g<l.length;g++){var b=g/26|0,k=g%26;l[g]=(j.words[b]&1<<k)>>>k}return l}r.prototype.zeroBits=function(){if(this.isZero())return 0;for(var l=0,g=0;g<this.length;g++){var b=this._zeroBits(this.words[g]);if(l+=b,b!==26)break}return l},r.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},r.prototype.toTwos=function(l){return this.negative!==0?this.abs().inotn(l).iaddn(1):this.clone()},r.prototype.fromTwos=function(l){return this.testn(l-1)?this.notn(l).iaddn(1).ineg():this.clone()},r.prototype.isNeg=function(){return this.negative!==0},r.prototype.neg=function(){return this.clone().ineg()},r.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},r.prototype.iuor=function(l){for(;this.length<l.length;)this.words[this.length++]=0;for(var g=0;g<l.length;g++)this.words[g]=this.words[g]|l.words[g];return this.strip()},r.prototype.ior=function(l){return i((this.negative|l.negative)===0),this.iuor(l)},r.prototype.or=function(l){return this.length>l.length?this.clone().ior(l):l.clone().ior(this)},r.prototype.uor=function(l){return this.length>l.length?this.clone().iuor(l):l.clone().iuor(this)},r.prototype.iuand=function(l){var g;this.length>l.length?g=l:g=this;for(var b=0;b<g.length;b++)this.words[b]=this.words[b]&l.words[b];return this.length=g.length,this.strip()},r.prototype.iand=function(l){return i((this.negative|l.negative)===0),this.iuand(l)},r.prototype.and=function(l){return this.length>l.length?this.clone().iand(l):l.clone().iand(this)},r.prototype.uand=function(l){return this.length>l.length?this.clone().iuand(l):l.clone().iuand(this)},r.prototype.iuxor=function(l){var g,b;this.length>l.length?(g=this,b=l):(g=l,b=this);for(var k=0;k<b.length;k++)this.words[k]=g.words[k]^b.words[k];if(this!==g)for(;k<g.length;k++)this.words[k]=g.words[k];return this.length=g.length,this.strip()},r.prototype.ixor=function(l){return i((this.negative|l.negative)===0),this.iuxor(l)},r.prototype.xor=function(l){return this.length>l.length?this.clone().ixor(l):l.clone().ixor(this)},r.prototype.uxor=function(l){return this.length>l.length?this.clone().iuxor(l):l.clone().iuxor(this)},r.prototype.inotn=function(l){i(typeof l=="number"&&l>=0);var g=Math.ceil(l/26)|0,b=l%26;this._expand(g),b>0&&g--;for(var k=0;k<g;k++)this.words[k]=~this.words[k]&67108863;return b>0&&(this.words[k]=~this.words[k]&67108863>>26-b),this.strip()},r.prototype.notn=function(l){return this.clone().inotn(l)},r.prototype.setn=function(l,g){i(typeof l=="number"&&l>=0);var b=l/26|0,k=l%26;return this._expand(b+1),g?this.words[b]=this.words[b]|1<<k:this.words[b]=this.words[b]&~(1<<k),this.strip()},r.prototype.iadd=function(l){var g;if(this.negative!==0&&l.negative===0)return this.negative=0,g=this.isub(l),this.negative^=1,this._normSign();if(this.negative===0&&l.negative!==0)return l.negative=0,g=this.isub(l),l.negative=1,g._normSign();var b,k;this.length>l.length?(b=this,k=l):(b=l,k=this);for(var z=0,B=0;B<k.length;B++)g=(b.words[B]|0)+(k.words[B]|0)+z,this.words[B]=g&67108863,z=g>>>26;for(;z!==0&&B<b.length;B++)g=(b.words[B]|0)+z,this.words[B]=g&67108863,z=g>>>26;if(this.length=b.length,z!==0)this.words[this.length]=z,this.length++;else if(b!==this)for(;B<b.length;B++)this.words[B]=b.words[B];return this},r.prototype.add=function(l){var g;return l.negative!==0&&this.negative===0?(l.negative=0,g=this.sub(l),l.negative^=1,g):l.negative===0&&this.negative!==0?(this.negative=0,g=l.sub(this),this.negative=1,g):this.length>l.length?this.clone().iadd(l):l.clone().iadd(this)},r.prototype.isub=function(l){if(l.negative!==0){l.negative=0;var g=this.iadd(l);return l.negative=1,g._normSign()}else if(this.negative!==0)return this.negative=0,this.iadd(l),this.negative=1,this._normSign();var b=this.cmp(l);if(b===0)return this.negative=0,this.length=1,this.words[0]=0,this;var k,z;b>0?(k=this,z=l):(k=l,z=this);for(var B=0,M=0;M<z.length;M++)g=(k.words[M]|0)-(z.words[M]|0)+B,B=g>>26,this.words[M]=g&67108863;for(;B!==0&&M<k.length;M++)g=(k.words[M]|0)+B,B=g>>26,this.words[M]=g&67108863;if(B===0&&M<k.length&&k!==this)for(;M<k.length;M++)this.words[M]=k.words[M];return this.length=Math.max(this.length,M),k!==this&&(this.negative=1),this.strip()},r.prototype.sub=function(l){return this.clone().isub(l)};function A(j,l,g){g.negative=l.negative^j.negative;var b=j.length+l.length|0;g.length=b,b=b-1|0;var k=j.words[0]|0,z=l.words[0]|0,B=k*z,M=B&67108863,w=B/67108864|0;g.words[0]=M;for(var h=1;h<b;h++){for(var _=w>>>26,O=w&67108863,K=Math.min(h,l.length-1),U=Math.max(0,h-j.length+1);U<=K;U++){var W=h-U|0;k=j.words[W]|0,z=l.words[U]|0,B=k*z+O,_+=B/67108864|0,O=B&67108863}g.words[h]=O|0,w=_|0}return w!==0?g.words[h]=w|0:g.length--,g.strip()}var L=function(l,g,b){var k=l.words,z=g.words,B=b.words,M=0,w,h,_,O=k[0]|0,K=O&8191,U=O>>>13,W=k[1]|0,Q=W&8191,se=W>>>13,la=k[2]|0,ie=la&8191,he=la>>>13,Mi=k[3]|0,ke=Mi&8191,pe=Mi>>>13,pt=k[4]|0,ye=pt&8191,_e=pt>>>13,Ut=k[5]|0,we=Ut&8191,ze=Ut>>>13,hi=k[6]|0,be=hi&8191,te=hi>>>13,Jt=k[7]|0,Se=Jt&8191,oe=Jt>>>13,Li=k[8]|0,m=Li&8191,c=Li>>>13,f=k[9]|0,y=f&8191,x=f>>>13,R=z[0]|0,H=R&8191,D=R>>>13,ve=z[1]|0,F=ve&8191,G=ve>>>13,ne=z[2]|0,Ee=ne&8191,Me=ne>>>13,ms=z[3]|0,Le=ms&8191,Re=ms>>>13,bs=z[4]|0,He=bs&8191,Ce=bs>>>13,vs=z[5]|0,Oe=vs&8191,Ne=vs>>>13,ks=z[6]|0,Ie=ks&8191,Pe=ks>>>13,ys=z[7]|0,Te=ys&8191,Ke=ys>>>13,_s=z[8]|0,De=_s&8191,Ue=_s>>>13,ws=z[9]|0,Je=ws&8191,qe=ws>>>13;b.negative=l.negative^g.negative,b.length=19,w=Math.imul(K,H),h=Math.imul(K,D),h=h+Math.imul(U,H)|0,_=Math.imul(U,D);var xn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(xn>>>26)|0,xn&=67108863,w=Math.imul(Q,H),h=Math.imul(Q,D),h=h+Math.imul(se,H)|0,_=Math.imul(se,D),w=w+Math.imul(K,F)|0,h=h+Math.imul(K,G)|0,h=h+Math.imul(U,F)|0,_=_+Math.imul(U,G)|0;var Bn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Bn>>>26)|0,Bn&=67108863,w=Math.imul(ie,H),h=Math.imul(ie,D),h=h+Math.imul(he,H)|0,_=Math.imul(he,D),w=w+Math.imul(Q,F)|0,h=h+Math.imul(Q,G)|0,h=h+Math.imul(se,F)|0,_=_+Math.imul(se,G)|0,w=w+Math.imul(K,Ee)|0,h=h+Math.imul(K,Me)|0,h=h+Math.imul(U,Ee)|0,_=_+Math.imul(U,Me)|0;var En=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(En>>>26)|0,En&=67108863,w=Math.imul(ke,H),h=Math.imul(ke,D),h=h+Math.imul(pe,H)|0,_=Math.imul(pe,D),w=w+Math.imul(ie,F)|0,h=h+Math.imul(ie,G)|0,h=h+Math.imul(he,F)|0,_=_+Math.imul(he,G)|0,w=w+Math.imul(Q,Ee)|0,h=h+Math.imul(Q,Me)|0,h=h+Math.imul(se,Ee)|0,_=_+Math.imul(se,Me)|0,w=w+Math.imul(K,Le)|0,h=h+Math.imul(K,Re)|0,h=h+Math.imul(U,Le)|0,_=_+Math.imul(U,Re)|0;var Mn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Mn>>>26)|0,Mn&=67108863,w=Math.imul(ye,H),h=Math.imul(ye,D),h=h+Math.imul(_e,H)|0,_=Math.imul(_e,D),w=w+Math.imul(ke,F)|0,h=h+Math.imul(ke,G)|0,h=h+Math.imul(pe,F)|0,_=_+Math.imul(pe,G)|0,w=w+Math.imul(ie,Ee)|0,h=h+Math.imul(ie,Me)|0,h=h+Math.imul(he,Ee)|0,_=_+Math.imul(he,Me)|0,w=w+Math.imul(Q,Le)|0,h=h+Math.imul(Q,Re)|0,h=h+Math.imul(se,Le)|0,_=_+Math.imul(se,Re)|0,w=w+Math.imul(K,He)|0,h=h+Math.imul(K,Ce)|0,h=h+Math.imul(U,He)|0,_=_+Math.imul(U,Ce)|0;var Ln=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Ln>>>26)|0,Ln&=67108863,w=Math.imul(we,H),h=Math.imul(we,D),h=h+Math.imul(ze,H)|0,_=Math.imul(ze,D),w=w+Math.imul(ye,F)|0,h=h+Math.imul(ye,G)|0,h=h+Math.imul(_e,F)|0,_=_+Math.imul(_e,G)|0,w=w+Math.imul(ke,Ee)|0,h=h+Math.imul(ke,Me)|0,h=h+Math.imul(pe,Ee)|0,_=_+Math.imul(pe,Me)|0,w=w+Math.imul(ie,Le)|0,h=h+Math.imul(ie,Re)|0,h=h+Math.imul(he,Le)|0,_=_+Math.imul(he,Re)|0,w=w+Math.imul(Q,He)|0,h=h+Math.imul(Q,Ce)|0,h=h+Math.imul(se,He)|0,_=_+Math.imul(se,Ce)|0,w=w+Math.imul(K,Oe)|0,h=h+Math.imul(K,Ne)|0,h=h+Math.imul(U,Oe)|0,_=_+Math.imul(U,Ne)|0;var Rn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Rn>>>26)|0,Rn&=67108863,w=Math.imul(be,H),h=Math.imul(be,D),h=h+Math.imul(te,H)|0,_=Math.imul(te,D),w=w+Math.imul(we,F)|0,h=h+Math.imul(we,G)|0,h=h+Math.imul(ze,F)|0,_=_+Math.imul(ze,G)|0,w=w+Math.imul(ye,Ee)|0,h=h+Math.imul(ye,Me)|0,h=h+Math.imul(_e,Ee)|0,_=_+Math.imul(_e,Me)|0,w=w+Math.imul(ke,Le)|0,h=h+Math.imul(ke,Re)|0,h=h+Math.imul(pe,Le)|0,_=_+Math.imul(pe,Re)|0,w=w+Math.imul(ie,He)|0,h=h+Math.imul(ie,Ce)|0,h=h+Math.imul(he,He)|0,_=_+Math.imul(he,Ce)|0,w=w+Math.imul(Q,Oe)|0,h=h+Math.imul(Q,Ne)|0,h=h+Math.imul(se,Oe)|0,_=_+Math.imul(se,Ne)|0,w=w+Math.imul(K,Ie)|0,h=h+Math.imul(K,Pe)|0,h=h+Math.imul(U,Ie)|0,_=_+Math.imul(U,Pe)|0;var Hn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Hn>>>26)|0,Hn&=67108863,w=Math.imul(Se,H),h=Math.imul(Se,D),h=h+Math.imul(oe,H)|0,_=Math.imul(oe,D),w=w+Math.imul(be,F)|0,h=h+Math.imul(be,G)|0,h=h+Math.imul(te,F)|0,_=_+Math.imul(te,G)|0,w=w+Math.imul(we,Ee)|0,h=h+Math.imul(we,Me)|0,h=h+Math.imul(ze,Ee)|0,_=_+Math.imul(ze,Me)|0,w=w+Math.imul(ye,Le)|0,h=h+Math.imul(ye,Re)|0,h=h+Math.imul(_e,Le)|0,_=_+Math.imul(_e,Re)|0,w=w+Math.imul(ke,He)|0,h=h+Math.imul(ke,Ce)|0,h=h+Math.imul(pe,He)|0,_=_+Math.imul(pe,Ce)|0,w=w+Math.imul(ie,Oe)|0,h=h+Math.imul(ie,Ne)|0,h=h+Math.imul(he,Oe)|0,_=_+Math.imul(he,Ne)|0,w=w+Math.imul(Q,Ie)|0,h=h+Math.imul(Q,Pe)|0,h=h+Math.imul(se,Ie)|0,_=_+Math.imul(se,Pe)|0,w=w+Math.imul(K,Te)|0,h=h+Math.imul(K,Ke)|0,h=h+Math.imul(U,Te)|0,_=_+Math.imul(U,Ke)|0;var Cn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Cn>>>26)|0,Cn&=67108863,w=Math.imul(m,H),h=Math.imul(m,D),h=h+Math.imul(c,H)|0,_=Math.imul(c,D),w=w+Math.imul(Se,F)|0,h=h+Math.imul(Se,G)|0,h=h+Math.imul(oe,F)|0,_=_+Math.imul(oe,G)|0,w=w+Math.imul(be,Ee)|0,h=h+Math.imul(be,Me)|0,h=h+Math.imul(te,Ee)|0,_=_+Math.imul(te,Me)|0,w=w+Math.imul(we,Le)|0,h=h+Math.imul(we,Re)|0,h=h+Math.imul(ze,Le)|0,_=_+Math.imul(ze,Re)|0,w=w+Math.imul(ye,He)|0,h=h+Math.imul(ye,Ce)|0,h=h+Math.imul(_e,He)|0,_=_+Math.imul(_e,Ce)|0,w=w+Math.imul(ke,Oe)|0,h=h+Math.imul(ke,Ne)|0,h=h+Math.imul(pe,Oe)|0,_=_+Math.imul(pe,Ne)|0,w=w+Math.imul(ie,Ie)|0,h=h+Math.imul(ie,Pe)|0,h=h+Math.imul(he,Ie)|0,_=_+Math.imul(he,Pe)|0,w=w+Math.imul(Q,Te)|0,h=h+Math.imul(Q,Ke)|0,h=h+Math.imul(se,Te)|0,_=_+Math.imul(se,Ke)|0,w=w+Math.imul(K,De)|0,h=h+Math.imul(K,Ue)|0,h=h+Math.imul(U,De)|0,_=_+Math.imul(U,Ue)|0;var On=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(On>>>26)|0,On&=67108863,w=Math.imul(y,H),h=Math.imul(y,D),h=h+Math.imul(x,H)|0,_=Math.imul(x,D),w=w+Math.imul(m,F)|0,h=h+Math.imul(m,G)|0,h=h+Math.imul(c,F)|0,_=_+Math.imul(c,G)|0,w=w+Math.imul(Se,Ee)|0,h=h+Math.imul(Se,Me)|0,h=h+Math.imul(oe,Ee)|0,_=_+Math.imul(oe,Me)|0,w=w+Math.imul(be,Le)|0,h=h+Math.imul(be,Re)|0,h=h+Math.imul(te,Le)|0,_=_+Math.imul(te,Re)|0,w=w+Math.imul(we,He)|0,h=h+Math.imul(we,Ce)|0,h=h+Math.imul(ze,He)|0,_=_+Math.imul(ze,Ce)|0,w=w+Math.imul(ye,Oe)|0,h=h+Math.imul(ye,Ne)|0,h=h+Math.imul(_e,Oe)|0,_=_+Math.imul(_e,Ne)|0,w=w+Math.imul(ke,Ie)|0,h=h+Math.imul(ke,Pe)|0,h=h+Math.imul(pe,Ie)|0,_=_+Math.imul(pe,Pe)|0,w=w+Math.imul(ie,Te)|0,h=h+Math.imul(ie,Ke)|0,h=h+Math.imul(he,Te)|0,_=_+Math.imul(he,Ke)|0,w=w+Math.imul(Q,De)|0,h=h+Math.imul(Q,Ue)|0,h=h+Math.imul(se,De)|0,_=_+Math.imul(se,Ue)|0,w=w+Math.imul(K,Je)|0,h=h+Math.imul(K,qe)|0,h=h+Math.imul(U,Je)|0,_=_+Math.imul(U,qe)|0;var Nn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Nn>>>26)|0,Nn&=67108863,w=Math.imul(y,F),h=Math.imul(y,G),h=h+Math.imul(x,F)|0,_=Math.imul(x,G),w=w+Math.imul(m,Ee)|0,h=h+Math.imul(m,Me)|0,h=h+Math.imul(c,Ee)|0,_=_+Math.imul(c,Me)|0,w=w+Math.imul(Se,Le)|0,h=h+Math.imul(Se,Re)|0,h=h+Math.imul(oe,Le)|0,_=_+Math.imul(oe,Re)|0,w=w+Math.imul(be,He)|0,h=h+Math.imul(be,Ce)|0,h=h+Math.imul(te,He)|0,_=_+Math.imul(te,Ce)|0,w=w+Math.imul(we,Oe)|0,h=h+Math.imul(we,Ne)|0,h=h+Math.imul(ze,Oe)|0,_=_+Math.imul(ze,Ne)|0,w=w+Math.imul(ye,Ie)|0,h=h+Math.imul(ye,Pe)|0,h=h+Math.imul(_e,Ie)|0,_=_+Math.imul(_e,Pe)|0,w=w+Math.imul(ke,Te)|0,h=h+Math.imul(ke,Ke)|0,h=h+Math.imul(pe,Te)|0,_=_+Math.imul(pe,Ke)|0,w=w+Math.imul(ie,De)|0,h=h+Math.imul(ie,Ue)|0,h=h+Math.imul(he,De)|0,_=_+Math.imul(he,Ue)|0,w=w+Math.imul(Q,Je)|0,h=h+Math.imul(Q,qe)|0,h=h+Math.imul(se,Je)|0,_=_+Math.imul(se,qe)|0;var In=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(In>>>26)|0,In&=67108863,w=Math.imul(y,Ee),h=Math.imul(y,Me),h=h+Math.imul(x,Ee)|0,_=Math.imul(x,Me),w=w+Math.imul(m,Le)|0,h=h+Math.imul(m,Re)|0,h=h+Math.imul(c,Le)|0,_=_+Math.imul(c,Re)|0,w=w+Math.imul(Se,He)|0,h=h+Math.imul(Se,Ce)|0,h=h+Math.imul(oe,He)|0,_=_+Math.imul(oe,Ce)|0,w=w+Math.imul(be,Oe)|0,h=h+Math.imul(be,Ne)|0,h=h+Math.imul(te,Oe)|0,_=_+Math.imul(te,Ne)|0,w=w+Math.imul(we,Ie)|0,h=h+Math.imul(we,Pe)|0,h=h+Math.imul(ze,Ie)|0,_=_+Math.imul(ze,Pe)|0,w=w+Math.imul(ye,Te)|0,h=h+Math.imul(ye,Ke)|0,h=h+Math.imul(_e,Te)|0,_=_+Math.imul(_e,Ke)|0,w=w+Math.imul(ke,De)|0,h=h+Math.imul(ke,Ue)|0,h=h+Math.imul(pe,De)|0,_=_+Math.imul(pe,Ue)|0,w=w+Math.imul(ie,Je)|0,h=h+Math.imul(ie,qe)|0,h=h+Math.imul(he,Je)|0,_=_+Math.imul(he,qe)|0;var Pn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Pn>>>26)|0,Pn&=67108863,w=Math.imul(y,Le),h=Math.imul(y,Re),h=h+Math.imul(x,Le)|0,_=Math.imul(x,Re),w=w+Math.imul(m,He)|0,h=h+Math.imul(m,Ce)|0,h=h+Math.imul(c,He)|0,_=_+Math.imul(c,Ce)|0,w=w+Math.imul(Se,Oe)|0,h=h+Math.imul(Se,Ne)|0,h=h+Math.imul(oe,Oe)|0,_=_+Math.imul(oe,Ne)|0,w=w+Math.imul(be,Ie)|0,h=h+Math.imul(be,Pe)|0,h=h+Math.imul(te,Ie)|0,_=_+Math.imul(te,Pe)|0,w=w+Math.imul(we,Te)|0,h=h+Math.imul(we,Ke)|0,h=h+Math.imul(ze,Te)|0,_=_+Math.imul(ze,Ke)|0,w=w+Math.imul(ye,De)|0,h=h+Math.imul(ye,Ue)|0,h=h+Math.imul(_e,De)|0,_=_+Math.imul(_e,Ue)|0,w=w+Math.imul(ke,Je)|0,h=h+Math.imul(ke,qe)|0,h=h+Math.imul(pe,Je)|0,_=_+Math.imul(pe,qe)|0;var Tn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Tn>>>26)|0,Tn&=67108863,w=Math.imul(y,He),h=Math.imul(y,Ce),h=h+Math.imul(x,He)|0,_=Math.imul(x,Ce),w=w+Math.imul(m,Oe)|0,h=h+Math.imul(m,Ne)|0,h=h+Math.imul(c,Oe)|0,_=_+Math.imul(c,Ne)|0,w=w+Math.imul(Se,Ie)|0,h=h+Math.imul(Se,Pe)|0,h=h+Math.imul(oe,Ie)|0,_=_+Math.imul(oe,Pe)|0,w=w+Math.imul(be,Te)|0,h=h+Math.imul(be,Ke)|0,h=h+Math.imul(te,Te)|0,_=_+Math.imul(te,Ke)|0,w=w+Math.imul(we,De)|0,h=h+Math.imul(we,Ue)|0,h=h+Math.imul(ze,De)|0,_=_+Math.imul(ze,Ue)|0,w=w+Math.imul(ye,Je)|0,h=h+Math.imul(ye,qe)|0,h=h+Math.imul(_e,Je)|0,_=_+Math.imul(_e,qe)|0;var Kn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Kn>>>26)|0,Kn&=67108863,w=Math.imul(y,Oe),h=Math.imul(y,Ne),h=h+Math.imul(x,Oe)|0,_=Math.imul(x,Ne),w=w+Math.imul(m,Ie)|0,h=h+Math.imul(m,Pe)|0,h=h+Math.imul(c,Ie)|0,_=_+Math.imul(c,Pe)|0,w=w+Math.imul(Se,Te)|0,h=h+Math.imul(Se,Ke)|0,h=h+Math.imul(oe,Te)|0,_=_+Math.imul(oe,Ke)|0,w=w+Math.imul(be,De)|0,h=h+Math.imul(be,Ue)|0,h=h+Math.imul(te,De)|0,_=_+Math.imul(te,Ue)|0,w=w+Math.imul(we,Je)|0,h=h+Math.imul(we,qe)|0,h=h+Math.imul(ze,Je)|0,_=_+Math.imul(ze,qe)|0;var Dn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Dn>>>26)|0,Dn&=67108863,w=Math.imul(y,Ie),h=Math.imul(y,Pe),h=h+Math.imul(x,Ie)|0,_=Math.imul(x,Pe),w=w+Math.imul(m,Te)|0,h=h+Math.imul(m,Ke)|0,h=h+Math.imul(c,Te)|0,_=_+Math.imul(c,Ke)|0,w=w+Math.imul(Se,De)|0,h=h+Math.imul(Se,Ue)|0,h=h+Math.imul(oe,De)|0,_=_+Math.imul(oe,Ue)|0,w=w+Math.imul(be,Je)|0,h=h+Math.imul(be,qe)|0,h=h+Math.imul(te,Je)|0,_=_+Math.imul(te,qe)|0;var Un=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Un>>>26)|0,Un&=67108863,w=Math.imul(y,Te),h=Math.imul(y,Ke),h=h+Math.imul(x,Te)|0,_=Math.imul(x,Ke),w=w+Math.imul(m,De)|0,h=h+Math.imul(m,Ue)|0,h=h+Math.imul(c,De)|0,_=_+Math.imul(c,Ue)|0,w=w+Math.imul(Se,Je)|0,h=h+Math.imul(Se,qe)|0,h=h+Math.imul(oe,Je)|0,_=_+Math.imul(oe,qe)|0;var Jn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(Jn>>>26)|0,Jn&=67108863,w=Math.imul(y,De),h=Math.imul(y,Ue),h=h+Math.imul(x,De)|0,_=Math.imul(x,Ue),w=w+Math.imul(m,Je)|0,h=h+Math.imul(m,qe)|0,h=h+Math.imul(c,Je)|0,_=_+Math.imul(c,qe)|0;var qn=(M+w|0)+((h&8191)<<13)|0;M=(_+(h>>>13)|0)+(qn>>>26)|0,qn&=67108863,w=Math.imul(y,Je),h=Math.imul(y,qe),h=h+Math.imul(x,Je)|0,_=Math.imul(x,qe);var Fn=(M+w|0)+((h&8191)<<13)|0;return M=(_+(h>>>13)|0)+(Fn>>>26)|0,Fn&=67108863,B[0]=xn,B[1]=Bn,B[2]=En,B[3]=Mn,B[4]=Ln,B[5]=Rn,B[6]=Hn,B[7]=Cn,B[8]=On,B[9]=Nn,B[10]=In,B[11]=Pn,B[12]=Tn,B[13]=Kn,B[14]=Dn,B[15]=Un,B[16]=Jn,B[17]=qn,B[18]=Fn,M!==0&&(B[19]=M,b.length++),b};Math.imul||(L=A);function N(j,l,g){g.negative=l.negative^j.negative,g.length=j.length+l.length;for(var b=0,k=0,z=0;z<g.length-1;z++){var B=k;k=0;for(var M=b&67108863,w=Math.min(z,l.length-1),h=Math.max(0,z-j.length+1);h<=w;h++){var _=z-h,O=j.words[_]|0,K=l.words[h]|0,U=O*K,W=U&67108863;B=B+(U/67108864|0)|0,W=W+M|0,M=W&67108863,B=B+(W>>>26)|0,k+=B>>>26,B&=67108863}g.words[z]=M,b=B,B=k}return b!==0?g.words[z]=b:g.length--,g.strip()}function I(j,l,g){var b=new T;return b.mulp(j,l,g)}r.prototype.mulTo=function(l,g){var b,k=this.length+l.length;return this.length===10&&l.length===10?b=L(this,l,g):k<63?b=A(this,l,g):k<1024?b=N(this,l,g):b=I(this,l,g),b};function T(j,l){this.x=j,this.y=l}T.prototype.makeRBT=function(l){for(var g=new Array(l),b=r.prototype._countBits(l)-1,k=0;k<l;k++)g[k]=this.revBin(k,b,l);return g},T.prototype.revBin=function(l,g,b){if(l===0||l===b-1)return l;for(var k=0,z=0;z<g;z++)k|=(l&1)<<g-z-1,l>>=1;return k},T.prototype.permute=function(l,g,b,k,z,B){for(var M=0;M<B;M++)k[M]=g[l[M]],z[M]=b[l[M]]},T.prototype.transform=function(l,g,b,k,z,B){this.permute(B,l,g,b,k,z);for(var M=1;M<z;M<<=1)for(var w=M<<1,h=Math.cos(2*Math.PI/w),_=Math.sin(2*Math.PI/w),O=0;O<z;O+=w)for(var K=h,U=_,W=0;W<M;W++){var Q=b[O+W],se=k[O+W],la=b[O+W+M],ie=k[O+W+M],he=K*la-U*ie;ie=K*ie+U*la,la=he,b[O+W]=Q+la,k[O+W]=se+ie,b[O+W+M]=Q-la,k[O+W+M]=se-ie,W!==w&&(he=h*K-_*U,U=h*U+_*K,K=he)}},T.prototype.guessLen13b=function(l,g){var b=Math.max(g,l)|1,k=b&1,z=0;for(b=b/2|0;b;b=b>>>1)z++;return 1<<z+1+k},T.prototype.conjugate=function(l,g,b){if(!(b<=1))for(var k=0;k<b/2;k++){var z=l[k];l[k]=l[b-k-1],l[b-k-1]=z,z=g[k],g[k]=-g[b-k-1],g[b-k-1]=-z}},T.prototype.normalize13b=function(l,g){for(var b=0,k=0;k<g/2;k++){var z=Math.round(l[2*k+1]/g)*8192+Math.round(l[2*k]/g)+b;l[k]=z&67108863,z<67108864?b=0:b=z/67108864|0}return l},T.prototype.convert13b=function(l,g,b,k){for(var z=0,B=0;B<g;B++)z=z+(l[B]|0),b[2*B]=z&8191,z=z>>>13,b[2*B+1]=z&8191,z=z>>>13;for(B=2*g;B<k;++B)b[B]=0;i(z===0),i((z&-8192)===0)},T.prototype.stub=function(l){for(var g=new Array(l),b=0;b<l;b++)g[b]=0;return g},T.prototype.mulp=function(l,g,b){var k=2*this.guessLen13b(l.length,g.length),z=this.makeRBT(k),B=this.stub(k),M=new Array(k),w=new Array(k),h=new Array(k),_=new Array(k),O=new Array(k),K=new Array(k),U=b.words;U.length=k,this.convert13b(l.words,l.length,M,k),this.convert13b(g.words,g.length,_,k),this.transform(M,B,w,h,k,z),this.transform(_,B,O,K,k,z);for(var W=0;W<k;W++){var Q=w[W]*O[W]-h[W]*K[W];h[W]=w[W]*K[W]+h[W]*O[W],w[W]=Q}return this.conjugate(w,h,k),this.transform(w,h,U,B,k,z),this.conjugate(U,B,k),this.normalize13b(U,k),b.negative=l.negative^g.negative,b.length=l.length+g.length,b.strip()},r.prototype.mul=function(l){var g=new r(null);return g.words=new Array(this.length+l.length),this.mulTo(l,g)},r.prototype.mulf=function(l){var g=new r(null);return g.words=new Array(this.length+l.length),I(this,l,g)},r.prototype.imul=function(l){return this.clone().mulTo(l,this)},r.prototype.imuln=function(l){i(typeof l=="number"),i(l<67108864);for(var g=0,b=0;b<this.length;b++){var k=(this.words[b]|0)*l,z=(k&67108863)+(g&67108863);g>>=26,g+=k/67108864|0,g+=z>>>26,this.words[b]=z&67108863}return g!==0&&(this.words[b]=g,this.length++),this},r.prototype.muln=function(l){return this.clone().imuln(l)},r.prototype.sqr=function(){return this.mul(this)},r.prototype.isqr=function(){return this.imul(this.clone())},r.prototype.pow=function(l){var g=E(l);if(g.length===0)return new r(1);for(var b=this,k=0;k<g.length&&g[k]===0;k++,b=b.sqr());if(++k<g.length)for(var z=b.sqr();k<g.length;k++,z=z.sqr())g[k]!==0&&(b=b.mul(z));return b},r.prototype.iushln=function(l){i(typeof l=="number"&&l>=0);var g=l%26,b=(l-g)/26,k=67108863>>>26-g<<26-g,z;if(g!==0){var B=0;for(z=0;z<this.length;z++){var M=this.words[z]&k,w=(this.words[z]|0)-M<<g;this.words[z]=w|B,B=M>>>26-g}B&&(this.words[z]=B,this.length++)}if(b!==0){for(z=this.length-1;z>=0;z--)this.words[z+b]=this.words[z];for(z=0;z<b;z++)this.words[z]=0;this.length+=b}return this.strip()},r.prototype.ishln=function(l){return i(this.negative===0),this.iushln(l)},r.prototype.iushrn=function(l,g,b){i(typeof l=="number"&&l>=0);var k;g?k=(g-g%26)/26:k=0;var z=l%26,B=Math.min((l-z)/26,this.length),M=67108863^67108863>>>z<<z,w=b;if(k-=B,k=Math.max(0,k),w){for(var h=0;h<B;h++)w.words[h]=this.words[h];w.length=B}if(B!==0)if(this.length>B)for(this.length-=B,h=0;h<this.length;h++)this.words[h]=this.words[h+B];else this.words[0]=0,this.length=1;var _=0;for(h=this.length-1;h>=0&&(_!==0||h>=k);h--){var O=this.words[h]|0;this.words[h]=_<<26-z|O>>>z,_=O&M}return w&&_!==0&&(w.words[w.length++]=_),this.length===0&&(this.words[0]=0,this.length=1),this.strip()},r.prototype.ishrn=function(l,g,b){return i(this.negative===0),this.iushrn(l,g,b)},r.prototype.shln=function(l){return this.clone().ishln(l)},r.prototype.ushln=function(l){return this.clone().iushln(l)},r.prototype.shrn=function(l){return this.clone().ishrn(l)},r.prototype.ushrn=function(l){return this.clone().iushrn(l)},r.prototype.testn=function(l){i(typeof l=="number"&&l>=0);var g=l%26,b=(l-g)/26,k=1<<g;if(this.length<=b)return!1;var z=this.words[b];return!!(z&k)},r.prototype.imaskn=function(l){i(typeof l=="number"&&l>=0);var g=l%26,b=(l-g)/26;if(i(this.negative===0,"imaskn works only with positive numbers"),this.length<=b)return this;if(g!==0&&b++,this.length=Math.min(b,this.length),g!==0){var k=67108863^67108863>>>g<<g;this.words[this.length-1]&=k}return this.strip()},r.prototype.maskn=function(l){return this.clone().imaskn(l)},r.prototype.iaddn=function(l){return i(typeof l=="number"),i(l<67108864),l<0?this.isubn(-l):this.negative!==0?this.length===1&&(this.words[0]|0)<l?(this.words[0]=l-(this.words[0]|0),this.negative=0,this):(this.negative=0,this.isubn(l),this.negative=1,this):this._iaddn(l)},r.prototype._iaddn=function(l){this.words[0]+=l;for(var g=0;g<this.length&&this.words[g]>=67108864;g++)this.words[g]-=67108864,g===this.length-1?this.words[g+1]=1:this.words[g+1]++;return this.length=Math.max(this.length,g+1),this},r.prototype.isubn=function(l){if(i(typeof l=="number"),i(l<67108864),l<0)return this.iaddn(-l);if(this.negative!==0)return this.negative=0,this.iaddn(l),this.negative=1,this;if(this.words[0]-=l,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var g=0;g<this.length&&this.words[g]<0;g++)this.words[g]+=67108864,this.words[g+1]-=1;return this.strip()},r.prototype.addn=function(l){return this.clone().iaddn(l)},r.prototype.subn=function(l){return this.clone().isubn(l)},r.prototype.iabs=function(){return this.negative=0,this},r.prototype.abs=function(){return this.clone().iabs()},r.prototype._ishlnsubmul=function(l,g,b){var k=l.length+b,z;this._expand(k);var B,M=0;for(z=0;z<l.length;z++){B=(this.words[z+b]|0)+M;var w=(l.words[z]|0)*g;B-=w&67108863,M=(B>>26)-(w/67108864|0),this.words[z+b]=B&67108863}for(;z<this.length-b;z++)B=(this.words[z+b]|0)+M,M=B>>26,this.words[z+b]=B&67108863;if(M===0)return this.strip();for(i(M===-1),M=0,z=0;z<this.length;z++)B=-(this.words[z]|0)+M,M=B>>26,this.words[z]=B&67108863;return this.negative=1,this.strip()},r.prototype._wordDiv=function(l,g){var b=this.length-l.length,k=this.clone(),z=l,B=z.words[z.length-1]|0,M=this._countBits(B);b=26-M,b!==0&&(z=z.ushln(b),k.iushln(b),B=z.words[z.length-1]|0);var w=k.length-z.length,h;if(g!=="mod"){h=new r(null),h.length=w+1,h.words=new Array(h.length);for(var _=0;_<h.length;_++)h.words[_]=0}var O=k.clone()._ishlnsubmul(z,1,w);O.negative===0&&(k=O,h&&(h.words[w]=1));for(var K=w-1;K>=0;K--){var U=(k.words[z.length+K]|0)*67108864+(k.words[z.length+K-1]|0);for(U=Math.min(U/B|0,67108863),k._ishlnsubmul(z,U,K);k.negative!==0;)U--,k.negative=0,k._ishlnsubmul(z,1,K),k.isZero()||(k.negative^=1);h&&(h.words[K]=U)}return h&&h.strip(),k.strip(),g!=="div"&&b!==0&&k.iushrn(b),{div:h||null,mod:k}},r.prototype.divmod=function(l,g,b){if(i(!l.isZero()),this.isZero())return{div:new r(0),mod:new r(0)};var k,z,B;return this.negative!==0&&l.negative===0?(B=this.neg().divmod(l,g),g!=="mod"&&(k=B.div.neg()),g!=="div"&&(z=B.mod.neg(),b&&z.negative!==0&&z.iadd(l)),{div:k,mod:z}):this.negative===0&&l.negative!==0?(B=this.divmod(l.neg(),g),g!=="mod"&&(k=B.div.neg()),{div:k,mod:B.mod}):this.negative&l.negative?(B=this.neg().divmod(l.neg(),g),g!=="div"&&(z=B.mod.neg(),b&&z.negative!==0&&z.isub(l)),{div:B.div,mod:z}):l.length>this.length||this.cmp(l)<0?{div:new r(0),mod:this}:l.length===1?g==="div"?{div:this.divn(l.words[0]),mod:null}:g==="mod"?{div:null,mod:new r(this.modn(l.words[0]))}:{div:this.divn(l.words[0]),mod:new r(this.modn(l.words[0]))}:this._wordDiv(l,g)},r.prototype.div=function(l){return this.divmod(l,"div",!1).div},r.prototype.mod=function(l){return this.divmod(l,"mod",!1).mod},r.prototype.umod=function(l){return this.divmod(l,"mod",!0).mod},r.prototype.divRound=function(l){var g=this.divmod(l);if(g.mod.isZero())return g.div;var b=g.div.negative!==0?g.mod.isub(l):g.mod,k=l.ushrn(1),z=l.andln(1),B=b.cmp(k);return B<0||z===1&&B===0?g.div:g.div.negative!==0?g.div.isubn(1):g.div.iaddn(1)},r.prototype.modn=function(l){i(l<=67108863);for(var g=(1<<26)%l,b=0,k=this.length-1;k>=0;k--)b=(g*b+(this.words[k]|0))%l;return b},r.prototype.idivn=function(l){i(l<=67108863);for(var g=0,b=this.length-1;b>=0;b--){var k=(this.words[b]|0)+g*67108864;this.words[b]=k/l|0,g=k%l}return this.strip()},r.prototype.divn=function(l){return this.clone().idivn(l)},r.prototype.egcd=function(l){i(l.negative===0),i(!l.isZero());var g=this,b=l.clone();g.negative!==0?g=g.umod(l):g=g.clone();for(var k=new r(1),z=new r(0),B=new r(0),M=new r(1),w=0;g.isEven()&&b.isEven();)g.iushrn(1),b.iushrn(1),++w;for(var h=b.clone(),_=g.clone();!g.isZero();){for(var O=0,K=1;!(g.words[0]&K)&&O<26;++O,K<<=1);if(O>0)for(g.iushrn(O);O-- >0;)(k.isOdd()||z.isOdd())&&(k.iadd(h),z.isub(_)),k.iushrn(1),z.iushrn(1);for(var U=0,W=1;!(b.words[0]&W)&&U<26;++U,W<<=1);if(U>0)for(b.iushrn(U);U-- >0;)(B.isOdd()||M.isOdd())&&(B.iadd(h),M.isub(_)),B.iushrn(1),M.iushrn(1);g.cmp(b)>=0?(g.isub(b),k.isub(B),z.isub(M)):(b.isub(g),B.isub(k),M.isub(z))}return{a:B,b:M,gcd:b.iushln(w)}},r.prototype._invmp=function(l){i(l.negative===0),i(!l.isZero());var g=this,b=l.clone();g.negative!==0?g=g.umod(l):g=g.clone();for(var k=new r(1),z=new r(0),B=b.clone();g.cmpn(1)>0&&b.cmpn(1)>0;){for(var M=0,w=1;!(g.words[0]&w)&&M<26;++M,w<<=1);if(M>0)for(g.iushrn(M);M-- >0;)k.isOdd()&&k.iadd(B),k.iushrn(1);for(var h=0,_=1;!(b.words[0]&_)&&h<26;++h,_<<=1);if(h>0)for(b.iushrn(h);h-- >0;)z.isOdd()&&z.iadd(B),z.iushrn(1);g.cmp(b)>=0?(g.isub(b),k.isub(z)):(b.isub(g),z.isub(k))}var O;return g.cmpn(1)===0?O=k:O=z,O.cmpn(0)<0&&O.iadd(l),O},r.prototype.gcd=function(l){if(this.isZero())return l.abs();if(l.isZero())return this.abs();var g=this.clone(),b=l.clone();g.negative=0,b.negative=0;for(var k=0;g.isEven()&&b.isEven();k++)g.iushrn(1),b.iushrn(1);do{for(;g.isEven();)g.iushrn(1);for(;b.isEven();)b.iushrn(1);var z=g.cmp(b);if(z<0){var B=g;g=b,b=B}else if(z===0||b.cmpn(1)===0)break;g.isub(b)}while(!0);return b.iushln(k)},r.prototype.invm=function(l){return this.egcd(l).a.umod(l)},r.prototype.isEven=function(){return(this.words[0]&1)===0},r.prototype.isOdd=function(){return(this.words[0]&1)===1},r.prototype.andln=function(l){return this.words[0]&l},r.prototype.bincn=function(l){i(typeof l=="number");var g=l%26,b=(l-g)/26,k=1<<g;if(this.length<=b)return this._expand(b+1),this.words[b]|=k,this;for(var z=k,B=b;z!==0&&B<this.length;B++){var M=this.words[B]|0;M+=z,z=M>>>26,M&=67108863,this.words[B]=M}return z!==0&&(this.words[B]=z,this.length++),this},r.prototype.isZero=function(){return this.length===1&&this.words[0]===0},r.prototype.cmpn=function(l){var g=l<0;if(this.negative!==0&&!g)return-1;if(this.negative===0&&g)return 1;this.strip();var b;if(this.length>1)b=1;else{g&&(l=-l),i(l<=67108863,"Number is too big");var k=this.words[0]|0;b=k===l?0:k<l?-1:1}return this.negative!==0?-b|0:b},r.prototype.cmp=function(l){if(this.negative!==0&&l.negative===0)return-1;if(this.negative===0&&l.negative!==0)return 1;var g=this.ucmp(l);return this.negative!==0?-g|0:g},r.prototype.ucmp=function(l){if(this.length>l.length)return 1;if(this.length<l.length)return-1;for(var g=0,b=this.length-1;b>=0;b--){var k=this.words[b]|0,z=l.words[b]|0;if(k!==z){k<z?g=-1:k>z&&(g=1);break}}return g},r.prototype.gtn=function(l){return this.cmpn(l)===1},r.prototype.gt=function(l){return this.cmp(l)===1},r.prototype.gten=function(l){return this.cmpn(l)>=0},r.prototype.gte=function(l){return this.cmp(l)>=0},r.prototype.ltn=function(l){return this.cmpn(l)===-1},r.prototype.lt=function(l){return this.cmp(l)===-1},r.prototype.lten=function(l){return this.cmpn(l)<=0},r.prototype.lte=function(l){return this.cmp(l)<=0},r.prototype.eqn=function(l){return this.cmpn(l)===0},r.prototype.eq=function(l){return this.cmp(l)===0},r.red=function(l){return new ae(l)},r.prototype.toRed=function(l){return i(!this.red,"Already a number in reduction context"),i(this.negative===0,"red works only with positives"),l.convertTo(this)._forceRed(l)},r.prototype.fromRed=function(){return i(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},r.prototype._forceRed=function(l){return this.red=l,this},r.prototype.forceRed=function(l){return i(!this.red,"Already a number in reduction context"),this._forceRed(l)},r.prototype.redAdd=function(l){return i(this.red,"redAdd works only with red numbers"),this.red.add(this,l)},r.prototype.redIAdd=function(l){return i(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,l)},r.prototype.redSub=function(l){return i(this.red,"redSub works only with red numbers"),this.red.sub(this,l)},r.prototype.redISub=function(l){return i(this.red,"redISub works only with red numbers"),this.red.isub(this,l)},r.prototype.redShl=function(l){return i(this.red,"redShl works only with red numbers"),this.red.shl(this,l)},r.prototype.redMul=function(l){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,l),this.red.mul(this,l)},r.prototype.redIMul=function(l){return i(this.red,"redMul works only with red numbers"),this.red._verify2(this,l),this.red.imul(this,l)},r.prototype.redSqr=function(){return i(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},r.prototype.redISqr=function(){return i(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},r.prototype.redSqrt=function(){return i(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},r.prototype.redInvm=function(){return i(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},r.prototype.redNeg=function(){return i(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},r.prototype.redPow=function(l){return i(this.red&&!l.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,l)};var q={k256:null,p224:null,p192:null,p25519:null};function J(j,l){this.name=j,this.p=new r(l,16),this.n=this.p.bitLength(),this.k=new r(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}J.prototype._tmp=function(){var l=new r(null);return l.words=new Array(Math.ceil(this.n/13)),l},J.prototype.ireduce=function(l){var g=l,b;do this.split(g,this.tmp),g=this.imulK(g),g=g.iadd(this.tmp),b=g.bitLength();while(b>this.n);var k=b<this.n?-1:g.ucmp(this.p);return k===0?(g.words[0]=0,g.length=1):k>0?g.isub(this.p):g.strip!==void 0?g.strip():g._strip(),g},J.prototype.split=function(l,g){l.iushrn(this.n,0,g)},J.prototype.imulK=function(l){return l.imul(this.k)};function re(){J.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}n(re,J),re.prototype.split=function(l,g){for(var b=4194303,k=Math.min(l.length,9),z=0;z<k;z++)g.words[z]=l.words[z];if(g.length=k,l.length<=9){l.words[0]=0,l.length=1;return}var B=l.words[9];for(g.words[g.length++]=B&b,z=10;z<l.length;z++){var M=l.words[z]|0;l.words[z-10]=(M&b)<<4|B>>>22,B=M}B>>>=22,l.words[z-10]=B,B===0&&l.length>10?l.length-=10:l.length-=9},re.prototype.imulK=function(l){l.words[l.length]=0,l.words[l.length+1]=0,l.length+=2;for(var g=0,b=0;b<l.length;b++){var k=l.words[b]|0;g+=k*977,l.words[b]=g&67108863,g=k*64+(g/67108864|0)}return l.words[l.length-1]===0&&(l.length--,l.words[l.length-1]===0&&l.length--),l};function aa(){J.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}n(aa,J);function oa(){J.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}n(oa,J);function ua(){J.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}n(ua,J),ua.prototype.imulK=function(l){for(var g=0,b=0;b<l.length;b++){var k=(l.words[b]|0)*19+g,z=k&67108863;k>>>=26,l.words[b]=z,g=k}return g!==0&&(l.words[l.length++]=g),l},r._prime=function(l){if(q[l])return q[l];var g;if(l==="k256")g=new re;else if(l==="p224")g=new aa;else if(l==="p192")g=new oa;else if(l==="p25519")g=new ua;else throw new Error("Unknown prime "+l);return q[l]=g,g};function ae(j){if(typeof j=="string"){var l=r._prime(j);this.m=l.p,this.prime=l}else i(j.gtn(1),"modulus must be greater than 1"),this.m=j,this.prime=null}ae.prototype._verify1=function(l){i(l.negative===0,"red works only with positives"),i(l.red,"red works only with red numbers")},ae.prototype._verify2=function(l,g){i((l.negative|g.negative)===0,"red works only with positives"),i(l.red&&l.red===g.red,"red works only with red numbers")},ae.prototype.imod=function(l){return this.prime?this.prime.ireduce(l)._forceRed(this):l.umod(this.m)._forceRed(this)},ae.prototype.neg=function(l){return l.isZero()?l.clone():this.m.sub(l)._forceRed(this)},ae.prototype.add=function(l,g){this._verify2(l,g);var b=l.add(g);return b.cmp(this.m)>=0&&b.isub(this.m),b._forceRed(this)},ae.prototype.iadd=function(l,g){this._verify2(l,g);var b=l.iadd(g);return b.cmp(this.m)>=0&&b.isub(this.m),b},ae.prototype.sub=function(l,g){this._verify2(l,g);var b=l.sub(g);return b.cmpn(0)<0&&b.iadd(this.m),b._forceRed(this)},ae.prototype.isub=function(l,g){this._verify2(l,g);var b=l.isub(g);return b.cmpn(0)<0&&b.iadd(this.m),b},ae.prototype.shl=function(l,g){return this._verify1(l),this.imod(l.ushln(g))},ae.prototype.imul=function(l,g){return this._verify2(l,g),this.imod(l.imul(g))},ae.prototype.mul=function(l,g){return this._verify2(l,g),this.imod(l.mul(g))},ae.prototype.isqr=function(l){return this.imul(l,l.clone())},ae.prototype.sqr=function(l){return this.mul(l,l)},ae.prototype.sqrt=function(l){if(l.isZero())return l.clone();var g=this.m.andln(3);if(i(g%2===1),g===3){var b=this.m.add(new r(1)).iushrn(2);return this.pow(l,b)}for(var k=this.m.subn(1),z=0;!k.isZero()&&k.andln(1)===0;)z++,k.iushrn(1);i(!k.isZero());var B=new r(1).toRed(this),M=B.redNeg(),w=this.m.subn(1).iushrn(1),h=this.m.bitLength();for(h=new r(2*h*h).toRed(this);this.pow(h,w).cmp(M)!==0;)h.redIAdd(M);for(var _=this.pow(h,k),O=this.pow(l,k.addn(1).iushrn(1)),K=this.pow(l,k),U=z;K.cmp(B)!==0;){for(var W=K,Q=0;W.cmp(B)!==0;Q++)W=W.redSqr();i(Q<U);var se=this.pow(_,new r(1).iushln(U-Q-1));O=O.redMul(se),_=se.redSqr(),K=K.redMul(_),U=Q}return O},ae.prototype.invm=function(l){var g=l._invmp(this.m);return g.negative!==0?(g.negative=0,this.imod(g).redNeg()):this.imod(g)},ae.prototype.pow=function(l,g){if(g.isZero())return new r(1).toRed(this);if(g.cmpn(1)===0)return l.clone();var b=4,k=new Array(1<<b);k[0]=new r(1).toRed(this),k[1]=l;for(var z=2;z<k.length;z++)k[z]=this.mul(k[z-1],l);var B=k[0],M=0,w=0,h=g.bitLength()%26;for(h===0&&(h=26),z=g.length-1;z>=0;z--){for(var _=g.words[z],O=h-1;O>=0;O--){var K=_>>O&1;if(B!==k[0]&&(B=this.sqr(B)),K===0&&M===0){w=0;continue}M<<=1,M|=K,w++,!(w!==b&&(z!==0||O!==0))&&(B=this.mul(B,k[M]),w=0,M=0)}h=26}return B},ae.prototype.convertTo=function(l){var g=l.umod(this.m);return g===l?g.clone():g},ae.prototype.convertFrom=function(l){var g=l.clone();return g.red=null,g},r.mont=function(l){return new va(l)};function va(j){ae.call(this,j),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new r(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}n(va,ae),va.prototype.convertTo=function(l){return this.imod(l.ushln(this.shift))},va.prototype.convertFrom=function(l){var g=this.imod(l.mul(this.rinv));return g.red=null,g},va.prototype.imul=function(l,g){if(l.isZero()||g.isZero())return l.words[0]=0,l.length=1,l;var b=l.imul(g),k=b.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),z=b.isub(k).iushrn(this.shift),B=z;return z.cmp(this.m)>=0?B=z.isub(this.m):z.cmpn(0)<0&&(B=z.iadd(this.m)),B._forceRed(this)},va.prototype.mul=function(l,g){if(l.isZero()||g.isZero())return new r(0)._forceRed(this);var b=l.mul(g),k=b.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),z=b.isub(k).iushrn(this.shift),B=z;return z.cmp(this.m)>=0?B=z.isub(this.m):z.cmpn(0)<0&&(B=z.iadd(this.m)),B._forceRed(this)},va.prototype.invm=function(l){var g=this.imod(l._invmp(this.m).mul(this.r2));return g._forceRed(this)}})(a,Vt)})(Rr);var Ta=Rr.exports,zo={},Hr={},dr={exports:{}};typeof Object.create=="function"?dr.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:dr.exports=function(e,t){if(t){e.super_=t;var i=function(){};i.prototype=t.prototype,e.prototype=new i,e.prototype.constructor=e}};var Ka=dr.exports,Cr={},an={};an.byteLength=U0;an.toByteArray=q0;an.fromByteArray=G0;var Ja=[],_a=[],K0=typeof Uint8Array<"u"?Uint8Array:Array,Gn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var qt=0,D0=Gn.length;qt<D0;++qt)Ja[qt]=Gn[qt],_a[Gn.charCodeAt(qt)]=qt;_a["-".charCodeAt(0)]=62;_a["_".charCodeAt(0)]=63;function So(a){var e=a.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=a.indexOf("=");t===-1&&(t=e);var i=t===e?0:4-t%4;return[t,i]}function U0(a){var e=So(a),t=e[0],i=e[1];return(t+i)*3/4-i}function J0(a,e,t){return(e+t)*3/4-t}function q0(a){var e,t=So(a),i=t[0],n=t[1],r=new K0(J0(a,i,n)),s=0,o=n>0?i-4:i,d;for(d=0;d<o;d+=4)e=_a[a.charCodeAt(d)]<<18|_a[a.charCodeAt(d+1)]<<12|_a[a.charCodeAt(d+2)]<<6|_a[a.charCodeAt(d+3)],r[s++]=e>>16&255,r[s++]=e>>8&255,r[s++]=e&255;return n===2&&(e=_a[a.charCodeAt(d)]<<2|_a[a.charCodeAt(d+1)]>>4,r[s++]=e&255),n===1&&(e=_a[a.charCodeAt(d)]<<10|_a[a.charCodeAt(d+1)]<<4|_a[a.charCodeAt(d+2)]>>2,r[s++]=e>>8&255,r[s++]=e&255),r}function F0(a){return Ja[a>>18&63]+Ja[a>>12&63]+Ja[a>>6&63]+Ja[a&63]}function W0(a,e,t){for(var i,n=[],r=e;r<t;r+=3)i=(a[r]<<16&16711680)+(a[r+1]<<8&65280)+(a[r+2]&255),n.push(F0(i));return n.join("")}function G0(a){for(var e,t=a.length,i=t%3,n=[],r=16383,s=0,o=t-i;s<o;s+=r)n.push(W0(a,s,s+r>o?o:s+r));return i===1?(e=a[t-1],n.push(Ja[e>>2]+Ja[e<<4&63]+"==")):i===2&&(e=(a[t-2]<<8)+a[t-1],n.push(Ja[e>>10]+Ja[e>>4&63]+Ja[e<<2&63]+"=")),n.join("")}var Or={};/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */Or.read=function(a,e,t,i,n){var r,s,o=n*8-i-1,d=(1<<o)-1,p=d>>1,u=-7,v=t?n-1:0,S=t?-1:1,E=a[e+v];for(v+=S,r=E&(1<<-u)-1,E>>=-u,u+=o;u>0;r=r*256+a[e+v],v+=S,u-=8);for(s=r&(1<<-u)-1,r>>=-u,u+=i;u>0;s=s*256+a[e+v],v+=S,u-=8);if(r===0)r=1-p;else{if(r===d)return s?NaN:(E?-1:1)*(1/0);s=s+Math.pow(2,i),r=r-p}return(E?-1:1)*s*Math.pow(2,r-i)};Or.write=function(a,e,t,i,n,r){var s,o,d,p=r*8-n-1,u=(1<<p)-1,v=u>>1,S=n===23?Math.pow(2,-24)-Math.pow(2,-77):0,E=i?0:r-1,A=i?1:-1,L=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,s=u):(s=Math.floor(Math.log(e)/Math.LN2),e*(d=Math.pow(2,-s))<1&&(s--,d*=2),s+v>=1?e+=S/d:e+=S*Math.pow(2,1-v),e*d>=2&&(s++,d/=2),s+v>=u?(o=0,s=u):s+v>=1?(o=(e*d-1)*Math.pow(2,n),s=s+v):(o=e*Math.pow(2,v-1)*Math.pow(2,n),s=0));n>=8;a[t+E]=o&255,E+=A,o/=256,n-=8);for(s=s<<n|o,p+=n;p>0;a[t+E]=s&255,E+=A,s/=256,p-=8);a[t+E-A]|=L*128};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */(function(a){const e=an,t=Or,i=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;a.Buffer=o,a.SlowBuffer=T,a.INSPECT_MAX_BYTES=50;const n=2147483647;a.kMaxLength=n,o.TYPED_ARRAY_SUPPORT=r(),!o.TYPED_ARRAY_SUPPORT&&typeof console<"u"&&typeof console.error=="function"&&console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");function r(){try{const m=new Uint8Array(1),c={foo:function(){return 42}};return Object.setPrototypeOf(c,Uint8Array.prototype),Object.setPrototypeOf(m,c),m.foo()===42}catch{return!1}}Object.defineProperty(o.prototype,"parent",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.buffer}}),Object.defineProperty(o.prototype,"offset",{enumerable:!0,get:function(){if(o.isBuffer(this))return this.byteOffset}});function s(m){if(m>n)throw new RangeError('The value "'+m+'" is invalid for option "size"');const c=new Uint8Array(m);return Object.setPrototypeOf(c,o.prototype),c}function o(m,c,f){if(typeof m=="number"){if(typeof c=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return v(m)}return d(m,c,f)}o.poolSize=8192;function d(m,c,f){if(typeof m=="string")return S(m,c);if(ArrayBuffer.isView(m))return A(m);if(m==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof m);if(te(m,ArrayBuffer)||m&&te(m.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(te(m,SharedArrayBuffer)||m&&te(m.buffer,SharedArrayBuffer)))return L(m,c,f);if(typeof m=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const y=m.valueOf&&m.valueOf();if(y!=null&&y!==m)return o.from(y,c,f);const x=N(m);if(x)return x;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof m[Symbol.toPrimitive]=="function")return o.from(m[Symbol.toPrimitive]("string"),c,f);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof m)}o.from=function(m,c,f){return d(m,c,f)},Object.setPrototypeOf(o.prototype,Uint8Array.prototype),Object.setPrototypeOf(o,Uint8Array);function p(m){if(typeof m!="number")throw new TypeError('"size" argument must be of type number');if(m<0)throw new RangeError('The value "'+m+'" is invalid for option "size"')}function u(m,c,f){return p(m),m<=0?s(m):c!==void 0?typeof f=="string"?s(m).fill(c,f):s(m).fill(c):s(m)}o.alloc=function(m,c,f){return u(m,c,f)};function v(m){return p(m),s(m<0?0:I(m)|0)}o.allocUnsafe=function(m){return v(m)},o.allocUnsafeSlow=function(m){return v(m)};function S(m,c){if((typeof c!="string"||c==="")&&(c="utf8"),!o.isEncoding(c))throw new TypeError("Unknown encoding: "+c);const f=q(m,c)|0;let y=s(f);const x=y.write(m,c);return x!==f&&(y=y.slice(0,x)),y}function E(m){const c=m.length<0?0:I(m.length)|0,f=s(c);for(let y=0;y<c;y+=1)f[y]=m[y]&255;return f}function A(m){if(te(m,Uint8Array)){const c=new Uint8Array(m);return L(c.buffer,c.byteOffset,c.byteLength)}return E(m)}function L(m,c,f){if(c<0||m.byteLength<c)throw new RangeError('"offset" is outside of buffer bounds');if(m.byteLength<c+(f||0))throw new RangeError('"length" is outside of buffer bounds');let y;return c===void 0&&f===void 0?y=new Uint8Array(m):f===void 0?y=new Uint8Array(m,c):y=new Uint8Array(m,c,f),Object.setPrototypeOf(y,o.prototype),y}function N(m){if(o.isBuffer(m)){const c=I(m.length)|0,f=s(c);return f.length===0||m.copy(f,0,0,c),f}if(m.length!==void 0)return typeof m.length!="number"||Jt(m.length)?s(0):E(m);if(m.type==="Buffer"&&Array.isArray(m.data))return E(m.data)}function I(m){if(m>=n)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+n.toString(16)+" bytes");return m|0}function T(m){return+m!=m&&(m=0),o.alloc(+m)}o.isBuffer=function(c){return c!=null&&c._isBuffer===!0&&c!==o.prototype},o.compare=function(c,f){if(te(c,Uint8Array)&&(c=o.from(c,c.offset,c.byteLength)),te(f,Uint8Array)&&(f=o.from(f,f.offset,f.byteLength)),!o.isBuffer(c)||!o.isBuffer(f))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(c===f)return 0;let y=c.length,x=f.length;for(let R=0,H=Math.min(y,x);R<H;++R)if(c[R]!==f[R]){y=c[R],x=f[R];break}return y<x?-1:x<y?1:0},o.isEncoding=function(c){switch(String(c).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},o.concat=function(c,f){if(!Array.isArray(c))throw new TypeError('"list" argument must be an Array of Buffers');if(c.length===0)return o.alloc(0);let y;if(f===void 0)for(f=0,y=0;y<c.length;++y)f+=c[y].length;const x=o.allocUnsafe(f);let R=0;for(y=0;y<c.length;++y){let H=c[y];if(te(H,Uint8Array))R+H.length>x.length?(o.isBuffer(H)||(H=o.from(H)),H.copy(x,R)):Uint8Array.prototype.set.call(x,H,R);else if(o.isBuffer(H))H.copy(x,R);else throw new TypeError('"list" argument must be an Array of Buffers');R+=H.length}return x};function q(m,c){if(o.isBuffer(m))return m.length;if(ArrayBuffer.isView(m)||te(m,ArrayBuffer))return m.byteLength;if(typeof m!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof m);const f=m.length,y=arguments.length>2&&arguments[2]===!0;if(!y&&f===0)return 0;let x=!1;for(;;)switch(c){case"ascii":case"latin1":case"binary":return f;case"utf8":case"utf-8":return Ut(m).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return f*2;case"hex":return f>>>1;case"base64":return hi(m).length;default:if(x)return y?-1:Ut(m).length;c=(""+c).toLowerCase(),x=!0}}o.byteLength=q;function J(m,c,f){let y=!1;if((c===void 0||c<0)&&(c=0),c>this.length||((f===void 0||f>this.length)&&(f=this.length),f<=0)||(f>>>=0,c>>>=0,f<=c))return"";for(m||(m="utf8");;)switch(m){case"hex":return w(this,c,f);case"utf8":case"utf-8":return b(this,c,f);case"ascii":return B(this,c,f);case"latin1":case"binary":return M(this,c,f);case"base64":return g(this,c,f);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return h(this,c,f);default:if(y)throw new TypeError("Unknown encoding: "+m);m=(m+"").toLowerCase(),y=!0}}o.prototype._isBuffer=!0;function re(m,c,f){const y=m[c];m[c]=m[f],m[f]=y}o.prototype.swap16=function(){const c=this.length;if(c%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let f=0;f<c;f+=2)re(this,f,f+1);return this},o.prototype.swap32=function(){const c=this.length;if(c%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let f=0;f<c;f+=4)re(this,f,f+3),re(this,f+1,f+2);return this},o.prototype.swap64=function(){const c=this.length;if(c%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let f=0;f<c;f+=8)re(this,f,f+7),re(this,f+1,f+6),re(this,f+2,f+5),re(this,f+3,f+4);return this},o.prototype.toString=function(){const c=this.length;return c===0?"":arguments.length===0?b(this,0,c):J.apply(this,arguments)},o.prototype.toLocaleString=o.prototype.toString,o.prototype.equals=function(c){if(!o.isBuffer(c))throw new TypeError("Argument must be a Buffer");return this===c?!0:o.compare(this,c)===0},o.prototype.inspect=function(){let c="";const f=a.INSPECT_MAX_BYTES;return c=this.toString("hex",0,f).replace(/(.{2})/g,"$1 ").trim(),this.length>f&&(c+=" ... "),"<Buffer "+c+">"},i&&(o.prototype[i]=o.prototype.inspect),o.prototype.compare=function(c,f,y,x,R){if(te(c,Uint8Array)&&(c=o.from(c,c.offset,c.byteLength)),!o.isBuffer(c))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof c);if(f===void 0&&(f=0),y===void 0&&(y=c?c.length:0),x===void 0&&(x=0),R===void 0&&(R=this.length),f<0||y>c.length||x<0||R>this.length)throw new RangeError("out of range index");if(x>=R&&f>=y)return 0;if(x>=R)return-1;if(f>=y)return 1;if(f>>>=0,y>>>=0,x>>>=0,R>>>=0,this===c)return 0;let H=R-x,D=y-f;const ve=Math.min(H,D),F=this.slice(x,R),G=c.slice(f,y);for(let ne=0;ne<ve;++ne)if(F[ne]!==G[ne]){H=F[ne],D=G[ne];break}return H<D?-1:D<H?1:0};function aa(m,c,f,y,x){if(m.length===0)return-1;if(typeof f=="string"?(y=f,f=0):f>2147483647?f=2147483647:f<-2147483648&&(f=-2147483648),f=+f,Jt(f)&&(f=x?0:m.length-1),f<0&&(f=m.length+f),f>=m.length){if(x)return-1;f=m.length-1}else if(f<0)if(x)f=0;else return-1;if(typeof c=="string"&&(c=o.from(c,y)),o.isBuffer(c))return c.length===0?-1:oa(m,c,f,y,x);if(typeof c=="number")return c=c&255,typeof Uint8Array.prototype.indexOf=="function"?x?Uint8Array.prototype.indexOf.call(m,c,f):Uint8Array.prototype.lastIndexOf.call(m,c,f):oa(m,[c],f,y,x);throw new TypeError("val must be string, number or Buffer")}function oa(m,c,f,y,x){let R=1,H=m.length,D=c.length;if(y!==void 0&&(y=String(y).toLowerCase(),y==="ucs2"||y==="ucs-2"||y==="utf16le"||y==="utf-16le")){if(m.length<2||c.length<2)return-1;R=2,H/=2,D/=2,f/=2}function ve(G,ne){return R===1?G[ne]:G.readUInt16BE(ne*R)}let F;if(x){let G=-1;for(F=f;F<H;F++)if(ve(m,F)===ve(c,G===-1?0:F-G)){if(G===-1&&(G=F),F-G+1===D)return G*R}else G!==-1&&(F-=F-G),G=-1}else for(f+D>H&&(f=H-D),F=f;F>=0;F--){let G=!0;for(let ne=0;ne<D;ne++)if(ve(m,F+ne)!==ve(c,ne)){G=!1;break}if(G)return F}return-1}o.prototype.includes=function(c,f,y){return this.indexOf(c,f,y)!==-1},o.prototype.indexOf=function(c,f,y){return aa(this,c,f,y,!0)},o.prototype.lastIndexOf=function(c,f,y){return aa(this,c,f,y,!1)};function ua(m,c,f,y){f=Number(f)||0;const x=m.length-f;y?(y=Number(y),y>x&&(y=x)):y=x;const R=c.length;y>R/2&&(y=R/2);let H;for(H=0;H<y;++H){const D=parseInt(c.substr(H*2,2),16);if(Jt(D))return H;m[f+H]=D}return H}function ae(m,c,f,y){return be(Ut(c,m.length-f),m,f,y)}function va(m,c,f,y){return be(we(c),m,f,y)}function j(m,c,f,y){return be(hi(c),m,f,y)}function l(m,c,f,y){return be(ze(c,m.length-f),m,f,y)}o.prototype.write=function(c,f,y,x){if(f===void 0)x="utf8",y=this.length,f=0;else if(y===void 0&&typeof f=="string")x=f,y=this.length,f=0;else if(isFinite(f))f=f>>>0,isFinite(y)?(y=y>>>0,x===void 0&&(x="utf8")):(x=y,y=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");const R=this.length-f;if((y===void 0||y>R)&&(y=R),c.length>0&&(y<0||f<0)||f>this.length)throw new RangeError("Attempt to write outside buffer bounds");x||(x="utf8");let H=!1;for(;;)switch(x){case"hex":return ua(this,c,f,y);case"utf8":case"utf-8":return ae(this,c,f,y);case"ascii":case"latin1":case"binary":return va(this,c,f,y);case"base64":return j(this,c,f,y);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return l(this,c,f,y);default:if(H)throw new TypeError("Unknown encoding: "+x);x=(""+x).toLowerCase(),H=!0}},o.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function g(m,c,f){return c===0&&f===m.length?e.fromByteArray(m):e.fromByteArray(m.slice(c,f))}function b(m,c,f){f=Math.min(m.length,f);const y=[];let x=c;for(;x<f;){const R=m[x];let H=null,D=R>239?4:R>223?3:R>191?2:1;if(x+D<=f){let ve,F,G,ne;switch(D){case 1:R<128&&(H=R);break;case 2:ve=m[x+1],(ve&192)===128&&(ne=(R&31)<<6|ve&63,ne>127&&(H=ne));break;case 3:ve=m[x+1],F=m[x+2],(ve&192)===128&&(F&192)===128&&(ne=(R&15)<<12|(ve&63)<<6|F&63,ne>2047&&(ne<55296||ne>57343)&&(H=ne));break;case 4:ve=m[x+1],F=m[x+2],G=m[x+3],(ve&192)===128&&(F&192)===128&&(G&192)===128&&(ne=(R&15)<<18|(ve&63)<<12|(F&63)<<6|G&63,ne>65535&&ne<1114112&&(H=ne))}}H===null?(H=65533,D=1):H>65535&&(H-=65536,y.push(H>>>10&1023|55296),H=56320|H&1023),y.push(H),x+=D}return z(y)}const k=4096;function z(m){const c=m.length;if(c<=k)return String.fromCharCode.apply(String,m);let f="",y=0;for(;y<c;)f+=String.fromCharCode.apply(String,m.slice(y,y+=k));return f}function B(m,c,f){let y="";f=Math.min(m.length,f);for(let x=c;x<f;++x)y+=String.fromCharCode(m[x]&127);return y}function M(m,c,f){let y="";f=Math.min(m.length,f);for(let x=c;x<f;++x)y+=String.fromCharCode(m[x]);return y}function w(m,c,f){const y=m.length;(!c||c<0)&&(c=0),(!f||f<0||f>y)&&(f=y);let x="";for(let R=c;R<f;++R)x+=Se[m[R]];return x}function h(m,c,f){const y=m.slice(c,f);let x="";for(let R=0;R<y.length-1;R+=2)x+=String.fromCharCode(y[R]+y[R+1]*256);return x}o.prototype.slice=function(c,f){const y=this.length;c=~~c,f=f===void 0?y:~~f,c<0?(c+=y,c<0&&(c=0)):c>y&&(c=y),f<0?(f+=y,f<0&&(f=0)):f>y&&(f=y),f<c&&(f=c);const x=this.subarray(c,f);return Object.setPrototypeOf(x,o.prototype),x};function _(m,c,f){if(m%1!==0||m<0)throw new RangeError("offset is not uint");if(m+c>f)throw new RangeError("Trying to access beyond buffer length")}o.prototype.readUintLE=o.prototype.readUIntLE=function(c,f,y){c=c>>>0,f=f>>>0,y||_(c,f,this.length);let x=this[c],R=1,H=0;for(;++H<f&&(R*=256);)x+=this[c+H]*R;return x},o.prototype.readUintBE=o.prototype.readUIntBE=function(c,f,y){c=c>>>0,f=f>>>0,y||_(c,f,this.length);let x=this[c+--f],R=1;for(;f>0&&(R*=256);)x+=this[c+--f]*R;return x},o.prototype.readUint8=o.prototype.readUInt8=function(c,f){return c=c>>>0,f||_(c,1,this.length),this[c]},o.prototype.readUint16LE=o.prototype.readUInt16LE=function(c,f){return c=c>>>0,f||_(c,2,this.length),this[c]|this[c+1]<<8},o.prototype.readUint16BE=o.prototype.readUInt16BE=function(c,f){return c=c>>>0,f||_(c,2,this.length),this[c]<<8|this[c+1]},o.prototype.readUint32LE=o.prototype.readUInt32LE=function(c,f){return c=c>>>0,f||_(c,4,this.length),(this[c]|this[c+1]<<8|this[c+2]<<16)+this[c+3]*16777216},o.prototype.readUint32BE=o.prototype.readUInt32BE=function(c,f){return c=c>>>0,f||_(c,4,this.length),this[c]*16777216+(this[c+1]<<16|this[c+2]<<8|this[c+3])},o.prototype.readBigUInt64LE=oe(function(c){c=c>>>0,pe(c,"offset");const f=this[c],y=this[c+7];(f===void 0||y===void 0)&&pt(c,this.length-8);const x=f+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24,R=this[++c]+this[++c]*2**8+this[++c]*2**16+y*2**24;return BigInt(x)+(BigInt(R)<<BigInt(32))}),o.prototype.readBigUInt64BE=oe(function(c){c=c>>>0,pe(c,"offset");const f=this[c],y=this[c+7];(f===void 0||y===void 0)&&pt(c,this.length-8);const x=f*2**24+this[++c]*2**16+this[++c]*2**8+this[++c],R=this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+y;return(BigInt(x)<<BigInt(32))+BigInt(R)}),o.prototype.readIntLE=function(c,f,y){c=c>>>0,f=f>>>0,y||_(c,f,this.length);let x=this[c],R=1,H=0;for(;++H<f&&(R*=256);)x+=this[c+H]*R;return R*=128,x>=R&&(x-=Math.pow(2,8*f)),x},o.prototype.readIntBE=function(c,f,y){c=c>>>0,f=f>>>0,y||_(c,f,this.length);let x=f,R=1,H=this[c+--x];for(;x>0&&(R*=256);)H+=this[c+--x]*R;return R*=128,H>=R&&(H-=Math.pow(2,8*f)),H},o.prototype.readInt8=function(c,f){return c=c>>>0,f||_(c,1,this.length),this[c]&128?(255-this[c]+1)*-1:this[c]},o.prototype.readInt16LE=function(c,f){c=c>>>0,f||_(c,2,this.length);const y=this[c]|this[c+1]<<8;return y&32768?y|4294901760:y},o.prototype.readInt16BE=function(c,f){c=c>>>0,f||_(c,2,this.length);const y=this[c+1]|this[c]<<8;return y&32768?y|4294901760:y},o.prototype.readInt32LE=function(c,f){return c=c>>>0,f||_(c,4,this.length),this[c]|this[c+1]<<8|this[c+2]<<16|this[c+3]<<24},o.prototype.readInt32BE=function(c,f){return c=c>>>0,f||_(c,4,this.length),this[c]<<24|this[c+1]<<16|this[c+2]<<8|this[c+3]},o.prototype.readBigInt64LE=oe(function(c){c=c>>>0,pe(c,"offset");const f=this[c],y=this[c+7];(f===void 0||y===void 0)&&pt(c,this.length-8);const x=this[c+4]+this[c+5]*2**8+this[c+6]*2**16+(y<<24);return(BigInt(x)<<BigInt(32))+BigInt(f+this[++c]*2**8+this[++c]*2**16+this[++c]*2**24)}),o.prototype.readBigInt64BE=oe(function(c){c=c>>>0,pe(c,"offset");const f=this[c],y=this[c+7];(f===void 0||y===void 0)&&pt(c,this.length-8);const x=(f<<24)+this[++c]*2**16+this[++c]*2**8+this[++c];return(BigInt(x)<<BigInt(32))+BigInt(this[++c]*2**24+this[++c]*2**16+this[++c]*2**8+y)}),o.prototype.readFloatLE=function(c,f){return c=c>>>0,f||_(c,4,this.length),t.read(this,c,!0,23,4)},o.prototype.readFloatBE=function(c,f){return c=c>>>0,f||_(c,4,this.length),t.read(this,c,!1,23,4)},o.prototype.readDoubleLE=function(c,f){return c=c>>>0,f||_(c,8,this.length),t.read(this,c,!0,52,8)},o.prototype.readDoubleBE=function(c,f){return c=c>>>0,f||_(c,8,this.length),t.read(this,c,!1,52,8)};function O(m,c,f,y,x,R){if(!o.isBuffer(m))throw new TypeError('"buffer" argument must be a Buffer instance');if(c>x||c<R)throw new RangeError('"value" argument is out of bounds');if(f+y>m.length)throw new RangeError("Index out of range")}o.prototype.writeUintLE=o.prototype.writeUIntLE=function(c,f,y,x){if(c=+c,f=f>>>0,y=y>>>0,!x){const D=Math.pow(2,8*y)-1;O(this,c,f,y,D,0)}let R=1,H=0;for(this[f]=c&255;++H<y&&(R*=256);)this[f+H]=c/R&255;return f+y},o.prototype.writeUintBE=o.prototype.writeUIntBE=function(c,f,y,x){if(c=+c,f=f>>>0,y=y>>>0,!x){const D=Math.pow(2,8*y)-1;O(this,c,f,y,D,0)}let R=y-1,H=1;for(this[f+R]=c&255;--R>=0&&(H*=256);)this[f+R]=c/H&255;return f+y},o.prototype.writeUint8=o.prototype.writeUInt8=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,1,255,0),this[f]=c&255,f+1},o.prototype.writeUint16LE=o.prototype.writeUInt16LE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,2,65535,0),this[f]=c&255,this[f+1]=c>>>8,f+2},o.prototype.writeUint16BE=o.prototype.writeUInt16BE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,2,65535,0),this[f]=c>>>8,this[f+1]=c&255,f+2},o.prototype.writeUint32LE=o.prototype.writeUInt32LE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,4,4294967295,0),this[f+3]=c>>>24,this[f+2]=c>>>16,this[f+1]=c>>>8,this[f]=c&255,f+4},o.prototype.writeUint32BE=o.prototype.writeUInt32BE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,4,4294967295,0),this[f]=c>>>24,this[f+1]=c>>>16,this[f+2]=c>>>8,this[f+3]=c&255,f+4};function K(m,c,f,y,x){ke(c,y,x,m,f,7);let R=Number(c&BigInt(4294967295));m[f++]=R,R=R>>8,m[f++]=R,R=R>>8,m[f++]=R,R=R>>8,m[f++]=R;let H=Number(c>>BigInt(32)&BigInt(4294967295));return m[f++]=H,H=H>>8,m[f++]=H,H=H>>8,m[f++]=H,H=H>>8,m[f++]=H,f}function U(m,c,f,y,x){ke(c,y,x,m,f,7);let R=Number(c&BigInt(4294967295));m[f+7]=R,R=R>>8,m[f+6]=R,R=R>>8,m[f+5]=R,R=R>>8,m[f+4]=R;let H=Number(c>>BigInt(32)&BigInt(4294967295));return m[f+3]=H,H=H>>8,m[f+2]=H,H=H>>8,m[f+1]=H,H=H>>8,m[f]=H,f+8}o.prototype.writeBigUInt64LE=oe(function(c,f=0){return K(this,c,f,BigInt(0),BigInt("0xffffffffffffffff"))}),o.prototype.writeBigUInt64BE=oe(function(c,f=0){return U(this,c,f,BigInt(0),BigInt("0xffffffffffffffff"))}),o.prototype.writeIntLE=function(c,f,y,x){if(c=+c,f=f>>>0,!x){const ve=Math.pow(2,8*y-1);O(this,c,f,y,ve-1,-ve)}let R=0,H=1,D=0;for(this[f]=c&255;++R<y&&(H*=256);)c<0&&D===0&&this[f+R-1]!==0&&(D=1),this[f+R]=(c/H>>0)-D&255;return f+y},o.prototype.writeIntBE=function(c,f,y,x){if(c=+c,f=f>>>0,!x){const ve=Math.pow(2,8*y-1);O(this,c,f,y,ve-1,-ve)}let R=y-1,H=1,D=0;for(this[f+R]=c&255;--R>=0&&(H*=256);)c<0&&D===0&&this[f+R+1]!==0&&(D=1),this[f+R]=(c/H>>0)-D&255;return f+y},o.prototype.writeInt8=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,1,127,-128),c<0&&(c=255+c+1),this[f]=c&255,f+1},o.prototype.writeInt16LE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,2,32767,-32768),this[f]=c&255,this[f+1]=c>>>8,f+2},o.prototype.writeInt16BE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,2,32767,-32768),this[f]=c>>>8,this[f+1]=c&255,f+2},o.prototype.writeInt32LE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,4,2147483647,-2147483648),this[f]=c&255,this[f+1]=c>>>8,this[f+2]=c>>>16,this[f+3]=c>>>24,f+4},o.prototype.writeInt32BE=function(c,f,y){return c=+c,f=f>>>0,y||O(this,c,f,4,2147483647,-2147483648),c<0&&(c=4294967295+c+1),this[f]=c>>>24,this[f+1]=c>>>16,this[f+2]=c>>>8,this[f+3]=c&255,f+4},o.prototype.writeBigInt64LE=oe(function(c,f=0){return K(this,c,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),o.prototype.writeBigInt64BE=oe(function(c,f=0){return U(this,c,f,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))});function W(m,c,f,y,x,R){if(f+y>m.length)throw new RangeError("Index out of range");if(f<0)throw new RangeError("Index out of range")}function Q(m,c,f,y,x){return c=+c,f=f>>>0,x||W(m,c,f,4),t.write(m,c,f,y,23,4),f+4}o.prototype.writeFloatLE=function(c,f,y){return Q(this,c,f,!0,y)},o.prototype.writeFloatBE=function(c,f,y){return Q(this,c,f,!1,y)};function se(m,c,f,y,x){return c=+c,f=f>>>0,x||W(m,c,f,8),t.write(m,c,f,y,52,8),f+8}o.prototype.writeDoubleLE=function(c,f,y){return se(this,c,f,!0,y)},o.prototype.writeDoubleBE=function(c,f,y){return se(this,c,f,!1,y)},o.prototype.copy=function(c,f,y,x){if(!o.isBuffer(c))throw new TypeError("argument should be a Buffer");if(y||(y=0),!x&&x!==0&&(x=this.length),f>=c.length&&(f=c.length),f||(f=0),x>0&&x<y&&(x=y),x===y||c.length===0||this.length===0)return 0;if(f<0)throw new RangeError("targetStart out of bounds");if(y<0||y>=this.length)throw new RangeError("Index out of range");if(x<0)throw new RangeError("sourceEnd out of bounds");x>this.length&&(x=this.length),c.length-f<x-y&&(x=c.length-f+y);const R=x-y;return this===c&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(f,y,x):Uint8Array.prototype.set.call(c,this.subarray(y,x),f),R},o.prototype.fill=function(c,f,y,x){if(typeof c=="string"){if(typeof f=="string"?(x=f,f=0,y=this.length):typeof y=="string"&&(x=y,y=this.length),x!==void 0&&typeof x!="string")throw new TypeError("encoding must be a string");if(typeof x=="string"&&!o.isEncoding(x))throw new TypeError("Unknown encoding: "+x);if(c.length===1){const H=c.charCodeAt(0);(x==="utf8"&&H<128||x==="latin1")&&(c=H)}}else typeof c=="number"?c=c&255:typeof c=="boolean"&&(c=Number(c));if(f<0||this.length<f||this.length<y)throw new RangeError("Out of range index");if(y<=f)return this;f=f>>>0,y=y===void 0?this.length:y>>>0,c||(c=0);let R;if(typeof c=="number")for(R=f;R<y;++R)this[R]=c;else{const H=o.isBuffer(c)?c:o.from(c,x),D=H.length;if(D===0)throw new TypeError('The value "'+c+'" is invalid for argument "value"');for(R=0;R<y-f;++R)this[R+f]=H[R%D]}return this};const la={};function ie(m,c,f){la[m]=class extends f{constructor(){super(),Object.defineProperty(this,"message",{value:c.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${m}]`,this.stack,delete this.name}get code(){return m}set code(x){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:x,writable:!0})}toString(){return`${this.name} [${m}]: ${this.message}`}}}ie("ERR_BUFFER_OUT_OF_BOUNDS",function(m){return m?`${m} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),ie("ERR_INVALID_ARG_TYPE",function(m,c){return`The "${m}" argument must be of type number. Received type ${typeof c}`},TypeError),ie("ERR_OUT_OF_RANGE",function(m,c,f){let y=`The value of "${m}" is out of range.`,x=f;return Number.isInteger(f)&&Math.abs(f)>2**32?x=he(String(f)):typeof f=="bigint"&&(x=String(f),(f>BigInt(2)**BigInt(32)||f<-(BigInt(2)**BigInt(32)))&&(x=he(x)),x+="n"),y+=` It must be ${c}. Received ${x}`,y},RangeError);function he(m){let c="",f=m.length;const y=m[0]==="-"?1:0;for(;f>=y+4;f-=3)c=`_${m.slice(f-3,f)}${c}`;return`${m.slice(0,f)}${c}`}function Mi(m,c,f){pe(c,"offset"),(m[c]===void 0||m[c+f]===void 0)&&pt(c,m.length-(f+1))}function ke(m,c,f,y,x,R){if(m>f||m<c){const H=typeof c=="bigint"?"n":"";let D;throw R>3?c===0||c===BigInt(0)?D=`>= 0${H} and < 2${H} ** ${(R+1)*8}${H}`:D=`>= -(2${H} ** ${(R+1)*8-1}${H}) and < 2 ** ${(R+1)*8-1}${H}`:D=`>= ${c}${H} and <= ${f}${H}`,new la.ERR_OUT_OF_RANGE("value",D,m)}Mi(y,x,R)}function pe(m,c){if(typeof m!="number")throw new la.ERR_INVALID_ARG_TYPE(c,"number",m)}function pt(m,c,f){throw Math.floor(m)!==m?(pe(m,f),new la.ERR_OUT_OF_RANGE(f||"offset","an integer",m)):c<0?new la.ERR_BUFFER_OUT_OF_BOUNDS:new la.ERR_OUT_OF_RANGE(f||"offset",`>= ${f?1:0} and <= ${c}`,m)}const ye=/[^+/0-9A-Za-z-_]/g;function _e(m){if(m=m.split("=")[0],m=m.trim().replace(ye,""),m.length<2)return"";for(;m.length%4!==0;)m=m+"=";return m}function Ut(m,c){c=c||1/0;let f;const y=m.length;let x=null;const R=[];for(let H=0;H<y;++H){if(f=m.charCodeAt(H),f>55295&&f<57344){if(!x){if(f>56319){(c-=3)>-1&&R.push(239,191,189);continue}else if(H+1===y){(c-=3)>-1&&R.push(239,191,189);continue}x=f;continue}if(f<56320){(c-=3)>-1&&R.push(239,191,189),x=f;continue}f=(x-55296<<10|f-56320)+65536}else x&&(c-=3)>-1&&R.push(239,191,189);if(x=null,f<128){if((c-=1)<0)break;R.push(f)}else if(f<2048){if((c-=2)<0)break;R.push(f>>6|192,f&63|128)}else if(f<65536){if((c-=3)<0)break;R.push(f>>12|224,f>>6&63|128,f&63|128)}else if(f<1114112){if((c-=4)<0)break;R.push(f>>18|240,f>>12&63|128,f>>6&63|128,f&63|128)}else throw new Error("Invalid code point")}return R}function we(m){const c=[];for(let f=0;f<m.length;++f)c.push(m.charCodeAt(f)&255);return c}function ze(m,c){let f,y,x;const R=[];for(let H=0;H<m.length&&!((c-=2)<0);++H)f=m.charCodeAt(H),y=f>>8,x=f%256,R.push(x),R.push(y);return R}function hi(m){return e.toByteArray(_e(m))}function be(m,c,f,y){let x;for(x=0;x<y&&!(x+f>=c.length||x>=m.length);++x)c[x+f]=m[x];return x}function te(m,c){return m instanceof c||m!=null&&m.constructor!=null&&m.constructor.name!=null&&m.constructor.name===c.name}function Jt(m){return m!==m}const Se=function(){const m="0123456789abcdef",c=new Array(256);for(let f=0;f<16;++f){const y=f*16;for(let x=0;x<16;++x)c[y+x]=m[f]+m[x]}return c}();function oe(m){return typeof BigInt>"u"?Li:m}function Li(){throw new Error("BigInt not supported")}})(Cr);var Ci=Cr,Gt=Ci.Buffer,za={},Sa;for(Sa in Ci)Ci.hasOwnProperty(Sa)&&(Sa==="SlowBuffer"||Sa==="Buffer"||(za[Sa]=Ci[Sa]));var $t=za.Buffer={};for(Sa in Gt)Gt.hasOwnProperty(Sa)&&(Sa==="allocUnsafe"||Sa==="allocUnsafeSlow"||($t[Sa]=Gt[Sa]));za.Buffer.prototype=Gt.prototype;(!$t.from||$t.from===Uint8Array.from)&&($t.from=function(a,e,t){if(typeof a=="number")throw new TypeError('The "value" argument must not be of type number. Received type '+typeof a);if(a&&typeof a.length>"u")throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof a);return Gt(a,e,t)});$t.alloc||($t.alloc=function(a,e,t){if(typeof a!="number")throw new TypeError('The "size" argument must be of type number. Received type '+typeof a);if(a<0||a>=2*(1<<30))throw new RangeError('The value "'+a+'" is invalid for option "size"');var i=Gt(a);return!e||e.length===0?i.fill(0):typeof t=="string"?i.fill(e,t):i.fill(e),i});if(!za.kStringMaxLength)try{za.kStringMaxLength=process.binding("buffer").kStringMaxLength}catch{}za.constants||(za.constants={MAX_LENGTH:za.kMaxLength},za.kStringMaxLength&&(za.constants.MAX_STRING_LENGTH=za.kStringMaxLength));var Nr=za,tn={};const $0=Ka;function Ma(a){this._reporterState={obj:null,path:[],options:a||{},errors:[]}}tn.Reporter=Ma;Ma.prototype.isError=function(e){return e instanceof Zt};Ma.prototype.save=function(){const e=this._reporterState;return{obj:e.obj,pathLen:e.path.length}};Ma.prototype.restore=function(e){const t=this._reporterState;t.obj=e.obj,t.path=t.path.slice(0,e.pathLen)};Ma.prototype.enterKey=function(e){return this._reporterState.path.push(e)};Ma.prototype.exitKey=function(e){const t=this._reporterState;t.path=t.path.slice(0,e-1)};Ma.prototype.leaveKey=function(e,t,i){const n=this._reporterState;this.exitKey(e),n.obj!==null&&(n.obj[t]=i)};Ma.prototype.path=function(){return this._reporterState.path.join("/")};Ma.prototype.enterObject=function(){const e=this._reporterState,t=e.obj;return e.obj={},t};Ma.prototype.leaveObject=function(e){const t=this._reporterState,i=t.obj;return t.obj=e,i};Ma.prototype.error=function(e){let t;const i=this._reporterState,n=e instanceof Zt;if(n?t=e:t=new Zt(i.path.map(function(r){return"["+JSON.stringify(r)+"]"}).join(""),e.message||e,e.stack),!i.options.partial)throw t;return n||i.errors.push(t),t};Ma.prototype.wrapResult=function(e){const t=this._reporterState;return t.options.partial?{result:this.isError(e)?null:e,errors:t.errors}:e};function Zt(a,e){this.path=a,this.rethrow(e)}$0(Zt,Error);Zt.prototype.rethrow=function(e){if(this.message=e+" at: "+(this.path||"(shallow)"),Error.captureStackTrace&&Error.captureStackTrace(this,Zt),!this.stack)try{throw new Error(this.message)}catch(t){this.stack=t.stack}return this};var Tt={};const V0=Ka,nn=tn.Reporter,Yt=Nr.Buffer;function xa(a,e){if(nn.call(this,e),!Yt.isBuffer(a)){this.error("Input not Buffer");return}this.base=a,this.offset=0,this.length=a.length}V0(xa,nn);Tt.DecoderBuffer=xa;xa.isDecoderBuffer=function(e){return e instanceof xa?!0:typeof e=="object"&&Yt.isBuffer(e.base)&&e.constructor.name==="DecoderBuffer"&&typeof e.offset=="number"&&typeof e.length=="number"&&typeof e.save=="function"&&typeof e.restore=="function"&&typeof e.isEmpty=="function"&&typeof e.readUInt8=="function"&&typeof e.skip=="function"&&typeof e.raw=="function"};xa.prototype.save=function(){return{offset:this.offset,reporter:nn.prototype.save.call(this)}};xa.prototype.restore=function(e){const t=new xa(this.base);return t.offset=e.offset,t.length=this.offset,this.offset=e.offset,nn.prototype.restore.call(this,e.reporter),t};xa.prototype.isEmpty=function(){return this.offset===this.length};xa.prototype.readUInt8=function(e){return this.offset+1<=this.length?this.base.readUInt8(this.offset++,!0):this.error(e||"DecoderBuffer overrun")};xa.prototype.skip=function(e,t){if(!(this.offset+e<=this.length))return this.error(t||"DecoderBuffer overrun");const i=new xa(this.base);return i._reporterState=this._reporterState,i.offset=this.offset,i.length=this.offset+e,this.offset+=e,i};xa.prototype.raw=function(e){return this.base.slice(e?e.offset:this.offset,this.length)};function Xt(a,e){if(Array.isArray(a))this.length=0,this.value=a.map(function(t){return Xt.isEncoderBuffer(t)||(t=new Xt(t,e)),this.length+=t.length,t},this);else if(typeof a=="number"){if(!(0<=a&&a<=255))return e.error("non-byte EncoderBuffer value");this.value=a,this.length=1}else if(typeof a=="string")this.value=a,this.length=Yt.byteLength(a);else if(Yt.isBuffer(a))this.value=a,this.length=a.length;else return e.error("Unsupported type: "+typeof a)}Tt.EncoderBuffer=Xt;Xt.isEncoderBuffer=function(e){return e instanceof Xt?!0:typeof e=="object"&&e.constructor.name==="EncoderBuffer"&&typeof e.length=="number"&&typeof e.join=="function"};Xt.prototype.join=function(e,t){return e||(e=Yt.alloc(this.length)),t||(t=0),this.length===0||(Array.isArray(this.value)?this.value.forEach(function(i){i.join(e,t),t+=i.length}):(typeof this.value=="number"?e[t]=this.value:typeof this.value=="string"?e.write(this.value,t):Yt.isBuffer(this.value)&&this.value.copy(e,t),t+=this.length)),e};var Rt=jo;function jo(a,e){if(!a)throw new Error(e||"Assertion failed")}jo.equal=function(e,t,i){if(e!=t)throw new Error(i||"Assertion failed: "+e+" != "+t)};const Z0=tn.Reporter,Y0=Tt.EncoderBuffer,X0=Tt.DecoderBuffer,ca=Rt,Ao=["seq","seqof","set","setof","objid","bool","gentime","utctime","null_","enum","int","objDesc","bitstr","bmpstr","charstr","genstr","graphstr","ia5str","iso646str","numstr","octstr","printstr","t61str","unistr","utf8str","videostr"],Q0=["key","obj","use","optional","explicit","implicit","def","choice","any","contains"].concat(Ao),eb=["_peekTag","_decodeTag","_use","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeInt","_decodeBool","_decodeList","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool"];function fe(a,e,t){const i={};this._baseState=i,i.name=t,i.enc=a,i.parent=e||null,i.children=null,i.tag=null,i.args=null,i.reverseArgs=null,i.choice=null,i.optional=!1,i.any=!1,i.obj=!1,i.use=null,i.useDecoder=null,i.key=null,i.default=null,i.explicit=null,i.implicit=null,i.contains=null,i.parent||(i.children=[],this._wrap())}var Ir=fe;const ab=["enc","parent","children","tag","args","reverseArgs","choice","optional","any","obj","use","alteredUse","key","default","explicit","implicit","contains"];fe.prototype.clone=function(){const e=this._baseState,t={};ab.forEach(function(n){t[n]=e[n]});const i=new this.constructor(t.parent);return i._baseState=t,i};fe.prototype._wrap=function(){const e=this._baseState;Q0.forEach(function(t){this[t]=function(){const n=new this.constructor(this);return e.children.push(n),n[t].apply(n,arguments)}},this)};fe.prototype._init=function(e){const t=this._baseState;ca(t.parent===null),e.call(this),t.children=t.children.filter(function(i){return i._baseState.parent===this},this),ca.equal(t.children.length,1,"Root node can have only one child")};fe.prototype._useArgs=function(e){const t=this._baseState,i=e.filter(function(n){return n instanceof this.constructor},this);e=e.filter(function(n){return!(n instanceof this.constructor)},this),i.length!==0&&(ca(t.children===null),t.children=i,i.forEach(function(n){n._baseState.parent=this},this)),e.length!==0&&(ca(t.args===null),t.args=e,t.reverseArgs=e.map(function(n){if(typeof n!="object"||n.constructor!==Object)return n;const r={};return Object.keys(n).forEach(function(s){s==(s|0)&&(s|=0);const o=n[s];r[o]=s}),r}))};eb.forEach(function(a){fe.prototype[a]=function(){const t=this._baseState;throw new Error(a+" not implemented for encoding: "+t.enc)}});Ao.forEach(function(a){fe.prototype[a]=function(){const t=this._baseState,i=Array.prototype.slice.call(arguments);return ca(t.tag===null),t.tag=a,this._useArgs(i),this}});fe.prototype.use=function(e){ca(e);const t=this._baseState;return ca(t.use===null),t.use=e,this};fe.prototype.optional=function(){const e=this._baseState;return e.optional=!0,this};fe.prototype.def=function(e){const t=this._baseState;return ca(t.default===null),t.default=e,t.optional=!0,this};fe.prototype.explicit=function(e){const t=this._baseState;return ca(t.explicit===null&&t.implicit===null),t.explicit=e,this};fe.prototype.implicit=function(e){const t=this._baseState;return ca(t.explicit===null&&t.implicit===null),t.implicit=e,this};fe.prototype.obj=function(){const e=this._baseState,t=Array.prototype.slice.call(arguments);return e.obj=!0,t.length!==0&&this._useArgs(t),this};fe.prototype.key=function(e){const t=this._baseState;return ca(t.key===null),t.key=e,this};fe.prototype.any=function(){const e=this._baseState;return e.any=!0,this};fe.prototype.choice=function(e){const t=this._baseState;return ca(t.choice===null),t.choice=e,this._useArgs(Object.keys(e).map(function(i){return e[i]})),this};fe.prototype.contains=function(e){const t=this._baseState;return ca(t.use===null),t.contains=e,this};fe.prototype._decode=function(e,t){const i=this._baseState;if(i.parent===null)return e.wrapResult(i.children[0]._decode(e,t));let n=i.default,r=!0,s=null;if(i.key!==null&&(s=e.enterKey(i.key)),i.optional){let d=null;if(i.explicit!==null?d=i.explicit:i.implicit!==null?d=i.implicit:i.tag!==null&&(d=i.tag),d===null&&!i.any){const p=e.save();try{i.choice===null?this._decodeGeneric(i.tag,e,t):this._decodeChoice(e,t),r=!0}catch{r=!1}e.restore(p)}else if(r=this._peekTag(e,d,i.any),e.isError(r))return r}let o;if(i.obj&&r&&(o=e.enterObject()),r){if(i.explicit!==null){const p=this._decodeTag(e,i.explicit);if(e.isError(p))return p;e=p}const d=e.offset;if(i.use===null&&i.choice===null){let p;i.any&&(p=e.save());const u=this._decodeTag(e,i.implicit!==null?i.implicit:i.tag,i.any);if(e.isError(u))return u;i.any?n=e.raw(p):e=u}if(t&&t.track&&i.tag!==null&&t.track(e.path(),d,e.length,"tagged"),t&&t.track&&i.tag!==null&&t.track(e.path(),e.offset,e.length,"content"),i.any||(i.choice===null?n=this._decodeGeneric(i.tag,e,t):n=this._decodeChoice(e,t)),e.isError(n))return n;if(!i.any&&i.choice===null&&i.children!==null&&i.children.forEach(function(u){u._decode(e,t)}),i.contains&&(i.tag==="octstr"||i.tag==="bitstr")){const p=new X0(n);n=this._getUse(i.contains,e._reporterState.obj)._decode(p,t)}}return i.obj&&r&&(n=e.leaveObject(o)),i.key!==null&&(n!==null||r===!0)?e.leaveKey(s,i.key,n):s!==null&&e.exitKey(s),n};fe.prototype._decodeGeneric=function(e,t,i){const n=this._baseState;return e==="seq"||e==="set"?null:e==="seqof"||e==="setof"?this._decodeList(t,e,n.args[0],i):/str$/.test(e)?this._decodeStr(t,e,i):e==="objid"&&n.args?this._decodeObjid(t,n.args[0],n.args[1],i):e==="objid"?this._decodeObjid(t,null,null,i):e==="gentime"||e==="utctime"?this._decodeTime(t,e,i):e==="null_"?this._decodeNull(t,i):e==="bool"?this._decodeBool(t,i):e==="objDesc"?this._decodeStr(t,e,i):e==="int"||e==="enum"?this._decodeInt(t,n.args&&n.args[0],i):n.use!==null?this._getUse(n.use,t._reporterState.obj)._decode(t,i):t.error("unknown tag: "+e)};fe.prototype._getUse=function(e,t){const i=this._baseState;return i.useDecoder=this._use(e,t),ca(i.useDecoder._baseState.parent===null),i.useDecoder=i.useDecoder._baseState.children[0],i.implicit!==i.useDecoder._baseState.implicit&&(i.useDecoder=i.useDecoder.clone(),i.useDecoder._baseState.implicit=i.implicit),i.useDecoder};fe.prototype._decodeChoice=function(e,t){const i=this._baseState;let n=null,r=!1;return Object.keys(i.choice).some(function(s){const o=e.save(),d=i.choice[s];try{const p=d._decode(e,t);if(e.isError(p))return!1;n={type:s,value:p},r=!0}catch{return e.restore(o),!1}return!0},this),r?n:e.error("Choice not matched")};fe.prototype._createEncoderBuffer=function(e){return new Y0(e,this.reporter)};fe.prototype._encode=function(e,t,i){const n=this._baseState;if(n.default!==null&&n.default===e)return;const r=this._encodeValue(e,t,i);if(r!==void 0&&!this._skipDefault(r,t,i))return r};fe.prototype._encodeValue=function(e,t,i){const n=this._baseState;if(n.parent===null)return n.children[0]._encode(e,t||new Z0);let r=null;if(this.reporter=t,n.optional&&e===void 0)if(n.default!==null)e=n.default;else return;let s=null,o=!1;if(n.any)r=this._createEncoderBuffer(e);else if(n.choice)r=this._encodeChoice(e,t);else if(n.contains)s=this._getUse(n.contains,i)._encode(e,t),o=!0;else if(n.children)s=n.children.map(function(d){if(d._baseState.tag==="null_")return d._encode(null,t,e);if(d._baseState.key===null)return t.error("Child should have a key");const p=t.enterKey(d._baseState.key);if(typeof e!="object")return t.error("Child expected, but input is not object");const u=d._encode(e[d._baseState.key],t,e);return t.leaveKey(p),u},this).filter(function(d){return d}),s=this._createEncoderBuffer(s);else if(n.tag==="seqof"||n.tag==="setof"){if(!(n.args&&n.args.length===1))return t.error("Too many args for : "+n.tag);if(!Array.isArray(e))return t.error("seqof/setof, but data is not Array");const d=this.clone();d._baseState.implicit=null,s=this._createEncoderBuffer(e.map(function(p){const u=this._baseState;return this._getUse(u.args[0],e)._encode(p,t)},d))}else n.use!==null?r=this._getUse(n.use,i)._encode(e,t):(s=this._encodePrimitive(n.tag,e),o=!0);if(!n.any&&n.choice===null){const d=n.implicit!==null?n.implicit:n.tag,p=n.implicit===null?"universal":"context";d===null?n.use===null&&t.error("Tag could be omitted only for .use()"):n.use===null&&(r=this._encodeComposite(d,o,p,s))}return n.explicit!==null&&(r=this._encodeComposite(n.explicit,!1,"context",r)),r};fe.prototype._encodeChoice=function(e,t){const i=this._baseState,n=i.choice[e.type];return n||ca(!1,e.type+" not found in "+JSON.stringify(Object.keys(i.choice))),n._encode(e.value,t)};fe.prototype._encodePrimitive=function(e,t){const i=this._baseState;if(/str$/.test(e))return this._encodeStr(t,e);if(e==="objid"&&i.args)return this._encodeObjid(t,i.reverseArgs[0],i.args[1]);if(e==="objid")return this._encodeObjid(t,null,null);if(e==="gentime"||e==="utctime")return this._encodeTime(t,e);if(e==="null_")return this._encodeNull();if(e==="int"||e==="enum")return this._encodeInt(t,i.args&&i.reverseArgs[0]);if(e==="bool")return this._encodeBool(t);if(e==="objDesc")return this._encodeStr(t,e);throw new Error("Unsupported tag: "+e)};fe.prototype._isNumstr=function(e){return/^[0-9 ]*$/.test(e)};fe.prototype._isPrintstr=function(e){return/^[A-Za-z0-9 '()+,-./:=?]*$/.test(e)};var rn={};(function(a){function e(t){const i={};return Object.keys(t).forEach(function(n){(n|0)==n&&(n=n|0);const r=t[n];i[r]=n}),i}a.tagClass={0:"universal",1:"application",2:"context",3:"private"},a.tagClassByName=e(a.tagClass),a.tag={0:"end",1:"bool",2:"int",3:"bitstr",4:"octstr",5:"null_",6:"objid",7:"objDesc",8:"external",9:"real",10:"enum",11:"embed",12:"utf8str",13:"relativeOid",16:"seq",17:"set",18:"numstr",19:"printstr",20:"t61str",21:"videostr",22:"ia5str",23:"utctime",24:"gentime",25:"graphstr",26:"iso646str",27:"genstr",28:"unistr",29:"charstr",30:"bmpstr"},a.tagByName=e(a.tag)})(rn);const tb=Ka,rt=Nr.Buffer,xo=Ir,$n=rn;function Bo(a){this.enc="der",this.name=a.name,this.entity=a,this.tree=new Da,this.tree._init(a.body)}var Eo=Bo;Bo.prototype.encode=function(e,t){return this.tree._encode(e,t).join()};function Da(a){xo.call(this,"der",a)}tb(Da,xo);Da.prototype._encodeComposite=function(e,t,i,n){const r=ib(e,t,i,this.reporter);if(n.length<128){const d=rt.alloc(2);return d[0]=r,d[1]=n.length,this._createEncoderBuffer([d,n])}let s=1;for(let d=n.length;d>=256;d>>=8)s++;const o=rt.alloc(1+1+s);o[0]=r,o[1]=128|s;for(let d=1+s,p=n.length;p>0;d--,p>>=8)o[d]=p&255;return this._createEncoderBuffer([o,n])};Da.prototype._encodeStr=function(e,t){if(t==="bitstr")return this._createEncoderBuffer([e.unused|0,e.data]);if(t==="bmpstr"){const i=rt.alloc(e.length*2);for(let n=0;n<e.length;n++)i.writeUInt16BE(e.charCodeAt(n),n*2);return this._createEncoderBuffer(i)}else return t==="numstr"?this._isNumstr(e)?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: numstr supports only digits and space"):t==="printstr"?this._isPrintstr(e)?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"):/str$/.test(t)?this._createEncoderBuffer(e):t==="objDesc"?this._createEncoderBuffer(e):this.reporter.error("Encoding of string type: "+t+" unsupported")};Da.prototype._encodeObjid=function(e,t,i){if(typeof e=="string"){if(!t)return this.reporter.error("string objid given, but no values map found");if(!t.hasOwnProperty(e))return this.reporter.error("objid not found in values map");e=t[e].split(/[\s.]+/g);for(let o=0;o<e.length;o++)e[o]|=0}else if(Array.isArray(e)){e=e.slice();for(let o=0;o<e.length;o++)e[o]|=0}if(!Array.isArray(e))return this.reporter.error("objid() should be either array or string, got: "+JSON.stringify(e));if(!i){if(e[1]>=40)return this.reporter.error("Second objid identifier OOB");e.splice(0,2,e[0]*40+e[1])}let n=0;for(let o=0;o<e.length;o++){let d=e[o];for(n++;d>=128;d>>=7)n++}const r=rt.alloc(n);let s=r.length-1;for(let o=e.length-1;o>=0;o--){let d=e[o];for(r[s--]=d&127;(d>>=7)>0;)r[s--]=128|d&127}return this._createEncoderBuffer(r)};function ka(a){return a<10?"0"+a:a}Da.prototype._encodeTime=function(e,t){let i;const n=new Date(e);return t==="gentime"?i=[ka(n.getUTCFullYear()),ka(n.getUTCMonth()+1),ka(n.getUTCDate()),ka(n.getUTCHours()),ka(n.getUTCMinutes()),ka(n.getUTCSeconds()),"Z"].join(""):t==="utctime"?i=[ka(n.getUTCFullYear()%100),ka(n.getUTCMonth()+1),ka(n.getUTCDate()),ka(n.getUTCHours()),ka(n.getUTCMinutes()),ka(n.getUTCSeconds()),"Z"].join(""):this.reporter.error("Encoding "+t+" time is not supported yet"),this._encodeStr(i,"octstr")};Da.prototype._encodeNull=function(){return this._createEncoderBuffer("")};Da.prototype._encodeInt=function(e,t){if(typeof e=="string"){if(!t)return this.reporter.error("String int or enum given, but no values map");if(!t.hasOwnProperty(e))return this.reporter.error("Values map doesn't contain: "+JSON.stringify(e));e=t[e]}if(typeof e!="number"&&!rt.isBuffer(e)){const r=e.toArray();!e.sign&&r[0]&128&&r.unshift(0),e=rt.from(r)}if(rt.isBuffer(e)){let r=e.length;e.length===0&&r++;const s=rt.alloc(r);return e.copy(s),e.length===0&&(s[0]=0),this._createEncoderBuffer(s)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);let i=1;for(let r=e;r>=256;r>>=8)i++;const n=new Array(i);for(let r=n.length-1;r>=0;r--)n[r]=e&255,e>>=8;return n[0]&128&&n.unshift(0),this._createEncoderBuffer(rt.from(n))};Da.prototype._encodeBool=function(e){return this._createEncoderBuffer(e?255:0)};Da.prototype._use=function(e,t){return typeof e=="function"&&(e=e(t)),e._getEncoder("der").tree};Da.prototype._skipDefault=function(e,t,i){const n=this._baseState;let r;if(n.default===null)return!1;const s=e.join();if(n.defaultBuffer===void 0&&(n.defaultBuffer=this._encodeValue(n.default,t,i).join()),s.length!==n.defaultBuffer.length)return!1;for(r=0;r<s.length;r++)if(s[r]!==n.defaultBuffer[r])return!1;return!0};function ib(a,e,t,i){let n;if(a==="seqof"?a="seq":a==="setof"&&(a="set"),$n.tagByName.hasOwnProperty(a))n=$n.tagByName[a];else if(typeof a=="number"&&(a|0)===a)n=a;else return i.error("Unknown tag: "+a);return n>=31?i.error("Multi-octet tag encoding unsupported"):(e||(n|=32),n|=$n.tagClassByName[t||"universal"]<<6,n)}const nb=Ka,Pr=Eo;function Tr(a){Pr.call(this,a),this.enc="pem"}nb(Tr,Pr);var rb=Tr;Tr.prototype.encode=function(e,t){const n=Pr.prototype.encode.call(this,e).toString("base64"),r=["-----BEGIN "+t.label+"-----"];for(let s=0;s<n.length;s+=64)r.push(n.slice(s,s+64));return r.push("-----END "+t.label+"-----"),r.join(`
`)};(function(a){const e=a;e.der=Eo,e.pem=rb})(Hr);var Kr={};const sb=Ka,ob=Ta,As=Tt.DecoderBuffer,Mo=Ir,xs=rn;function Lo(a){this.enc="der",this.name=a.name,this.entity=a,this.tree=new ma,this.tree._init(a.body)}var Ro=Lo;Lo.prototype.decode=function(e,t){return As.isDecoderBuffer(e)||(e=new As(e,t)),this.tree._decode(e,t)};function ma(a){Mo.call(this,"der",a)}sb(ma,Mo);ma.prototype._peekTag=function(e,t,i){if(e.isEmpty())return!1;const n=e.save(),r=Dr(e,'Failed to peek tag: "'+t+'"');return e.isError(r)?r:(e.restore(n),r.tag===t||r.tagStr===t||r.tagStr+"of"===t||i)};ma.prototype._decodeTag=function(e,t,i){const n=Dr(e,'Failed to decode tag of "'+t+'"');if(e.isError(n))return n;let r=Ho(e,n.primitive,'Failed to get length of "'+t+'"');if(e.isError(r))return r;if(!i&&n.tag!==t&&n.tagStr!==t&&n.tagStr+"of"!==t)return e.error('Failed to match tag: "'+t+'"');if(n.primitive||r!==null)return e.skip(r,'Failed to match body of: "'+t+'"');const s=e.save(),o=this._skipUntilEnd(e,'Failed to skip indefinite length body: "'+this.tag+'"');return e.isError(o)?o:(r=e.offset-s.offset,e.restore(s),e.skip(r,'Failed to match body of: "'+t+'"'))};ma.prototype._skipUntilEnd=function(e,t){for(;;){const i=Dr(e,t);if(e.isError(i))return i;const n=Ho(e,i.primitive,t);if(e.isError(n))return n;let r;if(i.primitive||n!==null?r=e.skip(n):r=this._skipUntilEnd(e,t),e.isError(r))return r;if(i.tagStr==="end")break}};ma.prototype._decodeList=function(e,t,i,n){const r=[];for(;!e.isEmpty();){const s=this._peekTag(e,"end");if(e.isError(s))return s;const o=i.decode(e,"der",n);if(e.isError(o)&&s)break;r.push(o)}return r};ma.prototype._decodeStr=function(e,t){if(t==="bitstr"){const i=e.readUInt8();return e.isError(i)?i:{unused:i,data:e.raw()}}else if(t==="bmpstr"){const i=e.raw();if(i.length%2===1)return e.error("Decoding of string type: bmpstr length mismatch");let n="";for(let r=0;r<i.length/2;r++)n+=String.fromCharCode(i.readUInt16BE(r*2));return n}else if(t==="numstr"){const i=e.raw().toString("ascii");return this._isNumstr(i)?i:e.error("Decoding of string type: numstr unsupported characters")}else{if(t==="octstr")return e.raw();if(t==="objDesc")return e.raw();if(t==="printstr"){const i=e.raw().toString("ascii");return this._isPrintstr(i)?i:e.error("Decoding of string type: printstr unsupported characters")}else return/str$/.test(t)?e.raw().toString():e.error("Decoding of string type: "+t+" unsupported")}};ma.prototype._decodeObjid=function(e,t,i){let n;const r=[];let s=0,o=0;for(;!e.isEmpty();)o=e.readUInt8(),s<<=7,s|=o&127,o&128||(r.push(s),s=0);o&128&&r.push(s);const d=r[0]/40|0,p=r[0]%40;if(i?n=r:n=[d,p].concat(r.slice(1)),t){let u=t[n.join(" ")];u===void 0&&(u=t[n.join(".")]),u!==void 0&&(n=u)}return n};ma.prototype._decodeTime=function(e,t){const i=e.raw().toString();let n,r,s,o,d,p;if(t==="gentime")n=i.slice(0,4)|0,r=i.slice(4,6)|0,s=i.slice(6,8)|0,o=i.slice(8,10)|0,d=i.slice(10,12)|0,p=i.slice(12,14)|0;else if(t==="utctime")n=i.slice(0,2)|0,r=i.slice(2,4)|0,s=i.slice(4,6)|0,o=i.slice(6,8)|0,d=i.slice(8,10)|0,p=i.slice(10,12)|0,n<70?n=2e3+n:n=1900+n;else return e.error("Decoding "+t+" time is not supported yet");return Date.UTC(n,r-1,s,o,d,p,0)};ma.prototype._decodeNull=function(){return null};ma.prototype._decodeBool=function(e){const t=e.readUInt8();return e.isError(t)?t:t!==0};ma.prototype._decodeInt=function(e,t){const i=e.raw();let n=new ob(i);return t&&(n=t[n.toString(10)]||n),n};ma.prototype._use=function(e,t){return typeof e=="function"&&(e=e(t)),e._getDecoder("der").tree};function Dr(a,e){let t=a.readUInt8(e);if(a.isError(t))return t;const i=xs.tagClass[t>>6],n=(t&32)===0;if((t&31)===31){let s=t;for(t=0;(s&128)===128;){if(s=a.readUInt8(e),a.isError(s))return s;t<<=7,t|=s&127}}else t&=31;const r=xs.tag[t];return{cls:i,primitive:n,tag:t,tagStr:r}}function Ho(a,e,t){let i=a.readUInt8(t);if(a.isError(i))return i;if(!e&&i===128)return null;if(!(i&128))return i;const n=i&127;if(n>4)return a.error("length octect is too long");i=0;for(let r=0;r<n;r++){i<<=8;const s=a.readUInt8(t);if(a.isError(s))return s;i|=s}return i}const lb=Ka,cb=Nr.Buffer,Ur=Ro;function Jr(a){Ur.call(this,a),this.enc="pem"}lb(Jr,Ur);var ub=Jr;Jr.prototype.decode=function(e,t){const i=e.toString().split(/[\r\n]+/g),n=t.label.toUpperCase(),r=/^-----(BEGIN|END) ([^-]+)-----$/;let s=-1,o=-1;for(let u=0;u<i.length;u++){const v=i[u].match(r);if(v!==null&&v[2]===n)if(s===-1){if(v[1]!=="BEGIN")break;s=u}else{if(v[1]!=="END")break;o=u;break}}if(s===-1||o===-1)throw new Error("PEM section not found for: "+n);const d=i.slice(s+1,o).join("");d.replace(/[^a-z0-9+/=]+/gi,"");const p=cb.from(d,"base64");return Ur.prototype.decode.call(this,p,t)};(function(a){const e=a;e.der=Ro,e.pem=ub})(Kr);(function(a){const e=Hr,t=Kr,i=Ka,n=a;n.define=function(o,d){return new r(o,d)};function r(s,o){this.name=s,this.body=o,this.decoders={},this.encoders={}}r.prototype._createNamed=function(o){const d=this.name;function p(u){this._initNamed(u,d)}return i(p,o),p.prototype._initNamed=function(v,S){o.call(this,v,S)},new p(this)},r.prototype._getDecoder=function(o){return o=o||"der",this.decoders.hasOwnProperty(o)||(this.decoders[o]=this._createNamed(t[o])),this.decoders[o]},r.prototype.decode=function(o,d,p){return this._getDecoder(d).decode(o,p)},r.prototype._getEncoder=function(o){return o=o||"der",this.encoders.hasOwnProperty(o)||(this.encoders[o]=this._createNamed(e[o])),this.encoders[o]},r.prototype.encode=function(o,d,p){return this._getEncoder(d).encode(o,p)}})(zo);var Co={};(function(a){const e=a;e.Reporter=tn.Reporter,e.DecoderBuffer=Tt.DecoderBuffer,e.EncoderBuffer=Tt.EncoderBuffer,e.Node=Ir})(Co);var Oo={};(function(a){const e=a;e._reverse=function(i){const n={};return Object.keys(i).forEach(function(r){(r|0)==r&&(r=r|0);const s=i[r];n[s]=r}),n},e.der=rn})(Oo);(function(a){const e=a;e.bignum=Ta,e.define=zo.define,e.base=Co,e.constants=Oo,e.decoders=Kr,e.encoders=Hr})(Lt);var fr={exports:{}};/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */(function(a,e){var t=Cr,i=t.Buffer;function n(s,o){for(var d in s)o[d]=s[d]}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?a.exports=t:(n(t,e),e.Buffer=r);function r(s,o,d){return i(s,o,d)}r.prototype=Object.create(i.prototype),n(i,r),r.from=function(s,o,d){if(typeof s=="number")throw new TypeError("Argument must not be a number");return i(s,o,d)},r.alloc=function(s,o,d){if(typeof s!="number")throw new TypeError("Argument must be a number");var p=i(s);return o!==void 0?typeof d=="string"?p.fill(o,d):p.fill(o):p.fill(0),p},r.allocUnsafe=function(s){if(typeof s!="number")throw new TypeError("Argument must be a number");return i(s)},r.allocUnsafeSlow=function(s){if(typeof s!="number")throw new TypeError("Argument must be a number");return t.SlowBuffer(s)}})(fr,fr.exports);var No=fr.exports,Io={};const db="elliptic",fb="6.5.4",hb="EC cryptography",pb="lib/elliptic.js",gb=["lib"],mb={lint:"eslint lib test","lint:fix":"npm run lint -- --fix",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},bb={type:"git",url:"git@github.com:indutny/elliptic"},vb=["EC","Elliptic","curve","Cryptography"],kb="Fedor Indutny <fedor@indutny.com>",yb="MIT",_b={url:"https://github.com/indutny/elliptic/issues"},wb="https://github.com/indutny/elliptic",zb={brfs:"^2.0.2",coveralls:"^3.1.0",eslint:"^7.6.0",grunt:"^1.2.1","grunt-browserify":"^5.3.0","grunt-cli":"^1.3.2","grunt-contrib-connect":"^3.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^5.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-saucelabs":"^9.0.1",istanbul:"^0.4.5",mocha:"^8.0.1"},Sb={"bn.js":"^4.11.9",brorand:"^1.1.0","hash.js":"^1.0.0","hmac-drbg":"^1.0.1",inherits:"^2.0.4","minimalistic-assert":"^1.0.1","minimalistic-crypto-utils":"^1.0.1"},jb={name:db,version:fb,description:hb,main:pb,files:gb,scripts:mb,repository:bb,keywords:vb,author:kb,license:yb,bugs:_b,homepage:wb,devDependencies:zb,dependencies:Sb};var ba={},qr={};(function(a){var e=a;function t(r,s){if(Array.isArray(r))return r.slice();if(!r)return[];var o=[];if(typeof r!="string"){for(var d=0;d<r.length;d++)o[d]=r[d]|0;return o}if(s==="hex"){r=r.replace(/[^a-z0-9]+/ig,""),r.length%2!==0&&(r="0"+r);for(var d=0;d<r.length;d+=2)o.push(parseInt(r[d]+r[d+1],16))}else for(var d=0;d<r.length;d++){var p=r.charCodeAt(d),u=p>>8,v=p&255;u?o.push(u,v):o.push(v)}return o}e.toArray=t;function i(r){return r.length===1?"0"+r:r}e.zero2=i;function n(r){for(var s="",o=0;o<r.length;o++)s+=i(r[o].toString(16));return s}e.toHex=n,e.encode=function(s,o){return o==="hex"?n(s):s}})(qr);(function(a){var e=a,t=Ta,i=Rt,n=qr;e.assert=i,e.toArray=n.toArray,e.zero2=n.zero2,e.toHex=n.toHex,e.encode=n.encode;function r(u,v,S){var E=new Array(Math.max(u.bitLength(),S)+1);E.fill(0);for(var A=1<<v+1,L=u.clone(),N=0;N<E.length;N++){var I,T=L.andln(A-1);L.isOdd()?(T>(A>>1)-1?I=(A>>1)-T:I=T,L.isubn(I)):I=0,E[N]=I,L.iushrn(1)}return E}e.getNAF=r;function s(u,v){var S=[[],[]];u=u.clone(),v=v.clone();for(var E=0,A=0,L;u.cmpn(-E)>0||v.cmpn(-A)>0;){var N=u.andln(3)+E&3,I=v.andln(3)+A&3;N===3&&(N=-1),I===3&&(I=-1);var T;N&1?(L=u.andln(7)+E&7,(L===3||L===5)&&I===2?T=-N:T=N):T=0,S[0].push(T);var q;I&1?(L=v.andln(7)+A&7,(L===3||L===5)&&N===2?q=-I:q=I):q=0,S[1].push(q),2*E===T+1&&(E=1-E),2*A===q+1&&(A=1-A),u.iushrn(1),v.iushrn(1)}return S}e.getJSF=s;function o(u,v,S){var E="_"+v;u.prototype[v]=function(){return this[E]!==void 0?this[E]:this[E]=S.call(this)}}e.cachedProperty=o;function d(u){return typeof u=="string"?e.toArray(u,"hex"):u}e.parseBytes=d;function p(u){return new t(u,"hex","le")}e.intFromLE=p})(ba);var Fr={exports:{}},Vn;Fr.exports=function(e){return Vn||(Vn=new _t(null)),Vn.generate(e)};function _t(a){this.rand=a}Fr.exports.Rand=_t;_t.prototype.generate=function(e){return this._rand(e)};_t.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),i=0;i<t.length;i++)t[i]=this.rand.getByte();return t};if(typeof self=="object")self.crypto&&self.crypto.getRandomValues?_t.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?_t.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:typeof window=="object"&&(_t.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var Bs=wo;if(typeof Bs.randomBytes!="function")throw new Error("Not supported");_t.prototype._rand=function(e){return Bs.randomBytes(e)}}catch{}var Po=Fr.exports,Wr={},Ct=Ta,Si=ba,Di=Si.getNAF,Ab=Si.getJSF,Ui=Si.assert;function Ht(a,e){this.type=a,this.p=new Ct(e.p,16),this.red=e.prime?Ct.red(e.prime):Ct.mont(this.p),this.zero=new Ct(0).toRed(this.red),this.one=new Ct(1).toRed(this.red),this.two=new Ct(2).toRed(this.red),this.n=e.n&&new Ct(e.n,16),this.g=e.g&&this.pointFromJSON(e.g,e.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var t=this.n&&this.p.div(this.n);!t||t.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}var sn=Ht;Ht.prototype.point=function(){throw new Error("Not implemented")};Ht.prototype.validate=function(){throw new Error("Not implemented")};Ht.prototype._fixedNafMul=function(e,t){Ui(e.precomputed);var i=e._getDoubles(),n=Di(t,1,this._bitLength),r=(1<<i.step+1)-(i.step%2===0?2:1);r/=3;var s=[],o,d;for(o=0;o<n.length;o+=i.step){d=0;for(var p=o+i.step-1;p>=o;p--)d=(d<<1)+n[p];s.push(d)}for(var u=this.jpoint(null,null,null),v=this.jpoint(null,null,null),S=r;S>0;S--){for(o=0;o<s.length;o++)d=s[o],d===S?v=v.mixedAdd(i.points[o]):d===-S&&(v=v.mixedAdd(i.points[o].neg()));u=u.add(v)}return u.toP()};Ht.prototype._wnafMul=function(e,t){var i=4,n=e._getNAFPoints(i);i=n.wnd;for(var r=n.points,s=Di(t,i,this._bitLength),o=this.jpoint(null,null,null),d=s.length-1;d>=0;d--){for(var p=0;d>=0&&s[d]===0;d--)p++;if(d>=0&&p++,o=o.dblp(p),d<0)break;var u=s[d];Ui(u!==0),e.type==="affine"?u>0?o=o.mixedAdd(r[u-1>>1]):o=o.mixedAdd(r[-u-1>>1].neg()):u>0?o=o.add(r[u-1>>1]):o=o.add(r[-u-1>>1].neg())}return e.type==="affine"?o.toP():o};Ht.prototype._wnafMulAdd=function(e,t,i,n,r){var s=this._wnafT1,o=this._wnafT2,d=this._wnafT3,p=0,u,v,S;for(u=0;u<n;u++){S=t[u];var E=S._getNAFPoints(e);s[u]=E.wnd,o[u]=E.points}for(u=n-1;u>=1;u-=2){var A=u-1,L=u;if(s[A]!==1||s[L]!==1){d[A]=Di(i[A],s[A],this._bitLength),d[L]=Di(i[L],s[L],this._bitLength),p=Math.max(d[A].length,p),p=Math.max(d[L].length,p);continue}var N=[t[A],null,null,t[L]];t[A].y.cmp(t[L].y)===0?(N[1]=t[A].add(t[L]),N[2]=t[A].toJ().mixedAdd(t[L].neg())):t[A].y.cmp(t[L].y.redNeg())===0?(N[1]=t[A].toJ().mixedAdd(t[L]),N[2]=t[A].add(t[L].neg())):(N[1]=t[A].toJ().mixedAdd(t[L]),N[2]=t[A].toJ().mixedAdd(t[L].neg()));var I=[-3,-1,-5,-7,0,7,5,1,3],T=Ab(i[A],i[L]);for(p=Math.max(T[0].length,p),d[A]=new Array(p),d[L]=new Array(p),v=0;v<p;v++){var q=T[0][v]|0,J=T[1][v]|0;d[A][v]=I[(q+1)*3+(J+1)],d[L][v]=0,o[A]=N}}var re=this.jpoint(null,null,null),aa=this._wnafT4;for(u=p;u>=0;u--){for(var oa=0;u>=0;){var ua=!0;for(v=0;v<n;v++)aa[v]=d[v][u]|0,aa[v]!==0&&(ua=!1);if(!ua)break;oa++,u--}if(u>=0&&oa++,re=re.dblp(oa),u<0)break;for(v=0;v<n;v++){var ae=aa[v];ae!==0&&(ae>0?S=o[v][ae-1>>1]:ae<0&&(S=o[v][-ae-1>>1].neg()),S.type==="affine"?re=re.mixedAdd(S):re=re.add(S))}}for(u=0;u<n;u++)o[u]=null;return r?re:re.toP()};function La(a,e){this.curve=a,this.type=e,this.precomputed=null}Ht.BasePoint=La;La.prototype.eq=function(){throw new Error("Not implemented")};La.prototype.validate=function(){return this.curve.validate(this)};Ht.prototype.decodePoint=function(e,t){e=Si.toArray(e,t);var i=this.p.byteLength();if((e[0]===4||e[0]===6||e[0]===7)&&e.length-1===2*i){e[0]===6?Ui(e[e.length-1]%2===0):e[0]===7&&Ui(e[e.length-1]%2===1);var n=this.point(e.slice(1,1+i),e.slice(1+i,1+2*i));return n}else if((e[0]===2||e[0]===3)&&e.length-1===i)return this.pointFromX(e.slice(1,1+i),e[0]===3);throw new Error("Unknown point format")};La.prototype.encodeCompressed=function(e){return this.encode(e,!0)};La.prototype._encode=function(e){var t=this.curve.p.byteLength(),i=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(i):[4].concat(i,this.getY().toArray("be",t))};La.prototype.encode=function(e,t){return Si.encode(this._encode(t),e)};La.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this};La.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return t?t.points.length>=Math.ceil((e.bitLength()+1)/t.step):!1};La.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var i=[this],n=this,r=0;r<t;r+=e){for(var s=0;s<e;s++)n=n.dbl();i.push(n)}return{step:e,points:i}};La.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],i=(1<<e)-1,n=i===1?null:this.dbl(),r=1;r<i;r++)t[r]=t[r-1].add(n);return{wnd:e,points:t}};La.prototype._getBeta=function(){return null};La.prototype.dblp=function(e){for(var t=this,i=0;i<e;i++)t=t.dbl();return t};var xb=ba,xe=Ta,Gr=Ka,si=sn,Bb=xb.assert;function Ra(a){si.call(this,"short",a),this.a=new xe(a.a,16).toRed(this.red),this.b=new xe(a.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=this.a.fromRed().cmpn(0)===0,this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0,this.endo=this._getEndomorphism(a),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}Gr(Ra,si);var Eb=Ra;Ra.prototype._getEndomorphism=function(e){if(!(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)){var t,i;if(e.beta)t=new xe(e.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);t=n[0].cmp(n[1])<0?n[0]:n[1],t=t.toRed(this.red)}if(e.lambda)i=new xe(e.lambda,16);else{var r=this._getEndoRoots(this.n);this.g.mul(r[0]).x.cmp(this.g.x.redMul(t))===0?i=r[0]:(i=r[1],Bb(this.g.mul(i).x.cmp(this.g.x.redMul(t))===0))}var s;return e.basis?s=e.basis.map(function(o){return{a:new xe(o.a,16),b:new xe(o.b,16)}}):s=this._getEndoBasis(i),{beta:t,lambda:i,basis:s}}};Ra.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:xe.mont(e),i=new xe(2).toRed(t).redInvm(),n=i.redNeg(),r=new xe(3).toRed(t).redNeg().redSqrt().redMul(i),s=n.redAdd(r).fromRed(),o=n.redSub(r).fromRed();return[s,o]};Ra.prototype._getEndoBasis=function(e){for(var t=this.n.ushrn(Math.floor(this.n.bitLength()/2)),i=e,n=this.n.clone(),r=new xe(1),s=new xe(0),o=new xe(0),d=new xe(1),p,u,v,S,E,A,L,N=0,I,T;i.cmpn(0)!==0;){var q=n.div(i);I=n.sub(q.mul(i)),T=o.sub(q.mul(r));var J=d.sub(q.mul(s));if(!v&&I.cmp(t)<0)p=L.neg(),u=r,v=I.neg(),S=T;else if(v&&++N===2)break;L=I,n=i,i=I,o=r,r=T,d=s,s=J}E=I.neg(),A=T;var re=v.sqr().add(S.sqr()),aa=E.sqr().add(A.sqr());return aa.cmp(re)>=0&&(E=p,A=u),v.negative&&(v=v.neg(),S=S.neg()),E.negative&&(E=E.neg(),A=A.neg()),[{a:v,b:S},{a:E,b:A}]};Ra.prototype._endoSplit=function(e){var t=this.endo.basis,i=t[0],n=t[1],r=n.b.mul(e).divRound(this.n),s=i.b.neg().mul(e).divRound(this.n),o=r.mul(i.a),d=s.mul(n.a),p=r.mul(i.b),u=s.mul(n.b),v=e.sub(o).sub(d),S=p.add(u).neg();return{k1:v,k2:S}};Ra.prototype.pointFromX=function(e,t){e=new xe(e,16),e.red||(e=e.toRed(this.red));var i=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),n=i.redSqrt();if(n.redSqr().redSub(i).cmp(this.zero)!==0)throw new Error("invalid point");var r=n.fromRed().isOdd();return(t&&!r||!t&&r)&&(n=n.redNeg()),this.point(e,n)};Ra.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,i=e.y,n=this.a.redMul(t),r=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return i.redSqr().redISub(r).cmpn(0)===0};Ra.prototype._endoWnafMulAdd=function(e,t,i){for(var n=this._endoWnafT1,r=this._endoWnafT2,s=0;s<e.length;s++){var o=this._endoSplit(t[s]),d=e[s],p=d._getBeta();o.k1.negative&&(o.k1.ineg(),d=d.neg(!0)),o.k2.negative&&(o.k2.ineg(),p=p.neg(!0)),n[s*2]=d,n[s*2+1]=p,r[s*2]=o.k1,r[s*2+1]=o.k2}for(var u=this._wnafMulAdd(1,n,r,s*2,i),v=0;v<s*2;v++)n[v]=null,r[v]=null;return u};function ea(a,e,t,i){si.BasePoint.call(this,a,"affine"),e===null&&t===null?(this.x=null,this.y=null,this.inf=!0):(this.x=new xe(e,16),this.y=new xe(t,16),i&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}Gr(ea,si.BasePoint);Ra.prototype.point=function(e,t,i){return new ea(this,e,t,i)};Ra.prototype.pointFromJSON=function(e,t){return ea.fromJSON(this,e,t)};ea.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var i=this.curve,n=function(r){return i.point(r.x.redMul(i.endo.beta),r.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}}}return t}};ea.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]};ea.fromJSON=function(e,t,i){typeof t=="string"&&(t=JSON.parse(t));var n=e.point(t[0],t[1],i);if(!t[2])return n;function r(o){return e.point(o[0],o[1],i)}var s=t[2];return n.precomputed={beta:null,doubles:s.doubles&&{step:s.doubles.step,points:[n].concat(s.doubles.points.map(r))},naf:s.naf&&{wnd:s.naf.wnd,points:[n].concat(s.naf.points.map(r))}},n};ea.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"};ea.prototype.isInfinity=function(){return this.inf};ea.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(this.x.cmp(e.x)===0)return this.curve.point(null,null);var t=this.y.redSub(e.y);t.cmpn(0)!==0&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var i=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(i)).redISub(this.y);return this.curve.point(i,n)};ea.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(e.cmpn(0)===0)return this.curve.point(null,null);var t=this.curve.a,i=this.x.redSqr(),n=e.redInvm(),r=i.redAdd(i).redIAdd(i).redIAdd(t).redMul(n),s=r.redSqr().redISub(this.x.redAdd(this.x)),o=r.redMul(this.x.redSub(s)).redISub(this.y);return this.curve.point(s,o)};ea.prototype.getX=function(){return this.x.fromRed()};ea.prototype.getY=function(){return this.y.fromRed()};ea.prototype.mul=function(e){return e=new xe(e,16),this.isInfinity()?this:this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)};ea.prototype.mulAdd=function(e,t,i){var n=[this,t],r=[e,i];return this.curve.endo?this.curve._endoWnafMulAdd(n,r):this.curve._wnafMulAdd(1,n,r,2)};ea.prototype.jmulAdd=function(e,t,i){var n=[this,t],r=[e,i];return this.curve.endo?this.curve._endoWnafMulAdd(n,r,!0):this.curve._wnafMulAdd(1,n,r,2,!0)};ea.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||this.x.cmp(e.x)===0&&this.y.cmp(e.y)===0)};ea.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var i=this.precomputed,n=function(r){return r.neg()};t.precomputed={naf:i.naf&&{wnd:i.naf.wnd,points:i.naf.points.map(n)},doubles:i.doubles&&{step:i.doubles.step,points:i.doubles.points.map(n)}}}return t};ea.prototype.toJ=function(){if(this.inf)return this.curve.jpoint(null,null,null);var e=this.curve.jpoint(this.x,this.y,this.curve.one);return e};function na(a,e,t,i){si.BasePoint.call(this,a,"jacobian"),e===null&&t===null&&i===null?(this.x=this.curve.one,this.y=this.curve.one,this.z=new xe(0)):(this.x=new xe(e,16),this.y=new xe(t,16),this.z=new xe(i,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}Gr(na,si.BasePoint);Ra.prototype.jpoint=function(e,t,i){return new na(this,e,t,i)};na.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),i=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(i,n)};na.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};na.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),i=this.z.redSqr(),n=this.x.redMul(t),r=e.x.redMul(i),s=this.y.redMul(t.redMul(e.z)),o=e.y.redMul(i.redMul(this.z)),d=n.redSub(r),p=s.redSub(o);if(d.cmpn(0)===0)return p.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var u=d.redSqr(),v=u.redMul(d),S=n.redMul(u),E=p.redSqr().redIAdd(v).redISub(S).redISub(S),A=p.redMul(S.redISub(E)).redISub(s.redMul(v)),L=this.z.redMul(e.z).redMul(d);return this.curve.jpoint(E,A,L)};na.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),i=this.x,n=e.x.redMul(t),r=this.y,s=e.y.redMul(t).redMul(this.z),o=i.redSub(n),d=r.redSub(s);if(o.cmpn(0)===0)return d.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var p=o.redSqr(),u=p.redMul(o),v=i.redMul(p),S=d.redSqr().redIAdd(u).redISub(v).redISub(v),E=d.redMul(v.redISub(S)).redISub(r.redMul(u)),A=this.z.redMul(o);return this.curve.jpoint(S,E,A)};na.prototype.dblp=function(e){if(e===0)return this;if(this.isInfinity())return this;if(!e)return this.dbl();var t;if(this.curve.zeroA||this.curve.threeA){var i=this;for(t=0;t<e;t++)i=i.dbl();return i}var n=this.curve.a,r=this.curve.tinv,s=this.x,o=this.y,d=this.z,p=d.redSqr().redSqr(),u=o.redAdd(o);for(t=0;t<e;t++){var v=s.redSqr(),S=u.redSqr(),E=S.redSqr(),A=v.redAdd(v).redIAdd(v).redIAdd(n.redMul(p)),L=s.redMul(S),N=A.redSqr().redISub(L.redAdd(L)),I=L.redISub(N),T=A.redMul(I);T=T.redIAdd(T).redISub(E);var q=u.redMul(d);t+1<e&&(p=p.redMul(E)),s=N,d=q,u=T}return this.curve.jpoint(s,u.redMul(r),d)};na.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()};na.prototype._zeroDbl=function(){var e,t,i;if(this.zOne){var n=this.x.redSqr(),r=this.y.redSqr(),s=r.redSqr(),o=this.x.redAdd(r).redSqr().redISub(n).redISub(s);o=o.redIAdd(o);var d=n.redAdd(n).redIAdd(n),p=d.redSqr().redISub(o).redISub(o),u=s.redIAdd(s);u=u.redIAdd(u),u=u.redIAdd(u),e=p,t=d.redMul(o.redISub(p)).redISub(u),i=this.y.redAdd(this.y)}else{var v=this.x.redSqr(),S=this.y.redSqr(),E=S.redSqr(),A=this.x.redAdd(S).redSqr().redISub(v).redISub(E);A=A.redIAdd(A);var L=v.redAdd(v).redIAdd(v),N=L.redSqr(),I=E.redIAdd(E);I=I.redIAdd(I),I=I.redIAdd(I),e=N.redISub(A).redISub(A),t=L.redMul(A.redISub(e)).redISub(I),i=this.y.redMul(this.z),i=i.redIAdd(i)}return this.curve.jpoint(e,t,i)};na.prototype._threeDbl=function(){var e,t,i;if(this.zOne){var n=this.x.redSqr(),r=this.y.redSqr(),s=r.redSqr(),o=this.x.redAdd(r).redSqr().redISub(n).redISub(s);o=o.redIAdd(o);var d=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),p=d.redSqr().redISub(o).redISub(o);e=p;var u=s.redIAdd(s);u=u.redIAdd(u),u=u.redIAdd(u),t=d.redMul(o.redISub(p)).redISub(u),i=this.y.redAdd(this.y)}else{var v=this.z.redSqr(),S=this.y.redSqr(),E=this.x.redMul(S),A=this.x.redSub(v).redMul(this.x.redAdd(v));A=A.redAdd(A).redIAdd(A);var L=E.redIAdd(E);L=L.redIAdd(L);var N=L.redAdd(L);e=A.redSqr().redISub(N),i=this.y.redAdd(this.z).redSqr().redISub(S).redISub(v);var I=S.redSqr();I=I.redIAdd(I),I=I.redIAdd(I),I=I.redIAdd(I),t=A.redMul(L.redISub(e)).redISub(I)}return this.curve.jpoint(e,t,i)};na.prototype._dbl=function(){var e=this.curve.a,t=this.x,i=this.y,n=this.z,r=n.redSqr().redSqr(),s=t.redSqr(),o=i.redSqr(),d=s.redAdd(s).redIAdd(s).redIAdd(e.redMul(r)),p=t.redAdd(t);p=p.redIAdd(p);var u=p.redMul(o),v=d.redSqr().redISub(u.redAdd(u)),S=u.redISub(v),E=o.redSqr();E=E.redIAdd(E),E=E.redIAdd(E),E=E.redIAdd(E);var A=d.redMul(S).redISub(E),L=i.redAdd(i).redMul(n);return this.curve.jpoint(v,A,L)};na.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),i=this.z.redSqr(),n=t.redSqr(),r=e.redAdd(e).redIAdd(e),s=r.redSqr(),o=this.x.redAdd(t).redSqr().redISub(e).redISub(n);o=o.redIAdd(o),o=o.redAdd(o).redIAdd(o),o=o.redISub(s);var d=o.redSqr(),p=n.redIAdd(n);p=p.redIAdd(p),p=p.redIAdd(p),p=p.redIAdd(p);var u=r.redIAdd(o).redSqr().redISub(s).redISub(d).redISub(p),v=t.redMul(u);v=v.redIAdd(v),v=v.redIAdd(v);var S=this.x.redMul(d).redISub(v);S=S.redIAdd(S),S=S.redIAdd(S);var E=this.y.redMul(u.redMul(p.redISub(u)).redISub(o.redMul(d)));E=E.redIAdd(E),E=E.redIAdd(E),E=E.redIAdd(E);var A=this.z.redAdd(o).redSqr().redISub(i).redISub(d);return this.curve.jpoint(S,E,A)};na.prototype.mul=function(e,t){return e=new xe(e,t),this.curve._wnafMul(this,e)};na.prototype.eq=function(e){if(e.type==="affine")return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),i=e.z.redSqr();if(this.x.redMul(i).redISub(e.x.redMul(t)).cmpn(0)!==0)return!1;var n=t.redMul(this.z),r=i.redMul(e.z);return this.y.redMul(r).redISub(e.y.redMul(n)).cmpn(0)===0};na.prototype.eqXToP=function(e){var t=this.z.redSqr(),i=e.toRed(this.curve.red).redMul(t);if(this.x.cmp(i)===0)return!0;for(var n=e.clone(),r=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(i.redIAdd(r),this.x.cmp(i)===0)return!0}};na.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"};na.prototype.isInfinity=function(){return this.z.cmpn(0)===0};var Ft=Ta,To=Ka,on=sn,Mb=ba;function oi(a){on.call(this,"mont",a),this.a=new Ft(a.a,16).toRed(this.red),this.b=new Ft(a.b,16).toRed(this.red),this.i4=new Ft(4).toRed(this.red).redInvm(),this.two=new Ft(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}To(oi,on);var Lb=oi;oi.prototype.validate=function(e){var t=e.normalize().x,i=t.redSqr(),n=i.redMul(t).redAdd(i.redMul(this.a)).redAdd(t),r=n.redSqrt();return r.redSqr().cmp(n)===0};function Xe(a,e,t){on.BasePoint.call(this,a,"projective"),e===null&&t===null?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new Ft(e,16),this.z=new Ft(t,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}To(Xe,on.BasePoint);oi.prototype.decodePoint=function(e,t){return this.point(Mb.toArray(e,t),1)};oi.prototype.point=function(e,t){return new Xe(this,e,t)};oi.prototype.pointFromJSON=function(e){return Xe.fromJSON(this,e)};Xe.prototype.precompute=function(){};Xe.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())};Xe.fromJSON=function(e,t){return new Xe(e,t[0],t[1]||e.one)};Xe.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"};Xe.prototype.isInfinity=function(){return this.z.cmpn(0)===0};Xe.prototype.dbl=function(){var e=this.x.redAdd(this.z),t=e.redSqr(),i=this.x.redSub(this.z),n=i.redSqr(),r=t.redSub(n),s=t.redMul(n),o=r.redMul(n.redAdd(this.curve.a24.redMul(r)));return this.curve.point(s,o)};Xe.prototype.add=function(){throw new Error("Not supported on Montgomery curve")};Xe.prototype.diffAdd=function(e,t){var i=this.x.redAdd(this.z),n=this.x.redSub(this.z),r=e.x.redAdd(e.z),s=e.x.redSub(e.z),o=s.redMul(i),d=r.redMul(n),p=t.z.redMul(o.redAdd(d).redSqr()),u=t.x.redMul(o.redISub(d).redSqr());return this.curve.point(p,u)};Xe.prototype.mul=function(e){for(var t=e.clone(),i=this,n=this.curve.point(null,null),r=this,s=[];t.cmpn(0)!==0;t.iushrn(1))s.push(t.andln(1));for(var o=s.length-1;o>=0;o--)s[o]===0?(i=i.diffAdd(n,r),n=n.dbl()):(n=i.diffAdd(n,r),i=i.dbl());return n};Xe.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")};Xe.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")};Xe.prototype.eq=function(e){return this.getX().cmp(e.getX())===0};Xe.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this};Xe.prototype.getX=function(){return this.normalize(),this.x.fromRed()};var Rb=ba,st=Ta,Ko=Ka,ln=sn,Hb=Rb.assert;function et(a){this.twisted=(a.a|0)!==1,this.mOneA=this.twisted&&(a.a|0)===-1,this.extended=this.mOneA,ln.call(this,"edwards",a),this.a=new st(a.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new st(a.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new st(a.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),Hb(!this.twisted||this.c.fromRed().cmpn(1)===0),this.oneC=(a.c|0)===1}Ko(et,ln);var Cb=et;et.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)};et.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)};et.prototype.jpoint=function(e,t,i,n){return this.point(e,t,i,n)};et.prototype.pointFromX=function(e,t){e=new st(e,16),e.red||(e=e.toRed(this.red));var i=e.redSqr(),n=this.c2.redSub(this.a.redMul(i)),r=this.one.redSub(this.c2.redMul(this.d).redMul(i)),s=n.redMul(r.redInvm()),o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error("invalid point");var d=o.fromRed().isOdd();return(t&&!d||!t&&d)&&(o=o.redNeg()),this.point(e,o)};et.prototype.pointFromY=function(e,t){e=new st(e,16),e.red||(e=e.toRed(this.red));var i=e.redSqr(),n=i.redSub(this.c2),r=i.redMul(this.d).redMul(this.c2).redSub(this.a),s=n.redMul(r.redInvm());if(s.cmp(this.zero)===0){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error("invalid point");return o.fromRed().isOdd()!==t&&(o=o.redNeg()),this.point(o,e)};et.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),i=e.y.redSqr(),n=t.redMul(this.a).redAdd(i),r=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(i)));return n.cmp(r)===0};function me(a,e,t,i,n){ln.BasePoint.call(this,a,"projective"),e===null&&t===null&&i===null?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new st(e,16),this.y=new st(t,16),this.z=i?new st(i,16):this.curve.one,this.t=n&&new st(n,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}Ko(me,ln.BasePoint);et.prototype.pointFromJSON=function(e){return me.fromJSON(this,e)};et.prototype.point=function(e,t,i,n){return new me(this,e,t,i,n)};me.fromJSON=function(e,t){return new me(e,t[0],t[1],t[2])};me.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"};me.prototype.isInfinity=function(){return this.x.cmpn(0)===0&&(this.y.cmp(this.z)===0||this.zOne&&this.y.cmp(this.curve.c)===0)};me.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),i=this.z.redSqr();i=i.redIAdd(i);var n=this.curve._mulA(e),r=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),s=n.redAdd(t),o=s.redSub(i),d=n.redSub(t),p=r.redMul(o),u=s.redMul(d),v=r.redMul(d),S=o.redMul(s);return this.curve.point(p,u,S,v)};me.prototype._projDbl=function(){var e=this.x.redAdd(this.y).redSqr(),t=this.x.redSqr(),i=this.y.redSqr(),n,r,s,o,d,p;if(this.curve.twisted){o=this.curve._mulA(t);var u=o.redAdd(i);this.zOne?(n=e.redSub(t).redSub(i).redMul(u.redSub(this.curve.two)),r=u.redMul(o.redSub(i)),s=u.redSqr().redSub(u).redSub(u)):(d=this.z.redSqr(),p=u.redSub(d).redISub(d),n=e.redSub(t).redISub(i).redMul(p),r=u.redMul(o.redSub(i)),s=u.redMul(p))}else o=t.redAdd(i),d=this.curve._mulC(this.z).redSqr(),p=o.redSub(d).redSub(d),n=this.curve._mulC(e.redISub(o)).redMul(p),r=this.curve._mulC(o).redMul(t.redISub(i)),s=o.redMul(p);return this.curve.point(n,r,s)};me.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()};me.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),i=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),n=this.t.redMul(this.curve.dd).redMul(e.t),r=this.z.redMul(e.z.redAdd(e.z)),s=i.redSub(t),o=r.redSub(n),d=r.redAdd(n),p=i.redAdd(t),u=s.redMul(o),v=d.redMul(p),S=s.redMul(p),E=o.redMul(d);return this.curve.point(u,v,E,S)};me.prototype._projAdd=function(e){var t=this.z.redMul(e.z),i=t.redSqr(),n=this.x.redMul(e.x),r=this.y.redMul(e.y),s=this.curve.d.redMul(n).redMul(r),o=i.redSub(s),d=i.redAdd(s),p=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(n).redISub(r),u=t.redMul(o).redMul(p),v,S;return this.curve.twisted?(v=t.redMul(d).redMul(r.redSub(this.curve._mulA(n))),S=o.redMul(d)):(v=t.redMul(d).redMul(r.redSub(n)),S=this.curve._mulC(o).redMul(d)),this.curve.point(u,v,S)};me.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)};me.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)};me.prototype.mulAdd=function(e,t,i){return this.curve._wnafMulAdd(1,[this,t],[e,i],2,!1)};me.prototype.jmulAdd=function(e,t,i){return this.curve._wnafMulAdd(1,[this,t],[e,i],2,!0)};me.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this};me.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())};me.prototype.getX=function(){return this.normalize(),this.x.fromRed()};me.prototype.getY=function(){return this.normalize(),this.y.fromRed()};me.prototype.eq=function(e){return this===e||this.getX().cmp(e.getX())===0&&this.getY().cmp(e.getY())===0};me.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(t)===0)return!0;for(var i=e.clone(),n=this.curve.redN.redMul(this.z);;){if(i.iadd(this.curve.n),i.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(n),this.x.cmp(t)===0)return!0}};me.prototype.toP=me.prototype.normalize;me.prototype.mixedAdd=me.prototype.add;(function(a){var e=a;e.base=sn,e.short=Eb,e.mont=Lb,e.edwards=Cb})(Wr);var cn={},un={},Z={},Ob=Rt,Nb=Ka;Z.inherits=Nb;function Ib(a,e){return(a.charCodeAt(e)&64512)!==55296||e<0||e+1>=a.length?!1:(a.charCodeAt(e+1)&64512)===56320}function Pb(a,e){if(Array.isArray(a))return a.slice();if(!a)return[];var t=[];if(typeof a=="string")if(e){if(e==="hex")for(a=a.replace(/[^a-z0-9]+/ig,""),a.length%2!==0&&(a="0"+a),n=0;n<a.length;n+=2)t.push(parseInt(a[n]+a[n+1],16))}else for(var i=0,n=0;n<a.length;n++){var r=a.charCodeAt(n);r<128?t[i++]=r:r<2048?(t[i++]=r>>6|192,t[i++]=r&63|128):Ib(a,n)?(r=65536+((r&1023)<<10)+(a.charCodeAt(++n)&1023),t[i++]=r>>18|240,t[i++]=r>>12&63|128,t[i++]=r>>6&63|128,t[i++]=r&63|128):(t[i++]=r>>12|224,t[i++]=r>>6&63|128,t[i++]=r&63|128)}else for(n=0;n<a.length;n++)t[n]=a[n]|0;return t}Z.toArray=Pb;function Tb(a){for(var e="",t=0;t<a.length;t++)e+=Uo(a[t].toString(16));return e}Z.toHex=Tb;function Do(a){var e=a>>>24|a>>>8&65280|a<<8&16711680|(a&255)<<24;return e>>>0}Z.htonl=Do;function Kb(a,e){for(var t="",i=0;i<a.length;i++){var n=a[i];e==="little"&&(n=Do(n)),t+=Jo(n.toString(16))}return t}Z.toHex32=Kb;function Uo(a){return a.length===1?"0"+a:a}Z.zero2=Uo;function Jo(a){return a.length===7?"0"+a:a.length===6?"00"+a:a.length===5?"000"+a:a.length===4?"0000"+a:a.length===3?"00000"+a:a.length===2?"000000"+a:a.length===1?"0000000"+a:a}Z.zero8=Jo;function Db(a,e,t,i){var n=t-e;Ob(n%4===0);for(var r=new Array(n/4),s=0,o=e;s<r.length;s++,o+=4){var d;i==="big"?d=a[o]<<24|a[o+1]<<16|a[o+2]<<8|a[o+3]:d=a[o+3]<<24|a[o+2]<<16|a[o+1]<<8|a[o],r[s]=d>>>0}return r}Z.join32=Db;function Ub(a,e){for(var t=new Array(a.length*4),i=0,n=0;i<a.length;i++,n+=4){var r=a[i];e==="big"?(t[n]=r>>>24,t[n+1]=r>>>16&255,t[n+2]=r>>>8&255,t[n+3]=r&255):(t[n+3]=r>>>24,t[n+2]=r>>>16&255,t[n+1]=r>>>8&255,t[n]=r&255)}return t}Z.split32=Ub;function Jb(a,e){return a>>>e|a<<32-e}Z.rotr32=Jb;function qb(a,e){return a<<e|a>>>32-e}Z.rotl32=qb;function Fb(a,e){return a+e>>>0}Z.sum32=Fb;function Wb(a,e,t){return a+e+t>>>0}Z.sum32_3=Wb;function Gb(a,e,t,i){return a+e+t+i>>>0}Z.sum32_4=Gb;function $b(a,e,t,i,n){return a+e+t+i+n>>>0}Z.sum32_5=$b;function Vb(a,e,t,i){var n=a[e],r=a[e+1],s=i+r>>>0,o=(s<i?1:0)+t+n;a[e]=o>>>0,a[e+1]=s}Z.sum64=Vb;function Zb(a,e,t,i){var n=e+i>>>0,r=(n<e?1:0)+a+t;return r>>>0}Z.sum64_hi=Zb;function Yb(a,e,t,i){var n=e+i;return n>>>0}Z.sum64_lo=Yb;function Xb(a,e,t,i,n,r,s,o){var d=0,p=e;p=p+i>>>0,d+=p<e?1:0,p=p+r>>>0,d+=p<r?1:0,p=p+o>>>0,d+=p<o?1:0;var u=a+t+n+s+d;return u>>>0}Z.sum64_4_hi=Xb;function Qb(a,e,t,i,n,r,s,o){var d=e+i+r+o;return d>>>0}Z.sum64_4_lo=Qb;function ev(a,e,t,i,n,r,s,o,d,p){var u=0,v=e;v=v+i>>>0,u+=v<e?1:0,v=v+r>>>0,u+=v<r?1:0,v=v+o>>>0,u+=v<o?1:0,v=v+p>>>0,u+=v<p?1:0;var S=a+t+n+s+d+u;return S>>>0}Z.sum64_5_hi=ev;function av(a,e,t,i,n,r,s,o,d,p){var u=e+i+r+o+p;return u>>>0}Z.sum64_5_lo=av;function tv(a,e,t){var i=e<<32-t|a>>>t;return i>>>0}Z.rotr64_hi=tv;function iv(a,e,t){var i=a<<32-t|e>>>t;return i>>>0}Z.rotr64_lo=iv;function nv(a,e,t){return a>>>t}Z.shr64_hi=nv;function rv(a,e,t){var i=a<<32-t|e>>>t;return i>>>0}Z.shr64_lo=rv;var li={},Es=Z,sv=Rt;function dn(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}li.BlockHash=dn;dn.prototype.update=function(e,t){if(e=Es.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){e=this.pending;var i=e.length%this._delta8;this.pending=e.slice(e.length-i,e.length),this.pending.length===0&&(this.pending=null),e=Es.join32(e,0,e.length-i,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this};dn.prototype.digest=function(e){return this.update(this._pad()),sv(this.pending===null),this._digest(e)};dn.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,i=t-(e+this.padLength)%t,n=new Array(i+this.padLength);n[0]=128;for(var r=1;r<i;r++)n[r]=0;if(e<<=3,this.endian==="big"){for(var s=8;s<this.padLength;s++)n[r++]=0;n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=e>>>24&255,n[r++]=e>>>16&255,n[r++]=e>>>8&255,n[r++]=e&255}else for(n[r++]=e&255,n[r++]=e>>>8&255,n[r++]=e>>>16&255,n[r++]=e>>>24&255,n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=0,s=8;s<this.padLength;s++)n[r++]=0;return n};var ci={},at={},ov=Z,$a=ov.rotr32;function lv(a,e,t,i){if(a===0)return qo(e,t,i);if(a===1||a===3)return Wo(e,t,i);if(a===2)return Fo(e,t,i)}at.ft_1=lv;function qo(a,e,t){return a&e^~a&t}at.ch32=qo;function Fo(a,e,t){return a&e^a&t^e&t}at.maj32=Fo;function Wo(a,e,t){return a^e^t}at.p32=Wo;function cv(a){return $a(a,2)^$a(a,13)^$a(a,22)}at.s0_256=cv;function uv(a){return $a(a,6)^$a(a,11)^$a(a,25)}at.s1_256=uv;function dv(a){return $a(a,7)^$a(a,18)^a>>>3}at.g0_256=dv;function fv(a){return $a(a,17)^$a(a,19)^a>>>10}at.g1_256=fv;var Qt=Z,hv=li,pv=at,Zn=Qt.rotl32,pi=Qt.sum32,gv=Qt.sum32_5,mv=pv.ft_1,Go=hv.BlockHash,bv=[1518500249,1859775393,2400959708,3395469782];function Ya(){if(!(this instanceof Ya))return new Ya;Go.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}Qt.inherits(Ya,Go);var vv=Ya;Ya.blockSize=512;Ya.outSize=160;Ya.hmacStrength=80;Ya.padLength=64;Ya.prototype._update=function(e,t){for(var i=this.W,n=0;n<16;n++)i[n]=e[t+n];for(;n<i.length;n++)i[n]=Zn(i[n-3]^i[n-8]^i[n-14]^i[n-16],1);var r=this.h[0],s=this.h[1],o=this.h[2],d=this.h[3],p=this.h[4];for(n=0;n<i.length;n++){var u=~~(n/20),v=gv(Zn(r,5),mv(u,s,o,d),p,i[n],bv[u]);p=d,d=o,o=Zn(s,30),s=r,r=v}this.h[0]=pi(this.h[0],r),this.h[1]=pi(this.h[1],s),this.h[2]=pi(this.h[2],o),this.h[3]=pi(this.h[3],d),this.h[4]=pi(this.h[4],p)};Ya.prototype._digest=function(e){return e==="hex"?Qt.toHex32(this.h,"big"):Qt.split32(this.h,"big")};var ei=Z,kv=li,ui=at,yv=Rt,Ha=ei.sum32,_v=ei.sum32_4,wv=ei.sum32_5,zv=ui.ch32,Sv=ui.maj32,jv=ui.s0_256,Av=ui.s1_256,xv=ui.g0_256,Bv=ui.g1_256,$o=kv.BlockHash,Ev=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function Xa(){if(!(this instanceof Xa))return new Xa;$o.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=Ev,this.W=new Array(64)}ei.inherits(Xa,$o);var Vo=Xa;Xa.blockSize=512;Xa.outSize=256;Xa.hmacStrength=192;Xa.padLength=64;Xa.prototype._update=function(e,t){for(var i=this.W,n=0;n<16;n++)i[n]=e[t+n];for(;n<i.length;n++)i[n]=_v(Bv(i[n-2]),i[n-7],xv(i[n-15]),i[n-16]);var r=this.h[0],s=this.h[1],o=this.h[2],d=this.h[3],p=this.h[4],u=this.h[5],v=this.h[6],S=this.h[7];for(yv(this.k.length===i.length),n=0;n<i.length;n++){var E=wv(S,Av(p),zv(p,u,v),this.k[n],i[n]),A=Ha(jv(r),Sv(r,s,o));S=v,v=u,u=p,p=Ha(d,E),d=o,o=s,s=r,r=Ha(E,A)}this.h[0]=Ha(this.h[0],r),this.h[1]=Ha(this.h[1],s),this.h[2]=Ha(this.h[2],o),this.h[3]=Ha(this.h[3],d),this.h[4]=Ha(this.h[4],p),this.h[5]=Ha(this.h[5],u),this.h[6]=Ha(this.h[6],v),this.h[7]=Ha(this.h[7],S)};Xa.prototype._digest=function(e){return e==="hex"?ei.toHex32(this.h,"big"):ei.split32(this.h,"big")};var hr=Z,Zo=Vo;function lt(){if(!(this instanceof lt))return new lt;Zo.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}hr.inherits(lt,Zo);var Mv=lt;lt.blockSize=512;lt.outSize=224;lt.hmacStrength=192;lt.padLength=64;lt.prototype._digest=function(e){return e==="hex"?hr.toHex32(this.h.slice(0,7),"big"):hr.split32(this.h.slice(0,7),"big")};var ha=Z,Lv=li,Rv=Rt,Va=ha.rotr64_hi,Za=ha.rotr64_lo,Yo=ha.shr64_hi,Xo=ha.shr64_lo,gt=ha.sum64,Yn=ha.sum64_hi,Xn=ha.sum64_lo,Hv=ha.sum64_4_hi,Cv=ha.sum64_4_lo,Ov=ha.sum64_5_hi,Nv=ha.sum64_5_lo,Qo=Lv.BlockHash,Iv=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function Pa(){if(!(this instanceof Pa))return new Pa;Qo.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=Iv,this.W=new Array(160)}ha.inherits(Pa,Qo);var el=Pa;Pa.blockSize=1024;Pa.outSize=512;Pa.hmacStrength=192;Pa.padLength=128;Pa.prototype._prepareBlock=function(e,t){for(var i=this.W,n=0;n<32;n++)i[n]=e[t+n];for(;n<i.length;n+=2){var r=$v(i[n-4],i[n-3]),s=Vv(i[n-4],i[n-3]),o=i[n-14],d=i[n-13],p=Wv(i[n-30],i[n-29]),u=Gv(i[n-30],i[n-29]),v=i[n-32],S=i[n-31];i[n]=Hv(r,s,o,d,p,u,v,S),i[n+1]=Cv(r,s,o,d,p,u,v,S)}};Pa.prototype._update=function(e,t){this._prepareBlock(e,t);var i=this.W,n=this.h[0],r=this.h[1],s=this.h[2],o=this.h[3],d=this.h[4],p=this.h[5],u=this.h[6],v=this.h[7],S=this.h[8],E=this.h[9],A=this.h[10],L=this.h[11],N=this.h[12],I=this.h[13],T=this.h[14],q=this.h[15];Rv(this.k.length===i.length);for(var J=0;J<i.length;J+=2){var re=T,aa=q,oa=qv(S,E),ua=Fv(S,E),ae=Pv(S,E,A,L,N),va=Tv(S,E,A,L,N,I),j=this.k[J],l=this.k[J+1],g=i[J],b=i[J+1],k=Ov(re,aa,oa,ua,ae,va,j,l,g,b),z=Nv(re,aa,oa,ua,ae,va,j,l,g,b);re=Uv(n,r),aa=Jv(n,r),oa=Kv(n,r,s,o,d),ua=Dv(n,r,s,o,d,p);var B=Yn(re,aa,oa,ua),M=Xn(re,aa,oa,ua);T=N,q=I,N=A,I=L,A=S,L=E,S=Yn(u,v,k,z),E=Xn(v,v,k,z),u=d,v=p,d=s,p=o,s=n,o=r,n=Yn(k,z,B,M),r=Xn(k,z,B,M)}gt(this.h,0,n,r),gt(this.h,2,s,o),gt(this.h,4,d,p),gt(this.h,6,u,v),gt(this.h,8,S,E),gt(this.h,10,A,L),gt(this.h,12,N,I),gt(this.h,14,T,q)};Pa.prototype._digest=function(e){return e==="hex"?ha.toHex32(this.h,"big"):ha.split32(this.h,"big")};function Pv(a,e,t,i,n){var r=a&t^~a&n;return r<0&&(r+=4294967296),r}function Tv(a,e,t,i,n,r){var s=e&i^~e&r;return s<0&&(s+=4294967296),s}function Kv(a,e,t,i,n){var r=a&t^a&n^t&n;return r<0&&(r+=4294967296),r}function Dv(a,e,t,i,n,r){var s=e&i^e&r^i&r;return s<0&&(s+=4294967296),s}function Uv(a,e){var t=Va(a,e,28),i=Va(e,a,2),n=Va(e,a,7),r=t^i^n;return r<0&&(r+=4294967296),r}function Jv(a,e){var t=Za(a,e,28),i=Za(e,a,2),n=Za(e,a,7),r=t^i^n;return r<0&&(r+=4294967296),r}function qv(a,e){var t=Va(a,e,14),i=Va(a,e,18),n=Va(e,a,9),r=t^i^n;return r<0&&(r+=4294967296),r}function Fv(a,e){var t=Za(a,e,14),i=Za(a,e,18),n=Za(e,a,9),r=t^i^n;return r<0&&(r+=4294967296),r}function Wv(a,e){var t=Va(a,e,1),i=Va(a,e,8),n=Yo(a,e,7),r=t^i^n;return r<0&&(r+=4294967296),r}function Gv(a,e){var t=Za(a,e,1),i=Za(a,e,8),n=Xo(a,e,7),r=t^i^n;return r<0&&(r+=4294967296),r}function $v(a,e){var t=Va(a,e,19),i=Va(e,a,29),n=Yo(a,e,6),r=t^i^n;return r<0&&(r+=4294967296),r}function Vv(a,e){var t=Za(a,e,19),i=Za(e,a,29),n=Xo(a,e,6),r=t^i^n;return r<0&&(r+=4294967296),r}var pr=Z,al=el;function ct(){if(!(this instanceof ct))return new ct;al.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}pr.inherits(ct,al);var Zv=ct;ct.blockSize=1024;ct.outSize=384;ct.hmacStrength=192;ct.padLength=128;ct.prototype._digest=function(e){return e==="hex"?pr.toHex32(this.h.slice(0,12),"big"):pr.split32(this.h.slice(0,12),"big")};ci.sha1=vv;ci.sha224=Mv;ci.sha256=Vo;ci.sha384=Zv;ci.sha512=el;var tl={},Kt=Z,Yv=li,Ri=Kt.rotl32,Ms=Kt.sum32,gi=Kt.sum32_3,Ls=Kt.sum32_4,il=Yv.BlockHash;function Qa(){if(!(this instanceof Qa))return new Qa;il.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}Kt.inherits(Qa,il);tl.ripemd160=Qa;Qa.blockSize=512;Qa.outSize=160;Qa.hmacStrength=192;Qa.padLength=64;Qa.prototype._update=function(e,t){for(var i=this.h[0],n=this.h[1],r=this.h[2],s=this.h[3],o=this.h[4],d=i,p=n,u=r,v=s,S=o,E=0;E<80;E++){var A=Ms(Ri(Ls(i,Rs(E,n,r,s),e[ek[E]+t],Xv(E)),tk[E]),o);i=o,o=s,s=Ri(r,10),r=n,n=A,A=Ms(Ri(Ls(d,Rs(79-E,p,u,v),e[ak[E]+t],Qv(E)),ik[E]),S),d=S,S=v,v=Ri(u,10),u=p,p=A}A=gi(this.h[1],r,v),this.h[1]=gi(this.h[2],s,S),this.h[2]=gi(this.h[3],o,d),this.h[3]=gi(this.h[4],i,p),this.h[4]=gi(this.h[0],n,u),this.h[0]=A};Qa.prototype._digest=function(e){return e==="hex"?Kt.toHex32(this.h,"little"):Kt.split32(this.h,"little")};function Rs(a,e,t,i){return a<=15?e^t^i:a<=31?e&t|~e&i:a<=47?(e|~t)^i:a<=63?e&i|t&~i:e^(t|~i)}function Xv(a){return a<=15?0:a<=31?1518500249:a<=47?1859775393:a<=63?2400959708:2840853838}function Qv(a){return a<=15?1352829926:a<=31?1548603684:a<=47?1836072691:a<=63?2053994217:0}var ek=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],ak=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],tk=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],ik=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],nk=Z,rk=Rt;function ai(a,e,t){if(!(this instanceof ai))return new ai(a,e,t);this.Hash=a,this.blockSize=a.blockSize/8,this.outSize=a.outSize/8,this.inner=null,this.outer=null,this._init(nk.toArray(e,t))}var sk=ai;ai.prototype._init=function(e){e.length>this.blockSize&&(e=new this.Hash().update(e).digest()),rk(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=new this.Hash().update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=new this.Hash().update(e)};ai.prototype.update=function(e,t){return this.inner.update(e,t),this};ai.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)};(function(a){var e=a;e.utils=Z,e.common=li,e.sha=ci,e.ripemd=tl,e.hmac=sk,e.sha1=e.sha.sha1,e.sha256=e.sha.sha256,e.sha224=e.sha.sha224,e.sha384=e.sha.sha384,e.sha512=e.sha.sha512,e.ripemd160=e.ripemd.ripemd160})(un);var Qn,Hs;function ok(){return Hs||(Hs=1,Qn={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}),Qn}(function(a){var e=a,t=un,i=Wr,n=ba,r=n.assert;function s(p){p.type==="short"?this.curve=new i.short(p):p.type==="edwards"?this.curve=new i.edwards(p):this.curve=new i.mont(p),this.g=this.curve.g,this.n=this.curve.n,this.hash=p.hash,r(this.g.validate(),"Invalid curve"),r(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}e.PresetCurve=s;function o(p,u){Object.defineProperty(e,p,{configurable:!0,enumerable:!0,get:function(){var v=new s(u);return Object.defineProperty(e,p,{configurable:!0,enumerable:!0,value:v}),v}})}o("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:t.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),o("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:t.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),o("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:t.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),o("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:t.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),o("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:t.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),o("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:t.sha256,gRed:!1,g:["9"]}),o("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:t.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});var d;try{d=ok()}catch{d=void 0}o("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:t.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",d]})})(cn);var lk=un,It=qr,nl=Rt;function At(a){if(!(this instanceof At))return new At(a);this.hash=a.hash,this.predResist=!!a.predResist,this.outLen=this.hash.outSize,this.minEntropy=a.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var e=It.toArray(a.entropy,a.entropyEnc||"hex"),t=It.toArray(a.nonce,a.nonceEnc||"hex"),i=It.toArray(a.pers,a.persEnc||"hex");nl(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(e,t,i)}var ck=At;At.prototype._init=function(e,t,i){var n=e.concat(t).concat(i);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var r=0;r<this.V.length;r++)this.K[r]=0,this.V[r]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656};At.prototype._hmac=function(){return new lk.hmac(this.hash,this.K)};At.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())};At.prototype.reseed=function(e,t,i,n){typeof t!="string"&&(n=i,i=t,t=null),e=It.toArray(e,t),i=It.toArray(i,n),nl(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(i||[])),this._reseed=1};At.prototype.generate=function(e,t,i,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");typeof t!="string"&&(n=i,i=t,t=null),i&&(i=It.toArray(i,n||"hex"),this._update(i));for(var r=[];r.length<e;)this.V=this._hmac().update(this.V).digest(),r=r.concat(this.V);var s=r.slice(0,e);return this._update(i),this._reseed++,It.encode(s,t)};var uk=Ta,dk=ba,gr=dk.assert;function ra(a,e){this.ec=a,this.priv=null,this.pub=null,e.priv&&this._importPrivate(e.priv,e.privEnc),e.pub&&this._importPublic(e.pub,e.pubEnc)}var fk=ra;ra.fromPublic=function(e,t,i){return t instanceof ra?t:new ra(e,{pub:t,pubEnc:i})};ra.fromPrivate=function(e,t,i){return t instanceof ra?t:new ra(e,{priv:t,privEnc:i})};ra.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}};ra.prototype.getPublic=function(e,t){return typeof e=="string"&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub};ra.prototype.getPrivate=function(e){return e==="hex"?this.priv.toString(16,2):this.priv};ra.prototype._importPrivate=function(e,t){this.priv=new uk(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)};ra.prototype._importPublic=function(e,t){if(e.x||e.y){this.ec.curve.type==="mont"?gr(e.x,"Need x coordinate"):(this.ec.curve.type==="short"||this.ec.curve.type==="edwards")&&gr(e.x&&e.y,"Need both x and y coordinate"),this.pub=this.ec.curve.point(e.x,e.y);return}this.pub=this.ec.curve.decodePoint(e,t)};ra.prototype.derive=function(e){return e.validate()||gr(e.validate(),"public point not validated"),e.mul(this.priv).getX()};ra.prototype.sign=function(e,t,i){return this.ec.sign(e,this,t,i)};ra.prototype.verify=function(e,t){return this.ec.verify(e,t,this)};ra.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"};var Ji=Ta,$r=ba,hk=$r.assert;function fn(a,e){if(a instanceof fn)return a;this._importDER(a,e)||(hk(a.r&&a.s,"Signature without r or s"),this.r=new Ji(a.r,16),this.s=new Ji(a.s,16),a.recoveryParam===void 0?this.recoveryParam=null:this.recoveryParam=a.recoveryParam)}var pk=fn;function gk(){this.place=0}function er(a,e){var t=a[e.place++];if(!(t&128))return t;var i=t&15;if(i===0||i>4)return!1;for(var n=0,r=0,s=e.place;r<i;r++,s++)n<<=8,n|=a[s],n>>>=0;return n<=127?!1:(e.place=s,n)}function Cs(a){for(var e=0,t=a.length-1;!a[e]&&!(a[e+1]&128)&&e<t;)e++;return e===0?a:a.slice(e)}fn.prototype._importDER=function(e,t){e=$r.toArray(e,t);var i=new gk;if(e[i.place++]!==48)return!1;var n=er(e,i);if(n===!1||n+i.place!==e.length||e[i.place++]!==2)return!1;var r=er(e,i);if(r===!1)return!1;var s=e.slice(i.place,r+i.place);if(i.place+=r,e[i.place++]!==2)return!1;var o=er(e,i);if(o===!1||e.length!==o+i.place)return!1;var d=e.slice(i.place,o+i.place);if(s[0]===0)if(s[1]&128)s=s.slice(1);else return!1;if(d[0]===0)if(d[1]&128)d=d.slice(1);else return!1;return this.r=new Ji(s),this.s=new Ji(d),this.recoveryParam=null,!0};function ar(a,e){if(e<128){a.push(e);return}var t=1+(Math.log(e)/Math.LN2>>>3);for(a.push(t|128);--t;)a.push(e>>>(t<<3)&255);a.push(e)}fn.prototype.toDER=function(e){var t=this.r.toArray(),i=this.s.toArray();for(t[0]&128&&(t=[0].concat(t)),i[0]&128&&(i=[0].concat(i)),t=Cs(t),i=Cs(i);!i[0]&&!(i[1]&128);)i=i.slice(1);var n=[2];ar(n,t.length),n=n.concat(t),n.push(2),ar(n,i.length);var r=n.concat(i),s=[48];return ar(s,r.length),s=s.concat(r),$r.encode(s,e)};var Pt=Ta,rl=ck,mk=ba,tr=cn,bk=Po,sl=mk.assert,Vr=fk,hn=pk;function Ba(a){if(!(this instanceof Ba))return new Ba(a);typeof a=="string"&&(sl(Object.prototype.hasOwnProperty.call(tr,a),"Unknown curve "+a),a=tr[a]),a instanceof tr.PresetCurve&&(a={curve:a}),this.curve=a.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=a.curve.g,this.g.precompute(a.curve.n.bitLength()+1),this.hash=a.hash||a.curve.hash}var vk=Ba;Ba.prototype.keyPair=function(e){return new Vr(this,e)};Ba.prototype.keyFromPrivate=function(e,t){return Vr.fromPrivate(this,e,t)};Ba.prototype.keyFromPublic=function(e,t){return Vr.fromPublic(this,e,t)};Ba.prototype.genKeyPair=function(e){e||(e={});for(var t=new rl({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||bk(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),i=this.n.byteLength(),n=this.n.sub(new Pt(2));;){var r=new Pt(t.generate(i));if(!(r.cmp(n)>0))return r.iaddn(1),this.keyFromPrivate(r)}};Ba.prototype._truncateToN=function(e,t){var i=e.byteLength()*8-this.n.bitLength();return i>0&&(e=e.ushrn(i)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e};Ba.prototype.sign=function(e,t,i,n){typeof i=="object"&&(n=i,i=null),n||(n={}),t=this.keyFromPrivate(t,i),e=this._truncateToN(new Pt(e,16));for(var r=this.n.byteLength(),s=t.getPrivate().toArray("be",r),o=e.toArray("be",r),d=new rl({hash:this.hash,entropy:s,nonce:o,pers:n.pers,persEnc:n.persEnc||"utf8"}),p=this.n.sub(new Pt(1)),u=0;;u++){var v=n.k?n.k(u):new Pt(d.generate(this.n.byteLength()));if(v=this._truncateToN(v,!0),!(v.cmpn(1)<=0||v.cmp(p)>=0)){var S=this.g.mul(v);if(!S.isInfinity()){var E=S.getX(),A=E.umod(this.n);if(A.cmpn(0)!==0){var L=v.invm(this.n).mul(A.mul(t.getPrivate()).iadd(e));if(L=L.umod(this.n),L.cmpn(0)!==0){var N=(S.getY().isOdd()?1:0)|(E.cmp(A)!==0?2:0);return n.canonical&&L.cmp(this.nh)>0&&(L=this.n.sub(L),N^=1),new hn({r:A,s:L,recoveryParam:N})}}}}}};Ba.prototype.verify=function(e,t,i,n){e=this._truncateToN(new Pt(e,16)),i=this.keyFromPublic(i,n),t=new hn(t,"hex");var r=t.r,s=t.s;if(r.cmpn(1)<0||r.cmp(this.n)>=0||s.cmpn(1)<0||s.cmp(this.n)>=0)return!1;var o=s.invm(this.n),d=o.mul(e).umod(this.n),p=o.mul(r).umod(this.n),u;return this.curve._maxwellTrick?(u=this.g.jmulAdd(d,i.getPublic(),p),u.isInfinity()?!1:u.eqXToP(r)):(u=this.g.mulAdd(d,i.getPublic(),p),u.isInfinity()?!1:u.getX().umod(this.n).cmp(r)===0)};Ba.prototype.recoverPubKey=function(a,e,t,i){sl((3&t)===t,"The recovery param is more than two bits"),e=new hn(e,i);var n=this.n,r=new Pt(a),s=e.r,o=e.s,d=t&1,p=t>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&p)throw new Error("Unable to find sencond key candinate");p?s=this.curve.pointFromX(s.add(this.curve.n),d):s=this.curve.pointFromX(s,d);var u=e.r.invm(n),v=n.sub(r).mul(u).umod(n),S=o.mul(u).umod(n);return this.g.mulAdd(v,s,S)};Ba.prototype.getKeyRecoveryParam=function(a,e,t,i){if(e=new hn(e,i),e.recoveryParam!==null)return e.recoveryParam;for(var n=0;n<4;n++){var r;try{r=this.recoverPubKey(a,e,n)}catch{continue}if(r.eq(t))return n}throw new Error("Unable to find valid recovery factor")};var ji=ba,ol=ji.assert,Os=ji.parseBytes,di=ji.cachedProperty;function Ze(a,e){this.eddsa=a,this._secret=Os(e.secret),a.isPoint(e.pub)?this._pub=e.pub:this._pubBytes=Os(e.pub)}Ze.fromPublic=function(e,t){return t instanceof Ze?t:new Ze(e,{pub:t})};Ze.fromSecret=function(e,t){return t instanceof Ze?t:new Ze(e,{secret:t})};Ze.prototype.secret=function(){return this._secret};di(Ze,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())});di(Ze,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())});di(Ze,"privBytes",function(){var e=this.eddsa,t=this.hash(),i=e.encodingLength-1,n=t.slice(0,e.encodingLength);return n[0]&=248,n[i]&=127,n[i]|=64,n});di(Ze,"priv",function(){return this.eddsa.decodeInt(this.privBytes())});di(Ze,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()});di(Ze,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)});Ze.prototype.sign=function(e){return ol(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)};Ze.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)};Ze.prototype.getSecret=function(e){return ol(this._secret,"KeyPair is public only"),ji.encode(this.secret(),e)};Ze.prototype.getPublic=function(e){return ji.encode(this.pubBytes(),e)};var kk=Ze,yk=Ta,pn=ba,_k=pn.assert,gn=pn.cachedProperty,wk=pn.parseBytes;function Dt(a,e){this.eddsa=a,typeof e!="object"&&(e=wk(e)),Array.isArray(e)&&(e={R:e.slice(0,a.encodingLength),S:e.slice(a.encodingLength)}),_k(e.R&&e.S,"Signature without R or S"),a.isPoint(e.R)&&(this._R=e.R),e.S instanceof yk&&(this._S=e.S),this._Rencoded=Array.isArray(e.R)?e.R:e.Rencoded,this._Sencoded=Array.isArray(e.S)?e.S:e.Sencoded}gn(Dt,"S",function(){return this.eddsa.decodeInt(this.Sencoded())});gn(Dt,"R",function(){return this.eddsa.decodePoint(this.Rencoded())});gn(Dt,"Rencoded",function(){return this.eddsa.encodePoint(this.R())});gn(Dt,"Sencoded",function(){return this.eddsa.encodeInt(this.S())});Dt.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())};Dt.prototype.toHex=function(){return pn.encode(this.toBytes(),"hex").toUpperCase()};var zk=Dt,Sk=un,jk=cn,ti=ba,Ak=ti.assert,ll=ti.parseBytes,cl=kk,Ns=zk;function pa(a){if(Ak(a==="ed25519","only tested with ed25519 so far"),!(this instanceof pa))return new pa(a);a=jk[a].curve,this.curve=a,this.g=a.g,this.g.precompute(a.n.bitLength()+1),this.pointClass=a.point().constructor,this.encodingLength=Math.ceil(a.n.bitLength()/8),this.hash=Sk.sha512}var xk=pa;pa.prototype.sign=function(e,t){e=ll(e);var i=this.keyFromSecret(t),n=this.hashInt(i.messagePrefix(),e),r=this.g.mul(n),s=this.encodePoint(r),o=this.hashInt(s,i.pubBytes(),e).mul(i.priv()),d=n.add(o).umod(this.curve.n);return this.makeSignature({R:r,S:d,Rencoded:s})};pa.prototype.verify=function(e,t,i){e=ll(e),t=this.makeSignature(t);var n=this.keyFromPublic(i),r=this.hashInt(t.Rencoded(),n.pubBytes(),e),s=this.g.mul(t.S()),o=t.R().add(n.pub().mul(r));return o.eq(s)};pa.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return ti.intFromLE(e.digest()).umod(this.curve.n)};pa.prototype.keyFromPublic=function(e){return cl.fromPublic(this,e)};pa.prototype.keyFromSecret=function(e){return cl.fromSecret(this,e)};pa.prototype.makeSignature=function(e){return e instanceof Ns?e:new Ns(this,e)};pa.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t};pa.prototype.decodePoint=function(e){e=ti.parseBytes(e);var t=e.length-1,i=e.slice(0,t).concat(e[t]&-129),n=(e[t]&128)!==0,r=ti.intFromLE(i);return this.curve.pointFromY(r,n)};pa.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)};pa.prototype.decodeInt=function(e){return ti.intFromLE(e)};pa.prototype.isPoint=function(e){return e instanceof this.pointClass};(function(a){var e=a;e.version=jb.version,e.utils=ba,e.rand=Po,e.curve=Wr,e.curves=cn,e.ec=vk,e.eddsa=xk})(Io);var Bk=Lt.bignum,Ek=No.Buffer,ul=function(e,t){var i=Ek.from(e,"base64"),n=e=new Bk(i,10,"be").iabs();return t&&i.fill(0),n},dl=Lt.define("AlgorithmIdentifer",function(){this.seq().obj(this.key("algorithm").objid(),this.key("parameters").optional().any())}),Mk=dl,fl=Lt.define("PublicKeyInfo",function(){this.seq().obj(this.key("algorithm").use(Mk),this.key("PublicKey").bitstr())}),Zr=Lt.define("Version",function(){this.int()}),Lk=dl,Rk=Zr,hl=Lt.define("PrivateKeyInfo",function(){this.seq().obj(this.key("version").use(Rk),this.key("privateKeyAlgorithm").use(Lk),this.key("privateKey").octstr(),this.key("attributes").optional().any())}),pl=Lt,Is=No.Buffer,Hk=Io.ec,ir=ul,Ck=fl,Ok=hl,Nk=Zr,Ik=pl.define("ECParameters",function(){this.choice({namedCurve:this.objid()})}),Pk=1,Tk=pl.define("ECPrivateKey",function(){this.seq().obj(this.key("version").use(Nk),this.key("privateKey").octstr(),this.key("parameters").explicit(0).optional().any(),this.key("publicKey").explicit(1).optional().bitstr())}),Kk={"P-256":"p256","P-384":"p384","P-521":"p521"},mr={"P-256":[1,2,840,10045,3,1,7],"P-384":[1,3,132,0,34],"P-521":[1,3,132,0,35]},br={},vr={};Object.keys(mr).forEach(function(a){br[a]=Ik.encode({type:"namedCurve",value:mr[a]},"der"),vr[a]={algorithm:[1,2,840,10045,2,1],parameters:br[a]}});mr=null;function Dk(a,e){if(typeof a.crv!="string")throw new TypeError('Expected "jwk.crv" to be a String');var t=typeof a.d=="string",i=t?["undefined","string"]:["string"];if(i.indexOf(typeof a.x)===-1)throw new TypeError('Expected "jwk.x" to be a String');if(i.indexOf(typeof a.y)===-1)throw new TypeError('Expected "jwk.y" to be a String');if(e.private&&!t)throw new TypeError('Expected "jwk.d" to be a String');var n=Kk[a.crv];if(!n)throw new Error('Unsupported curve "'+a.crv+'"');var r=new Hk(n),s={},o=a.x&&a.y;o&&(s.pub={x:ir(a.x,!1),y:ir(a.y,!1)}),(e.private||!o)&&(s.priv=ir(a.d,!0)),s=r.keyPair(s);var d=s.validate();if(!d.result)throw new Error('Invalid key for curve: "'+d.reason+'"');var p=Uk(a.crv,s,e);return p}function Uk(a,e,t){var i=!1,n=e.getPublic(i,"hex");n=Is.from(n,"hex"),n={unused:0,data:n};var r;if(t.private){var s=e.getPrivate("hex");s=Is.from(s,"hex"),r=Ok.encode({version:0,privateKeyAlgorithm:vr[a],privateKey:Tk.encode({version:Pk,privateKey:s,parameters:br[a],publicKey:n},"der")},"pem",{label:"PRIVATE KEY"}),s.fill(0)}else r=Ck.encode({algorithm:vr[a],PublicKey:n},"pem",{label:"PUBLIC KEY"});return r.slice(-1)!==`
`&&(r+=`
`),r}var Jk=Dk,gl=Lt,Ua=ul,qk=fl,Fk=hl,Wk=Zr,Gk=gl.define("RSAPrivateKey",function(){this.seq().obj(this.key("version").use(Wk),this.key("modulus").int(),this.key("publicExponent").int(),this.key("privateExponent").int(),this.key("prime1").int(),this.key("prime2").int(),this.key("exponent1").int(),this.key("exponent2").int(),this.key("coefficient").int())}),$k=gl.define("RSAPublicKey",function(){this.seq().obj(this.key("modulus").int(),this.key("publicExponent").int())}),Ps={algorithm:[1,2,840,113549,1,1,1],parameters:[5,0]};function Vk(a,e){if(typeof a.e!="string")throw new TypeError('Expected "jwk.e" to be a String');if(typeof a.n!="string")throw new TypeError('Expected "jwk.n" to be a String');if(e.private){if(typeof a.d!="string")throw new TypeError('Expected "jwk.d" to be a String');if(typeof a.p!="string")throw new TypeError('Expected "jwk.p" to be a String');if(typeof a.q!="string")throw new TypeError('Expected "jwk.q" to be a String');if(typeof a.dp!="string")throw new TypeError('Expected "jwk.dp" to be a String');if(typeof a.dq!="string")throw new TypeError('Expected "jwk.dq" to be a String');if(typeof a.qi!="string")throw new TypeError('Expected "jwk.qi" to be a String')}var t;return e.private?t=Fk.encode({version:0,privateKeyAlgorithm:Ps,privateKey:Gk.encode({version:0,modulus:Ua(a.n,!1),publicExponent:Ua(a.e,!1),privateExponent:Ua(a.d,!0),prime1:Ua(a.p,!0),prime2:Ua(a.q,!0),exponent1:Ua(a.dp,!0),exponent2:Ua(a.dq,!0),coefficient:Ua(a.qi,!0)},"der")},"pem",{label:"PRIVATE KEY"}):t=qk.encode({algorithm:Ps,PublicKey:{unused:0,data:$k.encode({modulus:Ua(a.n,!1),publicExponent:Ua(a.e,!1)},"der")}},"pem",{label:"PUBLIC KEY"}),t.slice(-1)!==`
`&&(t+=`
`),t}var Zk=Vk,Yk=Jk,Xk=Zk;function Qk(a,e){if(typeof a!="object"||a===null)throw new TypeError('Expected "jwk" to be an Object');var t=a.kty;if(typeof t!="string")throw new TypeError('Expected "jwk.kty" to be a String');switch(e=e||{},e.private=e.private===!0,t){case"EC":return Yk(a,e);case"RSA":return Xk(a,e);default:throw new Error('Unsupported key type "'+t+'"')}}var e1=Qk;function ml(a,e){return function(){return a.apply(e,arguments)}}const{toString:a1}=Object.prototype,{getPrototypeOf:Yr}=Object,mn=(a=>e=>{const t=a1.call(e);return a[t]||(a[t]=t.slice(8,-1).toLowerCase())})(Object.create(null)),tt=a=>(a=a.toLowerCase(),e=>mn(e)===a),bn=a=>e=>typeof e===a,{isArray:fi}=Array,ki=bn("undefined");function t1(a){return a!==null&&!ki(a)&&a.constructor!==null&&!ki(a.constructor)&&ja(a.constructor.isBuffer)&&a.constructor.isBuffer(a)}const bl=tt("ArrayBuffer");function i1(a){let e;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?e=ArrayBuffer.isView(a):e=a&&a.buffer&&bl(a.buffer),e}const n1=bn("string"),ja=bn("function"),vl=bn("number"),vn=a=>a!==null&&typeof a=="object",r1=a=>a===!0||a===!1,Oi=a=>{if(mn(a)!=="object")return!1;const e=Yr(a);return(e===null||e===Object.prototype||Object.getPrototypeOf(e)===null)&&!(Symbol.toStringTag in a)&&!(Symbol.iterator in a)},s1=tt("Date"),o1=tt("File"),l1=tt("Blob"),c1=tt("FileList"),u1=a=>vn(a)&&ja(a.pipe),d1=a=>{let e;return a&&(typeof FormData=="function"&&a instanceof FormData||ja(a.append)&&((e=mn(a))==="formdata"||e==="object"&&ja(a.toString)&&a.toString()==="[object FormData]"))},f1=tt("URLSearchParams"),h1=a=>a.trim?a.trim():a.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function Ai(a,e,{allOwnKeys:t=!1}={}){if(a===null||typeof a>"u")return;let i,n;if(typeof a!="object"&&(a=[a]),fi(a))for(i=0,n=a.length;i<n;i++)e.call(null,a[i],i,a);else{const r=t?Object.getOwnPropertyNames(a):Object.keys(a),s=r.length;let o;for(i=0;i<s;i++)o=r[i],e.call(null,a[o],o,a)}}function kl(a,e){e=e.toLowerCase();const t=Object.keys(a);let i=t.length,n;for(;i-- >0;)if(n=t[i],e===n.toLowerCase())return n;return null}const yl=(()=>typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:Vt)(),_l=a=>!ki(a)&&a!==yl;function kr(){const{caseless:a}=_l(this)&&this||{},e={},t=(i,n)=>{const r=a&&kl(e,n)||n;Oi(e[r])&&Oi(i)?e[r]=kr(e[r],i):Oi(i)?e[r]=kr({},i):fi(i)?e[r]=i.slice():e[r]=i};for(let i=0,n=arguments.length;i<n;i++)arguments[i]&&Ai(arguments[i],t);return e}const p1=(a,e,t,{allOwnKeys:i}={})=>(Ai(e,(n,r)=>{t&&ja(n)?a[r]=ml(n,t):a[r]=n},{allOwnKeys:i}),a),g1=a=>(a.charCodeAt(0)===65279&&(a=a.slice(1)),a),m1=(a,e,t,i)=>{a.prototype=Object.create(e.prototype,i),a.prototype.constructor=a,Object.defineProperty(a,"super",{value:e.prototype}),t&&Object.assign(a.prototype,t)},b1=(a,e,t,i)=>{let n,r,s;const o={};if(e=e||{},a==null)return e;do{for(n=Object.getOwnPropertyNames(a),r=n.length;r-- >0;)s=n[r],(!i||i(s,a,e))&&!o[s]&&(e[s]=a[s],o[s]=!0);a=t!==!1&&Yr(a)}while(a&&(!t||t(a,e))&&a!==Object.prototype);return e},v1=(a,e,t)=>{a=String(a),(t===void 0||t>a.length)&&(t=a.length),t-=e.length;const i=a.indexOf(e,t);return i!==-1&&i===t},k1=a=>{if(!a)return null;if(fi(a))return a;let e=a.length;if(!vl(e))return null;const t=new Array(e);for(;e-- >0;)t[e]=a[e];return t},y1=(a=>e=>a&&e instanceof a)(typeof Uint8Array<"u"&&Yr(Uint8Array)),_1=(a,e)=>{const i=(a&&a[Symbol.iterator]).call(a);let n;for(;(n=i.next())&&!n.done;){const r=n.value;e.call(a,r[0],r[1])}},w1=(a,e)=>{let t;const i=[];for(;(t=a.exec(e))!==null;)i.push(t);return i},z1=tt("HTMLFormElement"),S1=a=>a.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(t,i,n){return i.toUpperCase()+n}),Ts=(({hasOwnProperty:a})=>(e,t)=>a.call(e,t))(Object.prototype),j1=tt("RegExp"),wl=(a,e)=>{const t=Object.getOwnPropertyDescriptors(a),i={};Ai(t,(n,r)=>{let s;(s=e(n,r,a))!==!1&&(i[r]=s||n)}),Object.defineProperties(a,i)},A1=a=>{wl(a,(e,t)=>{if(ja(a)&&["arguments","caller","callee"].indexOf(t)!==-1)return!1;const i=a[t];if(ja(i)){if(e.enumerable=!1,"writable"in e){e.writable=!1;return}e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")})}})},x1=(a,e)=>{const t={},i=n=>{n.forEach(r=>{t[r]=!0})};return fi(a)?i(a):i(String(a).split(e)),t},B1=()=>{},E1=(a,e)=>(a=+a,Number.isFinite(a)?a:e),nr="abcdefghijklmnopqrstuvwxyz",Ks="0123456789",zl={DIGIT:Ks,ALPHA:nr,ALPHA_DIGIT:nr+nr.toUpperCase()+Ks},M1=(a=16,e=zl.ALPHA_DIGIT)=>{let t="";const{length:i}=e;for(;a--;)t+=e[Math.random()*i|0];return t};function L1(a){return!!(a&&ja(a.append)&&a[Symbol.toStringTag]==="FormData"&&a[Symbol.iterator])}const R1=a=>{const e=new Array(10),t=(i,n)=>{if(vn(i)){if(e.indexOf(i)>=0)return;if(!("toJSON"in i)){e[n]=i;const r=fi(i)?[]:{};return Ai(i,(s,o)=>{const d=t(s,n+1);!ki(d)&&(r[o]=d)}),e[n]=void 0,r}}return i};return t(a,0)},H1=tt("AsyncFunction"),C1=a=>a&&(vn(a)||ja(a))&&ja(a.then)&&ja(a.catch);var C={isArray:fi,isArrayBuffer:bl,isBuffer:t1,isFormData:d1,isArrayBufferView:i1,isString:n1,isNumber:vl,isBoolean:r1,isObject:vn,isPlainObject:Oi,isUndefined:ki,isDate:s1,isFile:o1,isBlob:l1,isRegExp:j1,isFunction:ja,isStream:u1,isURLSearchParams:f1,isTypedArray:y1,isFileList:c1,forEach:Ai,merge:kr,extend:p1,trim:h1,stripBOM:g1,inherits:m1,toFlatObject:b1,kindOf:mn,kindOfTest:tt,endsWith:v1,toArray:k1,forEachEntry:_1,matchAll:w1,isHTMLForm:z1,hasOwnProperty:Ts,hasOwnProp:Ts,reduceDescriptors:wl,freezeMethods:A1,toObjectSet:x1,toCamelCase:S1,noop:B1,toFiniteNumber:E1,findKey:kl,global:yl,isContextDefined:_l,ALPHABET:zl,generateString:M1,isSpecCompliantForm:L1,toJSONObject:R1,isAsyncFn:H1,isThenable:C1};function Y(a,e,t,i,n){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=a,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),i&&(this.request=i),n&&(this.response=n)}C.inherits(Y,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:C.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const Sl=Y.prototype,jl={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(a=>{jl[a]={value:a}});Object.defineProperties(Y,jl);Object.defineProperty(Sl,"isAxiosError",{value:!0});Y.from=(a,e,t,i,n,r)=>{const s=Object.create(Sl);return C.toFlatObject(a,s,function(d){return d!==Error.prototype},o=>o!=="isAxiosError"),Y.call(s,a.message,e,t,i,n),s.cause=a,s.name=a.name,r&&Object.assign(s,r),s};var O1=null;function yr(a){return C.isPlainObject(a)||C.isArray(a)}function Al(a){return C.endsWith(a,"[]")?a.slice(0,-2):a}function Ds(a,e,t){return a?a.concat(e).map(function(n,r){return n=Al(n),!t&&r?"["+n+"]":n}).join(t?".":""):e}function N1(a){return C.isArray(a)&&!a.some(yr)}const I1=C.toFlatObject(C,{},null,function(e){return/^is[A-Z]/.test(e)});function kn(a,e,t){if(!C.isObject(a))throw new TypeError("target must be an object");e=e||new FormData,t=C.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,function(L,N){return!C.isUndefined(N[L])});const i=t.metaTokens,n=t.visitor||u,r=t.dots,s=t.indexes,d=(t.Blob||typeof Blob<"u"&&Blob)&&C.isSpecCompliantForm(e);if(!C.isFunction(n))throw new TypeError("visitor must be a function");function p(A){if(A===null)return"";if(C.isDate(A))return A.toISOString();if(!d&&C.isBlob(A))throw new Y("Blob is not supported. Use a Buffer instead.");return C.isArrayBuffer(A)||C.isTypedArray(A)?d&&typeof Blob=="function"?new Blob([A]):Buffer.from(A):A}function u(A,L,N){let I=A;if(A&&!N&&typeof A=="object"){if(C.endsWith(L,"{}"))L=i?L:L.slice(0,-2),A=JSON.stringify(A);else if(C.isArray(A)&&N1(A)||(C.isFileList(A)||C.endsWith(L,"[]"))&&(I=C.toArray(A)))return L=Al(L),I.forEach(function(q,J){!(C.isUndefined(q)||q===null)&&e.append(s===!0?Ds([L],J,r):s===null?L:L+"[]",p(q))}),!1}return yr(A)?!0:(e.append(Ds(N,L,r),p(A)),!1)}const v=[],S=Object.assign(I1,{defaultVisitor:u,convertValue:p,isVisitable:yr});function E(A,L){if(!C.isUndefined(A)){if(v.indexOf(A)!==-1)throw Error("Circular reference detected in "+L.join("."));v.push(A),C.forEach(A,function(I,T){(!(C.isUndefined(I)||I===null)&&n.call(e,I,C.isString(T)?T.trim():T,L,S))===!0&&E(I,L?L.concat(T):[T])}),v.pop()}}if(!C.isObject(a))throw new TypeError("data must be an object");return E(a),e}function Us(a){const e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(a).replace(/[!'()~]|%20|%00/g,function(i){return e[i]})}function Xr(a,e){this._pairs=[],a&&kn(a,this,e)}const xl=Xr.prototype;xl.append=function(e,t){this._pairs.push([e,t])};xl.toString=function(e){const t=e?function(i){return e.call(this,i,Us)}:Us;return this._pairs.map(function(n){return t(n[0])+"="+t(n[1])},"").join("&")};function P1(a){return encodeURIComponent(a).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Bl(a,e,t){if(!e)return a;const i=t&&t.encode||P1,n=t&&t.serialize;let r;if(n?r=n(e,t):r=C.isURLSearchParams(e)?e.toString():new Xr(e,t).toString(i),r){const s=a.indexOf("#");s!==-1&&(a=a.slice(0,s)),a+=(a.indexOf("?")===-1?"?":"&")+r}return a}class T1{constructor(){this.handlers=[]}use(e,t,i){return this.handlers.push({fulfilled:e,rejected:t,synchronous:i?i.synchronous:!1,runWhen:i?i.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){C.forEach(this.handlers,function(i){i!==null&&e(i)})}}var Js=T1,El={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},K1=typeof URLSearchParams<"u"?URLSearchParams:Xr,D1=typeof FormData<"u"?FormData:null,U1=typeof Blob<"u"?Blob:null,J1={isBrowser:!0,classes:{URLSearchParams:K1,FormData:D1,Blob:U1},protocols:["http","https","file","blob","url","data"]};const Ml=typeof window<"u"&&typeof document<"u",q1=(a=>Ml&&["ReactNative","NativeScript","NS"].indexOf(a)<0)(typeof navigator<"u"&&navigator.product),F1=(()=>typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function")();var W1=Object.freeze({__proto__:null,hasBrowserEnv:Ml,hasStandardBrowserWebWorkerEnv:F1,hasStandardBrowserEnv:q1}),Ga={...W1,...J1};function G1(a,e){return kn(a,new Ga.classes.URLSearchParams,Object.assign({visitor:function(t,i,n,r){return Ga.isNode&&C.isBuffer(t)?(this.append(i,t.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},e))}function $1(a){return C.matchAll(/\w+|\[(\w*)]/g,a).map(e=>e[0]==="[]"?"":e[1]||e[0])}function V1(a){const e={},t=Object.keys(a);let i;const n=t.length;let r;for(i=0;i<n;i++)r=t[i],e[r]=a[r];return e}function Ll(a){function e(t,i,n,r){let s=t[r++];const o=Number.isFinite(+s),d=r>=t.length;return s=!s&&C.isArray(n)?n.length:s,d?(C.hasOwnProp(n,s)?n[s]=[n[s],i]:n[s]=i,!o):((!n[s]||!C.isObject(n[s]))&&(n[s]=[]),e(t,i,n[s],r)&&C.isArray(n[s])&&(n[s]=V1(n[s])),!o)}if(C.isFormData(a)&&C.isFunction(a.entries)){const t={};return C.forEachEntry(a,(i,n)=>{e($1(i),n,t,0)}),t}return null}function Z1(a,e,t){if(C.isString(a))try{return(e||JSON.parse)(a),C.trim(a)}catch(i){if(i.name!=="SyntaxError")throw i}return(t||JSON.stringify)(a)}const Qr={transitional:El,adapter:["xhr","http"],transformRequest:[function(e,t){const i=t.getContentType()||"",n=i.indexOf("application/json")>-1,r=C.isObject(e);if(r&&C.isHTMLForm(e)&&(e=new FormData(e)),C.isFormData(e))return n&&n?JSON.stringify(Ll(e)):e;if(C.isArrayBuffer(e)||C.isBuffer(e)||C.isStream(e)||C.isFile(e)||C.isBlob(e))return e;if(C.isArrayBufferView(e))return e.buffer;if(C.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let o;if(r){if(i.indexOf("application/x-www-form-urlencoded")>-1)return G1(e,this.formSerializer).toString();if((o=C.isFileList(e))||i.indexOf("multipart/form-data")>-1){const d=this.env&&this.env.FormData;return kn(o?{"files[]":e}:e,d&&new d,this.formSerializer)}}return r||n?(t.setContentType("application/json",!1),Z1(e)):e}],transformResponse:[function(e){const t=this.transitional||Qr.transitional,i=t&&t.forcedJSONParsing,n=this.responseType==="json";if(e&&C.isString(e)&&(i&&!this.responseType||n)){const s=!(t&&t.silentJSONParsing)&&n;try{return JSON.parse(e)}catch(o){if(s)throw o.name==="SyntaxError"?Y.from(o,Y.ERR_BAD_RESPONSE,this,null,this.response):o}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Ga.classes.FormData,Blob:Ga.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};C.forEach(["delete","get","head","post","put","patch"],a=>{Qr.headers[a]={}});var es=Qr;const Y1=C.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);var X1=a=>{const e={};let t,i,n;return a&&a.split(`
`).forEach(function(s){n=s.indexOf(":"),t=s.substring(0,n).trim().toLowerCase(),i=s.substring(n+1).trim(),!(!t||e[t]&&Y1[t])&&(t==="set-cookie"?e[t]?e[t].push(i):e[t]=[i]:e[t]=e[t]?e[t]+", "+i:i)}),e};const qs=Symbol("internals");function mi(a){return a&&String(a).trim().toLowerCase()}function Ni(a){return a===!1||a==null?a:C.isArray(a)?a.map(Ni):String(a)}function Q1(a){const e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let i;for(;i=t.exec(a);)e[i[1]]=i[2];return e}const ey=a=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(a.trim());function rr(a,e,t,i,n){if(C.isFunction(i))return i.call(this,e,t);if(n&&(e=t),!!C.isString(e)){if(C.isString(i))return e.indexOf(i)!==-1;if(C.isRegExp(i))return i.test(e)}}function ay(a){return a.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(e,t,i)=>t.toUpperCase()+i)}function ty(a,e){const t=C.toCamelCase(" "+e);["get","set","has"].forEach(i=>{Object.defineProperty(a,i+t,{value:function(n,r,s){return this[i].call(this,e,n,r,s)},configurable:!0})})}class yn{constructor(e){e&&this.set(e)}set(e,t,i){const n=this;function r(o,d,p){const u=mi(d);if(!u)throw new Error("header name must be a non-empty string");const v=C.findKey(n,u);(!v||n[v]===void 0||p===!0||p===void 0&&n[v]!==!1)&&(n[v||d]=Ni(o))}const s=(o,d)=>C.forEach(o,(p,u)=>r(p,u,d));return C.isPlainObject(e)||e instanceof this.constructor?s(e,t):C.isString(e)&&(e=e.trim())&&!ey(e)?s(X1(e),t):e!=null&&r(t,e,i),this}get(e,t){if(e=mi(e),e){const i=C.findKey(this,e);if(i){const n=this[i];if(!t)return n;if(t===!0)return Q1(n);if(C.isFunction(t))return t.call(this,n,i);if(C.isRegExp(t))return t.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=mi(e),e){const i=C.findKey(this,e);return!!(i&&this[i]!==void 0&&(!t||rr(this,this[i],i,t)))}return!1}delete(e,t){const i=this;let n=!1;function r(s){if(s=mi(s),s){const o=C.findKey(i,s);o&&(!t||rr(i,i[o],o,t))&&(delete i[o],n=!0)}}return C.isArray(e)?e.forEach(r):r(e),n}clear(e){const t=Object.keys(this);let i=t.length,n=!1;for(;i--;){const r=t[i];(!e||rr(this,this[r],r,e,!0))&&(delete this[r],n=!0)}return n}normalize(e){const t=this,i={};return C.forEach(this,(n,r)=>{const s=C.findKey(i,r);if(s){t[s]=Ni(n),delete t[r];return}const o=e?ay(r):String(r).trim();o!==r&&delete t[r],t[o]=Ni(n),i[o]=!0}),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return C.forEach(this,(i,n)=>{i!=null&&i!==!1&&(t[n]=e&&C.isArray(i)?i.join(", "):i)}),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([e,t])=>e+": "+t).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const i=new this(e);return t.forEach(n=>i.set(n)),i}static accessor(e){const i=(this[qs]=this[qs]={accessors:{}}).accessors,n=this.prototype;function r(s){const o=mi(s);i[o]||(ty(n,s),i[o]=!0)}return C.isArray(e)?e.forEach(r):r(e),this}}yn.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);C.reduceDescriptors(yn.prototype,({value:a},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>a,set(i){this[t]=i}}});C.freezeMethods(yn);var ot=yn;function sr(a,e){const t=this||es,i=e||t,n=ot.from(i.headers);let r=i.data;return C.forEach(a,function(o){r=o.call(t,r,n.normalize(),e?e.status:void 0)}),n.normalize(),r}function Rl(a){return!!(a&&a.__CANCEL__)}function xi(a,e,t){Y.call(this,a??"canceled",Y.ERR_CANCELED,e,t),this.name="CanceledError"}C.inherits(xi,Y,{__CANCEL__:!0});function iy(a,e,t){const i=t.config.validateStatus;!t.status||!i||i(t.status)?a(t):e(new Y("Request failed with status code "+t.status,[Y.ERR_BAD_REQUEST,Y.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t))}var ny=Ga.hasStandardBrowserEnv?function(){return{write:function(t,i,n,r,s,o){const d=[];d.push(t+"="+encodeURIComponent(i)),C.isNumber(n)&&d.push("expires="+new Date(n).toGMTString()),C.isString(r)&&d.push("path="+r),C.isString(s)&&d.push("domain="+s),o===!0&&d.push("secure"),document.cookie=d.join("; ")},read:function(t){const i=document.cookie.match(new RegExp("(^|;\\s*)("+t+")=([^;]*)"));return i?decodeURIComponent(i[3]):null},remove:function(t){this.write(t,"",Date.now()-864e5)}}}():function(){return{write:function(){},read:function(){return null},remove:function(){}}}();function ry(a){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(a)}function sy(a,e){return e?a.replace(/\/+$/,"")+"/"+e.replace(/^\/+/,""):a}function Hl(a,e){return a&&!ry(e)?sy(a,e):e}var oy=Ga.hasStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let i;function n(r){let s=r;return e&&(t.setAttribute("href",s),s=t.href),t.setAttribute("href",s),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:t.pathname.charAt(0)==="/"?t.pathname:"/"+t.pathname}}return i=n(window.location.href),function(s){const o=C.isString(s)?n(s):s;return o.protocol===i.protocol&&o.host===i.host}}():function(){return function(){return!0}}();function ly(a){const e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(a);return e&&e[1]||""}function cy(a,e){a=a||10;const t=new Array(a),i=new Array(a);let n=0,r=0,s;return e=e!==void 0?e:1e3,function(d){const p=Date.now(),u=i[r];s||(s=p),t[n]=d,i[n]=p;let v=r,S=0;for(;v!==n;)S+=t[v++],v=v%a;if(n=(n+1)%a,n===r&&(r=(r+1)%a),p-s<e)return;const E=u&&p-u;return E?Math.round(S*1e3/E):void 0}}function Fs(a,e){let t=0;const i=cy(50,250);return n=>{const r=n.loaded,s=n.lengthComputable?n.total:void 0,o=r-t,d=i(o),p=r<=s;t=r;const u={loaded:r,total:s,progress:s?r/s:void 0,bytes:o,rate:d||void 0,estimated:d&&s&&p?(s-r)/d:void 0,event:n};u[e?"download":"upload"]=!0,a(u)}}const uy=typeof XMLHttpRequest<"u";var dy=uy&&function(a){return new Promise(function(t,i){let n=a.data;const r=ot.from(a.headers).normalize(),s=a.responseType;let o;function d(){a.cancelToken&&a.cancelToken.unsubscribe(o),a.signal&&a.signal.removeEventListener("abort",o)}let p;if(C.isFormData(n)){if(Ga.hasStandardBrowserEnv||Ga.hasStandardBrowserWebWorkerEnv)r.setContentType(!1);else if((p=r.getContentType())!==!1){const[A,...L]=p?p.split(";").map(N=>N.trim()).filter(Boolean):[];r.setContentType([A||"multipart/form-data",...L].join("; "))}}let u=new XMLHttpRequest;if(a.auth){const A=a.auth.username||"",L=a.auth.password?unescape(encodeURIComponent(a.auth.password)):"";r.set("Authorization","Basic "+btoa(A+":"+L))}const v=Hl(a.baseURL,a.url);u.open(a.method.toUpperCase(),Bl(v,a.params,a.paramsSerializer),!0),u.timeout=a.timeout;function S(){if(!u)return;const A=ot.from("getAllResponseHeaders"in u&&u.getAllResponseHeaders()),N={data:!s||s==="text"||s==="json"?u.responseText:u.response,status:u.status,statusText:u.statusText,headers:A,config:a,request:u};iy(function(T){t(T),d()},function(T){i(T),d()},N),u=null}if("onloadend"in u?u.onloadend=S:u.onreadystatechange=function(){!u||u.readyState!==4||u.status===0&&!(u.responseURL&&u.responseURL.indexOf("file:")===0)||setTimeout(S)},u.onabort=function(){u&&(i(new Y("Request aborted",Y.ECONNABORTED,a,u)),u=null)},u.onerror=function(){i(new Y("Network Error",Y.ERR_NETWORK,a,u)),u=null},u.ontimeout=function(){let L=a.timeout?"timeout of "+a.timeout+"ms exceeded":"timeout exceeded";const N=a.transitional||El;a.timeoutErrorMessage&&(L=a.timeoutErrorMessage),i(new Y(L,N.clarifyTimeoutError?Y.ETIMEDOUT:Y.ECONNABORTED,a,u)),u=null},Ga.hasStandardBrowserEnv){const A=oy(v)&&a.xsrfCookieName&&ny.read(a.xsrfCookieName);A&&r.set(a.xsrfHeaderName,A)}n===void 0&&r.setContentType(null),"setRequestHeader"in u&&C.forEach(r.toJSON(),function(L,N){u.setRequestHeader(N,L)}),C.isUndefined(a.withCredentials)||(u.withCredentials=!!a.withCredentials),s&&s!=="json"&&(u.responseType=a.responseType),typeof a.onDownloadProgress=="function"&&u.addEventListener("progress",Fs(a.onDownloadProgress,!0)),typeof a.onUploadProgress=="function"&&u.upload&&u.upload.addEventListener("progress",Fs(a.onUploadProgress)),(a.cancelToken||a.signal)&&(o=A=>{u&&(i(!A||A.type?new xi(null,a,u):A),u.abort(),u=null)},a.cancelToken&&a.cancelToken.subscribe(o),a.signal&&(a.signal.aborted?o():a.signal.addEventListener("abort",o)));const E=ly(v);if(E&&Ga.protocols.indexOf(E)===-1){i(new Y("Unsupported protocol "+E+":",Y.ERR_BAD_REQUEST,a));return}u.send(n||null)})};const _r={http:O1,xhr:dy};C.forEach(_r,(a,e)=>{if(a){try{Object.defineProperty(a,"name",{value:e})}catch{}Object.defineProperty(a,"adapterName",{value:e})}});const Ws=a=>`- ${a}`,fy=a=>C.isFunction(a)||a===null||a===!1;var Cl={getAdapter:a=>{a=C.isArray(a)?a:[a];const{length:e}=a;let t,i;const n={};for(let r=0;r<e;r++){t=a[r];let s;if(i=t,!fy(t)&&(i=_r[(s=String(t)).toLowerCase()],i===void 0))throw new Y(`Unknown adapter '${s}'`);if(i)break;n[s||"#"+r]=i}if(!i){const r=Object.entries(n).map(([o,d])=>`adapter ${o} `+(d===!1?"is not supported by the environment":"is not available in the build"));let s=e?r.length>1?`since :
`+r.map(Ws).join(`
`):" "+Ws(r[0]):"as no adapter specified";throw new Y("There is no suitable adapter to dispatch the request "+s,"ERR_NOT_SUPPORT")}return i},adapters:_r};function or(a){if(a.cancelToken&&a.cancelToken.throwIfRequested(),a.signal&&a.signal.aborted)throw new xi(null,a)}function Gs(a){return or(a),a.headers=ot.from(a.headers),a.data=sr.call(a,a.transformRequest),["post","put","patch"].indexOf(a.method)!==-1&&a.headers.setContentType("application/x-www-form-urlencoded",!1),Cl.getAdapter(a.adapter||es.adapter)(a).then(function(i){return or(a),i.data=sr.call(a,a.transformResponse,i),i.headers=ot.from(i.headers),i},function(i){return Rl(i)||(or(a),i&&i.response&&(i.response.data=sr.call(a,a.transformResponse,i.response),i.response.headers=ot.from(i.response.headers))),Promise.reject(i)})}const $s=a=>a instanceof ot?a.toJSON():a;function ii(a,e){e=e||{};const t={};function i(p,u,v){return C.isPlainObject(p)&&C.isPlainObject(u)?C.merge.call({caseless:v},p,u):C.isPlainObject(u)?C.merge({},u):C.isArray(u)?u.slice():u}function n(p,u,v){if(C.isUndefined(u)){if(!C.isUndefined(p))return i(void 0,p,v)}else return i(p,u,v)}function r(p,u){if(!C.isUndefined(u))return i(void 0,u)}function s(p,u){if(C.isUndefined(u)){if(!C.isUndefined(p))return i(void 0,p)}else return i(void 0,u)}function o(p,u,v){if(v in e)return i(p,u);if(v in a)return i(void 0,p)}const d={url:r,method:r,data:r,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,beforeRedirect:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:o,headers:(p,u)=>n($s(p),$s(u),!0)};return C.forEach(Object.keys(Object.assign({},a,e)),function(u){const v=d[u]||n,S=v(a[u],e[u],u);C.isUndefined(S)&&v!==o||(t[u]=S)}),t}const Ol="1.6.1",as={};["object","boolean","number","function","string","symbol"].forEach((a,e)=>{as[a]=function(i){return typeof i===a||"a"+(e<1?"n ":" ")+a}});const Vs={};as.transitional=function(e,t,i){function n(r,s){return"[Axios v"+Ol+"] Transitional option '"+r+"'"+s+(i?". "+i:"")}return(r,s,o)=>{if(e===!1)throw new Y(n(s," has been removed"+(t?" in "+t:"")),Y.ERR_DEPRECATED);return t&&!Vs[s]&&(Vs[s]=!0,console.warn(n(s," has been deprecated since v"+t+" and will be removed in the near future"))),e?e(r,s,o):!0}};function hy(a,e,t){if(typeof a!="object")throw new Y("options must be an object",Y.ERR_BAD_OPTION_VALUE);const i=Object.keys(a);let n=i.length;for(;n-- >0;){const r=i[n],s=e[r];if(s){const o=a[r],d=o===void 0||s(o,r,a);if(d!==!0)throw new Y("option "+r+" must be "+d,Y.ERR_BAD_OPTION_VALUE);continue}if(t!==!0)throw new Y("Unknown option "+r,Y.ERR_BAD_OPTION)}}var wr={assertOptions:hy,validators:as};const mt=wr.validators;class qi{constructor(e){this.defaults=e,this.interceptors={request:new Js,response:new Js}}request(e,t){typeof e=="string"?(t=t||{},t.url=e):t=e||{},t=ii(this.defaults,t);const{transitional:i,paramsSerializer:n,headers:r}=t;i!==void 0&&wr.assertOptions(i,{silentJSONParsing:mt.transitional(mt.boolean),forcedJSONParsing:mt.transitional(mt.boolean),clarifyTimeoutError:mt.transitional(mt.boolean)},!1),n!=null&&(C.isFunction(n)?t.paramsSerializer={serialize:n}:wr.assertOptions(n,{encode:mt.function,serialize:mt.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let s=r&&C.merge(r.common,r[t.method]);r&&C.forEach(["delete","get","head","post","put","patch","common"],A=>{delete r[A]}),t.headers=ot.concat(s,r);const o=[];let d=!0;this.interceptors.request.forEach(function(L){typeof L.runWhen=="function"&&L.runWhen(t)===!1||(d=d&&L.synchronous,o.unshift(L.fulfilled,L.rejected))});const p=[];this.interceptors.response.forEach(function(L){p.push(L.fulfilled,L.rejected)});let u,v=0,S;if(!d){const A=[Gs.bind(this),void 0];for(A.unshift.apply(A,o),A.push.apply(A,p),S=A.length,u=Promise.resolve(t);v<S;)u=u.then(A[v++],A[v++]);return u}S=o.length;let E=t;for(v=0;v<S;){const A=o[v++],L=o[v++];try{E=A(E)}catch(N){L.call(this,N);break}}try{u=Gs.call(this,E)}catch(A){return Promise.reject(A)}for(v=0,S=p.length;v<S;)u=u.then(p[v++],p[v++]);return u}getUri(e){e=ii(this.defaults,e);const t=Hl(e.baseURL,e.url);return Bl(t,e.params,e.paramsSerializer)}}C.forEach(["delete","get","head","options"],function(e){qi.prototype[e]=function(t,i){return this.request(ii(i||{},{method:e,url:t,data:(i||{}).data}))}});C.forEach(["post","put","patch"],function(e){function t(i){return function(r,s,o){return this.request(ii(o||{},{method:e,headers:i?{"Content-Type":"multipart/form-data"}:{},url:r,data:s}))}}qi.prototype[e]=t(),qi.prototype[e+"Form"]=t(!0)});var Ii=qi;class ts{constructor(e){if(typeof e!="function")throw new TypeError("executor must be a function.");let t;this.promise=new Promise(function(r){t=r});const i=this;this.promise.then(n=>{if(!i._listeners)return;let r=i._listeners.length;for(;r-- >0;)i._listeners[r](n);i._listeners=null}),this.promise.then=n=>{let r;const s=new Promise(o=>{i.subscribe(o),r=o}).then(n);return s.cancel=function(){i.unsubscribe(r)},s},e(function(r,s,o){i.reason||(i.reason=new xi(r,s,o),t(i.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){if(this.reason){e(this.reason);return}this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}static source(){let e;return{token:new ts(function(n){e=n}),cancel:e}}}var py=ts;function gy(a){return function(t){return a.apply(null,t)}}function my(a){return C.isObject(a)&&a.isAxiosError===!0}const zr={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(zr).forEach(([a,e])=>{zr[e]=a});var by=zr;function Nl(a){const e=new Ii(a),t=ml(Ii.prototype.request,e);return C.extend(t,Ii.prototype,e,{allOwnKeys:!0}),C.extend(t,e,null,{allOwnKeys:!0}),t.create=function(n){return Nl(ii(a,n))},t}const Ge=Nl(es);Ge.Axios=Ii;Ge.CanceledError=xi;Ge.CancelToken=py;Ge.isCancel=Rl;Ge.VERSION=Ol;Ge.toFormData=kn;Ge.AxiosError=Y;Ge.Cancel=Ge.CanceledError;Ge.all=function(e){return Promise.all(e)};Ge.spread=gy;Ge.isAxiosError=my;Ge.mergeConfig=ii;Ge.AxiosHeaders=ot;Ge.formToJSON=a=>Ll(C.isHTMLForm(a)?new FormData(a):a);Ge.getAdapter=Cl.getAdapter;Ge.HttpStatusCode=by;Ge.default=Ge;var vy=Ge;const V=crypto,ga=a=>a instanceof CryptoKey,Il=async(a,e)=>{const t=`SHA-${a.slice(-3)}`;return new Uint8Array(await V.subtle.digest(t,e))},Be=new TextEncoder,Ea=new TextDecoder,Fi=2**32;function it(...a){const e=a.reduce((n,{length:r})=>n+r,0),t=new Uint8Array(e);let i=0;return a.forEach(n=>{t.set(n,i),i+=n.length}),t}function ky(a,e){return it(Be.encode(a),new Uint8Array([0]),e)}function Sr(a,e,t){if(e<0||e>=Fi)throw new RangeError(`value must be >= 0 and <= ${Fi-1}. Received ${e}`);a.set([e>>>24,e>>>16,e>>>8,e&255],t)}function Pl(a){const e=Math.floor(a/Fi),t=a%Fi,i=new Uint8Array(8);return Sr(i,e,0),Sr(i,t,4),i}function is(a){const e=new Uint8Array(4);return Sr(e,a),e}function lr(a){return it(is(a.length),a)}async function yy(a,e,t){const i=Math.ceil((e>>3)/32),n=new Uint8Array(i*32);for(let r=0;r<i;r++){const s=new Uint8Array(4+a.length+t.length);s.set(is(r+1)),s.set(a,4),s.set(t,4+a.length),n.set(await Il("sha256",s),r*32)}return n.slice(0,e>>3)}const ns=a=>{let e=a;typeof e=="string"&&(e=Be.encode(e));const t=32768,i=[];for(let n=0;n<e.length;n+=t)i.push(String.fromCharCode.apply(null,e.subarray(n,n+t)));return btoa(i.join(""))},Fe=a=>ns(a).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),Tl=a=>{const e=atob(a),t=new Uint8Array(e.length);for(let i=0;i<e.length;i++)t[i]=e.charCodeAt(i);return t},$e=a=>{let e=a;e instanceof Uint8Array&&(e=Ea.decode(e)),e=e.replace(/-/g,"+").replace(/_/g,"/").replace(/\s/g,"");try{return Tl(e)}catch{throw new TypeError("The input to be decoded is not correctly encoded.")}};class Qe extends Error{static get code(){return"ERR_JOSE_GENERIC"}constructor(e){var t;super(e),this.code="ERR_JOSE_GENERIC",this.name=this.constructor.name,(t=Error.captureStackTrace)===null||t===void 0||t.call(Error,this,this.constructor)}}class da extends Qe{static get code(){return"ERR_JWT_CLAIM_VALIDATION_FAILED"}constructor(e,t="unspecified",i="unspecified"){super(e),this.code="ERR_JWT_CLAIM_VALIDATION_FAILED",this.claim=t,this.reason=i}}class jr extends Qe{static get code(){return"ERR_JWT_EXPIRED"}constructor(e,t="unspecified",i="unspecified"){super(e),this.code="ERR_JWT_EXPIRED",this.claim=t,this.reason=i}}class Wi extends Qe{constructor(){super(...arguments),this.code="ERR_JOSE_ALG_NOT_ALLOWED"}static get code(){return"ERR_JOSE_ALG_NOT_ALLOWED"}}class X extends Qe{constructor(){super(...arguments),this.code="ERR_JOSE_NOT_SUPPORTED"}static get code(){return"ERR_JOSE_NOT_SUPPORTED"}}class yi extends Qe{constructor(){super(...arguments),this.code="ERR_JWE_DECRYPTION_FAILED",this.message="decryption operation failed"}static get code(){return"ERR_JWE_DECRYPTION_FAILED"}}class _y extends Qe{constructor(){super(...arguments),this.code="ERR_JWE_DECOMPRESSION_FAILED",this.message="decompression operation failed"}static get code(){return"ERR_JWE_DECOMPRESSION_FAILED"}}class P extends Qe{constructor(){super(...arguments),this.code="ERR_JWE_INVALID"}static get code(){return"ERR_JWE_INVALID"}}class le extends Qe{constructor(){super(...arguments),this.code="ERR_JWS_INVALID"}static get code(){return"ERR_JWS_INVALID"}}class fa extends Qe{constructor(){super(...arguments),this.code="ERR_JWT_INVALID"}static get code(){return"ERR_JWT_INVALID"}}class Kl extends Qe{constructor(){super(...arguments),this.code="ERR_JWK_INVALID"}static get code(){return"ERR_JWK_INVALID"}}class _n extends Qe{constructor(){super(...arguments),this.code="ERR_JWKS_INVALID"}static get code(){return"ERR_JWKS_INVALID"}}class rs extends Qe{constructor(){super(...arguments),this.code="ERR_JWKS_NO_MATCHING_KEY",this.message="no applicable key found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_NO_MATCHING_KEY"}}class Dl extends Qe{constructor(){super(...arguments),this.code="ERR_JWKS_MULTIPLE_MATCHING_KEYS",this.message="multiple matching keys found in the JSON Web Key Set"}static get code(){return"ERR_JWKS_MULTIPLE_MATCHING_KEYS"}}class Ul extends Qe{constructor(){super(...arguments),this.code="ERR_JWKS_TIMEOUT",this.message="request timed out"}static get code(){return"ERR_JWKS_TIMEOUT"}}class ss extends Qe{constructor(){super(...arguments),this.code="ERR_JWS_SIGNATURE_VERIFICATION_FAILED",this.message="signature verification failed"}static get code(){return"ERR_JWS_SIGNATURE_VERIFICATION_FAILED"}}const wy=Object.freeze(Object.defineProperty({__proto__:null,JOSEAlgNotAllowed:Wi,JOSEError:Qe,JOSENotSupported:X,JWEDecompressionFailed:_y,JWEDecryptionFailed:yi,JWEInvalid:P,JWKInvalid:Kl,JWKSInvalid:_n,JWKSMultipleMatchingKeys:Dl,JWKSNoMatchingKey:rs,JWKSTimeout:Ul,JWSInvalid:le,JWSSignatureVerificationFailed:ss,JWTClaimValidationFailed:da,JWTExpired:jr,JWTInvalid:fa},Symbol.toStringTag,{value:"Module"})),wn=V.getRandomValues.bind(V);function Jl(a){switch(a){case"A128GCM":case"A128GCMKW":case"A192GCM":case"A192GCMKW":case"A256GCM":case"A256GCMKW":return 96;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return 128;default:throw new X(`Unsupported JWE Algorithm: ${a}`)}}const ql=a=>wn(new Uint8Array(Jl(a)>>3)),Fl=(a,e)=>{if(e.length<<3!==Jl(a))throw new P("Invalid Initialization Vector length")},Gi=(a,e)=>{const t=a.byteLength<<3;if(t!==e)throw new P(`Invalid Content Encryption Key length. Expected ${e} bits, got ${t} bits`)},zy=(a,e)=>{if(!(a instanceof Uint8Array))throw new TypeError("First argument must be a buffer");if(!(e instanceof Uint8Array))throw new TypeError("Second argument must be a buffer");if(a.length!==e.length)throw new TypeError("Input buffers must have the same length");const t=a.length;let i=0,n=-1;for(;++n<t;)i|=a[n]^e[n];return i===0};function ia(a,e="algorithm.name"){return new TypeError(`CryptoKey does not support this operation, its ${e} must be ${a}`)}function wt(a,e){return a.name===e}function Pi(a){return parseInt(a.name.slice(4),10)}function Sy(a){switch(a){case"ES256":return"P-256";case"ES384":return"P-384";case"ES512":return"P-521";default:throw new Error("unreachable")}}function Wl(a,e){if(e.length&&!e.some(t=>a.usages.includes(t))){let t="CryptoKey does not support this operation, its usages must include ";if(e.length>2){const i=e.pop();t+=`one of ${e.join(", ")}, or ${i}.`}else e.length===2?t+=`one of ${e[0]} or ${e[1]}.`:t+=`${e[0]}.`;throw new TypeError(t)}}function jy(a,e,...t){switch(e){case"HS256":case"HS384":case"HS512":{if(!wt(a.algorithm,"HMAC"))throw ia("HMAC");const i=parseInt(e.slice(2),10);if(Pi(a.algorithm.hash)!==i)throw ia(`SHA-${i}`,"algorithm.hash");break}case"RS256":case"RS384":case"RS512":{if(!wt(a.algorithm,"RSASSA-PKCS1-v1_5"))throw ia("RSASSA-PKCS1-v1_5");const i=parseInt(e.slice(2),10);if(Pi(a.algorithm.hash)!==i)throw ia(`SHA-${i}`,"algorithm.hash");break}case"PS256":case"PS384":case"PS512":{if(!wt(a.algorithm,"RSA-PSS"))throw ia("RSA-PSS");const i=parseInt(e.slice(2),10);if(Pi(a.algorithm.hash)!==i)throw ia(`SHA-${i}`,"algorithm.hash");break}case"EdDSA":{if(a.algorithm.name!=="Ed25519"&&a.algorithm.name!=="Ed448")throw ia("Ed25519 or Ed448");break}case"ES256":case"ES384":case"ES512":{if(!wt(a.algorithm,"ECDSA"))throw ia("ECDSA");const i=Sy(e);if(a.algorithm.namedCurve!==i)throw ia(i,"algorithm.namedCurve");break}default:throw new TypeError("CryptoKey does not support this operation")}Wl(a,t)}function xt(a,e,...t){switch(e){case"A128GCM":case"A192GCM":case"A256GCM":{if(!wt(a.algorithm,"AES-GCM"))throw ia("AES-GCM");const i=parseInt(e.slice(1,4),10);if(a.algorithm.length!==i)throw ia(i,"algorithm.length");break}case"A128KW":case"A192KW":case"A256KW":{if(!wt(a.algorithm,"AES-KW"))throw ia("AES-KW");const i=parseInt(e.slice(1,4),10);if(a.algorithm.length!==i)throw ia(i,"algorithm.length");break}case"ECDH":{switch(a.algorithm.name){case"ECDH":case"X25519":case"X448":break;default:throw ia("ECDH, X25519, or X448")}break}case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":if(!wt(a.algorithm,"PBKDF2"))throw ia("PBKDF2");break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":{if(!wt(a.algorithm,"RSA-OAEP"))throw ia("RSA-OAEP");const i=parseInt(e.slice(9),10)||1;if(Pi(a.algorithm.hash)!==i)throw ia(`SHA-${i}`,"algorithm.hash");break}default:throw new TypeError("CryptoKey does not support this operation")}Wl(a,t)}function Gl(a,e,...t){if(t.length>2){const i=t.pop();a+=`one of type ${t.join(", ")}, or ${i}.`}else t.length===2?a+=`one of type ${t[0]} or ${t[1]}.`:a+=`of type ${t[0]}.`;return e==null?a+=` Received ${e}`:typeof e=="function"&&e.name?a+=` Received function ${e.name}`:typeof e=="object"&&e!=null&&e.constructor&&e.constructor.name&&(a+=` Received an instance of ${e.constructor.name}`),a}const sa=(a,...e)=>Gl("Key must be ",a,...e);function $l(a,e,...t){return Gl(`Key for the ${a} algorithm must be `,e,...t)}const Vl=a=>ga(a),je=["CryptoKey"];async function Ay(a,e,t,i,n,r){if(!(e instanceof Uint8Array))throw new TypeError(sa(e,"Uint8Array"));const s=parseInt(a.slice(1,4),10),o=await V.subtle.importKey("raw",e.subarray(s>>3),"AES-CBC",!1,["decrypt"]),d=await V.subtle.importKey("raw",e.subarray(0,s>>3),{hash:`SHA-${s<<1}`,name:"HMAC"},!1,["sign"]),p=it(r,i,t,Pl(r.length<<3)),u=new Uint8Array((await V.subtle.sign("HMAC",d,p)).slice(0,s>>3));let v;try{v=zy(n,u)}catch{}if(!v)throw new yi;let S;try{S=new Uint8Array(await V.subtle.decrypt({iv:i,name:"AES-CBC"},o,t))}catch{}if(!S)throw new yi;return S}async function xy(a,e,t,i,n,r){let s;e instanceof Uint8Array?s=await V.subtle.importKey("raw",e,"AES-GCM",!1,["decrypt"]):(xt(e,a,"decrypt"),s=e);try{return new Uint8Array(await V.subtle.decrypt({additionalData:r,iv:i,name:"AES-GCM",tagLength:128},s,it(t,n)))}catch{throw new yi}}const Zl=async(a,e,t,i,n,r)=>{if(!ga(e)&&!(e instanceof Uint8Array))throw new TypeError(sa(e,...je,"Uint8Array"));switch(Fl(a,i),a){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return e instanceof Uint8Array&&Gi(e,parseInt(a.slice(-3),10)),Ay(a,e,t,i,n,r);case"A128GCM":case"A192GCM":case"A256GCM":return e instanceof Uint8Array&&Gi(e,parseInt(a.slice(1,4),10)),xy(a,e,t,i,n,r);default:throw new X("Unsupported JWE Content Encryption Algorithm")}},By=async()=>{throw new X('JWE "zip" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.')},Ey=async()=>{throw new X('JWE "zip" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.')},Bi=(...a)=>{const e=a.filter(Boolean);if(e.length===0||e.length===1)return!0;let t;for(const i of e){const n=Object.keys(i);if(!t||t.size===0){t=new Set(n);continue}for(const r of n){if(t.has(r))return!1;t.add(r)}}return!0};function My(a){return typeof a=="object"&&a!==null}function Ye(a){if(!My(a)||Object.prototype.toString.call(a)!=="[object Object]")return!1;if(Object.getPrototypeOf(a)===null)return!0;let e=a;for(;Object.getPrototypeOf(e)!==null;)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(a)===e}const zn=[{hash:"SHA-256",name:"HMAC"},!0,["sign"]];function Yl(a,e){if(a.algorithm.length!==parseInt(e.slice(1,4),10))throw new TypeError(`Invalid key size for alg: ${e}`)}function Xl(a,e,t){if(ga(a))return xt(a,e,t),a;if(a instanceof Uint8Array)return V.subtle.importKey("raw",a,"AES-KW",!0,[t]);throw new TypeError(sa(a,...je,"Uint8Array"))}const Ar=async(a,e,t)=>{const i=await Xl(e,a,"wrapKey");Yl(i,a);const n=await V.subtle.importKey("raw",t,...zn);return new Uint8Array(await V.subtle.wrapKey("raw",n,i,"AES-KW"))},xr=async(a,e,t)=>{const i=await Xl(e,a,"unwrapKey");Yl(i,a);const n=await V.subtle.unwrapKey("raw",t,i,"AES-KW",...zn);return new Uint8Array(await V.subtle.exportKey("raw",n))};async function Ql(a,e,t,i,n=new Uint8Array(0),r=new Uint8Array(0)){if(!ga(a))throw new TypeError(sa(a,...je));if(xt(a,"ECDH"),!ga(e))throw new TypeError(sa(e,...je));xt(e,"ECDH","deriveBits");const s=it(lr(Be.encode(t)),lr(n),lr(r),is(i));let o;a.algorithm.name==="X25519"?o=256:a.algorithm.name==="X448"?o=448:o=Math.ceil(parseInt(a.algorithm.namedCurve.substr(-3),10)/8)<<3;const d=new Uint8Array(await V.subtle.deriveBits({name:a.algorithm.name,public:a},e,o));return yy(d,i,s)}async function Ly(a){if(!ga(a))throw new TypeError(sa(a,...je));return V.subtle.generateKey(a.algorithm,!0,["deriveBits"])}function ec(a){if(!ga(a))throw new TypeError(sa(a,...je));return["P-256","P-384","P-521"].includes(a.algorithm.namedCurve)||a.algorithm.name==="X25519"||a.algorithm.name==="X448"}function Ry(a){if(!(a instanceof Uint8Array)||a.length<8)throw new P("PBES2 Salt Input must be 8 or more octets")}function Hy(a,e){if(a instanceof Uint8Array)return V.subtle.importKey("raw",a,"PBKDF2",!1,["deriveBits"]);if(ga(a))return xt(a,e,"deriveBits","deriveKey"),a;throw new TypeError(sa(a,...je,"Uint8Array"))}async function ac(a,e,t,i){Ry(a);const n=ky(e,a),r=parseInt(e.slice(13,16),10),s={hash:`SHA-${e.slice(8,11)}`,iterations:t,name:"PBKDF2",salt:n},o={length:r,name:"AES-KW"},d=await Hy(i,e);if(d.usages.includes("deriveBits"))return new Uint8Array(await V.subtle.deriveBits(s,d,r));if(d.usages.includes("deriveKey"))return V.subtle.deriveKey(s,d,o,!1,["wrapKey","unwrapKey"]);throw new TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"')}const Cy=async(a,e,t,i=2048,n=wn(new Uint8Array(16)))=>{const r=await ac(n,a,i,e);return{encryptedKey:await Ar(a.slice(-6),r,t),p2c:i,p2s:Fe(n)}},Oy=async(a,e,t,i,n)=>{const r=await ac(n,a,i,e);return xr(a.slice(-6),r,t)};function $i(a){switch(a){case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":return"RSA-OAEP";default:throw new X(`alg ${a} is not supported either by JOSE or your javascript runtime`)}}const Sn=(a,e)=>{if(a.startsWith("RS")||a.startsWith("PS")){const{modulusLength:t}=e.algorithm;if(typeof t!="number"||t<2048)throw new TypeError(`${a} requires key modulusLength to be 2048 bits or larger`)}},Ny=async(a,e,t)=>{if(!ga(e))throw new TypeError(sa(e,...je));if(xt(e,a,"encrypt","wrapKey"),Sn(a,e),e.usages.includes("encrypt"))return new Uint8Array(await V.subtle.encrypt($i(a),e,t));if(e.usages.includes("wrapKey")){const i=await V.subtle.importKey("raw",t,...zn);return new Uint8Array(await V.subtle.wrapKey("raw",i,e,$i(a)))}throw new TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation')},Iy=async(a,e,t)=>{if(!ga(e))throw new TypeError(sa(e,...je));if(xt(e,a,"decrypt","unwrapKey"),Sn(a,e),e.usages.includes("decrypt"))return new Uint8Array(await V.subtle.decrypt($i(a),e,t));if(e.usages.includes("unwrapKey")){const i=await V.subtle.unwrapKey("raw",t,e,$i(a),...zn);return new Uint8Array(await V.subtle.exportKey("raw",i))}throw new TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation')};function os(a){switch(a){case"A128GCM":return 128;case"A192GCM":return 192;case"A256GCM":case"A128CBC-HS256":return 256;case"A192CBC-HS384":return 384;case"A256CBC-HS512":return 512;default:throw new X(`Unsupported JWE Algorithm: ${a}`)}}const Nt=a=>wn(new Uint8Array(os(a)>>3)),tc=(a,e)=>{const t=(a.match(/.{1,64}/g)||[]).join(`
`);return`-----BEGIN ${e}-----
${t}
-----END ${e}-----`},ic=async(a,e,t)=>{if(!ga(t))throw new TypeError(sa(t,...je));if(!t.extractable)throw new TypeError("CryptoKey is not extractable");if(t.type!==a)throw new TypeError(`key is not a ${a} key`);return tc(ns(new Uint8Array(await V.subtle.exportKey(e,t))),`${a.toUpperCase()} KEY`)},Py=a=>ic("public","spki",a),Ty=a=>ic("private","pkcs8",a),vt=(a,e,t=0)=>{t===0&&(e.unshift(e.length),e.unshift(6));let i=a.indexOf(e[0],t);if(i===-1)return!1;const n=a.subarray(i,i+e.length);return n.length!==e.length?!1:n.every((r,s)=>r===e[s])||vt(a,e,i+1)},Zs=a=>{switch(!0){case vt(a,[42,134,72,206,61,3,1,7]):return"P-256";case vt(a,[43,129,4,0,34]):return"P-384";case vt(a,[43,129,4,0,35]):return"P-521";case vt(a,[43,101,110]):return"X25519";case vt(a,[43,101,111]):return"X448";case vt(a,[43,101,112]):return"Ed25519";case vt(a,[43,101,113]):return"Ed448";default:throw new X("Invalid or unsupported EC Key Curve or OKP Key Sub Type")}},nc=async(a,e,t,i,n)=>{var r;let s,o;const d=new Uint8Array(atob(t.replace(a,"")).split("").map(u=>u.charCodeAt(0))),p=e==="spki";switch(i){case"PS256":case"PS384":case"PS512":s={name:"RSA-PSS",hash:`SHA-${i.slice(-3)}`},o=p?["verify"]:["sign"];break;case"RS256":case"RS384":case"RS512":s={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${i.slice(-3)}`},o=p?["verify"]:["sign"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":s={name:"RSA-OAEP",hash:`SHA-${parseInt(i.slice(-3),10)||1}`},o=p?["encrypt","wrapKey"]:["decrypt","unwrapKey"];break;case"ES256":s={name:"ECDSA",namedCurve:"P-256"},o=p?["verify"]:["sign"];break;case"ES384":s={name:"ECDSA",namedCurve:"P-384"},o=p?["verify"]:["sign"];break;case"ES512":s={name:"ECDSA",namedCurve:"P-521"},o=p?["verify"]:["sign"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{const u=Zs(d);s=u.startsWith("P-")?{name:"ECDH",namedCurve:u}:{name:u},o=p?[]:["deriveBits"];break}case"EdDSA":s={name:Zs(d)},o=p?["verify"]:["sign"];break;default:throw new X('Invalid or unsupported "alg" (Algorithm) value')}return V.subtle.importKey(e,d,s,(r=n==null?void 0:n.extractable)!==null&&r!==void 0?r:!1,o)},Ky=(a,e,t)=>nc(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\s)/g,"pkcs8",a,e,t),rc=(a,e,t)=>nc(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\s)/g,"spki",a,e,t);function Ys(a){let e=[],t=0;for(;t<a.length;){let i=sc(a.subarray(t));e.push(i),t+=i.byteLength}return e}function sc(a){let e=0,t=a[0]&31;if(e++,t===31){for(t=0;a[e]>=128;)t=t*128+a[e]-128,e++;t=t*128+a[e]-128,e++}let i=0;if(a[e]<128)i=a[e],e++;else if(i===128){for(i=0;a[e+i]!==0||a[e+i+1]!==0;){if(i>a.byteLength)throw new TypeError("invalid indefinite form length");i++}const r=e+i+2;return{byteLength:r,contents:a.subarray(e,e+i),raw:a.subarray(0,r)}}else{let r=a[e]&127;e++,i=0;for(let s=0;s<r;s++)i=i*256+a[e],e++}const n=e+i;return{byteLength:n,contents:a.subarray(e,n),raw:a.subarray(0,n)}}function Dy(a){const e=Ys(Ys(sc(a).contents)[0].contents);return ns(e[e[0].raw[0]===160?6:5].raw)}function Uy(a){const e=a.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\s)/g,""),t=Tl(e);return tc(Dy(t),"PUBLIC KEY")}const Jy=(a,e,t)=>{let i;try{i=Uy(a)}catch(n){throw new TypeError("Failed to parse the X.509 certificate",{cause:n})}return rc(i,e,t)};function qy(a){let e,t;switch(a.kty){case"oct":{switch(a.alg){case"HS256":case"HS384":case"HS512":e={name:"HMAC",hash:`SHA-${a.alg.slice(-3)}`},t=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":throw new X(`${a.alg} keys cannot be imported as CryptoKey instances`);case"A128GCM":case"A192GCM":case"A256GCM":case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":e={name:"AES-GCM"},t=["encrypt","decrypt"];break;case"A128KW":case"A192KW":case"A256KW":e={name:"AES-KW"},t=["wrapKey","unwrapKey"];break;case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":e={name:"PBKDF2"},t=["deriveBits"];break;default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break}case"RSA":{switch(a.alg){case"PS256":case"PS384":case"PS512":e={name:"RSA-PSS",hash:`SHA-${a.alg.slice(-3)}`},t=a.d?["sign"]:["verify"];break;case"RS256":case"RS384":case"RS512":e={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${a.alg.slice(-3)}`},t=a.d?["sign"]:["verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":e={name:"RSA-OAEP",hash:`SHA-${parseInt(a.alg.slice(-3),10)||1}`},t=a.d?["decrypt","unwrapKey"]:["encrypt","wrapKey"];break;default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break}case"EC":{switch(a.alg){case"ES256":e={name:"ECDSA",namedCurve:"P-256"},t=a.d?["sign"]:["verify"];break;case"ES384":e={name:"ECDSA",namedCurve:"P-384"},t=a.d?["sign"]:["verify"];break;case"ES512":e={name:"ECDSA",namedCurve:"P-521"},t=a.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":e={name:"ECDH",namedCurve:a.crv},t=a.d?["deriveBits"]:[];break;default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break}case"OKP":{switch(a.alg){case"EdDSA":e={name:a.crv},t=a.d?["sign"]:["verify"];break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":e={name:a.crv},t=a.d?["deriveBits"]:[];break;default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}break}default:throw new X('Invalid or unsupported JWK "kty" (Key Type) Parameter value')}return{algorithm:e,keyUsages:t}}const Fy=async a=>{var e,t;if(!a.alg)throw new TypeError('"alg" argument is required when "jwk.alg" is not present');const{algorithm:i,keyUsages:n}=qy(a),r=[i,(e=a.ext)!==null&&e!==void 0?e:!1,(t=a.key_ops)!==null&&t!==void 0?t:n];if(i.name==="PBKDF2")return V.subtle.importKey("raw",$e(a.k),...r);const s={...a};return delete s.alg,delete s.use,V.subtle.importKey("jwk",s,...r)},Xs=Fy;async function Wy(a,e,t){if(typeof a!="string"||a.indexOf("-----BEGIN PUBLIC KEY-----")!==0)throw new TypeError('"spki" must be SPKI formatted string');return rc(a,e,t)}async function Gy(a,e,t){if(typeof a!="string"||a.indexOf("-----BEGIN CERTIFICATE-----")!==0)throw new TypeError('"x509" must be X.509 formatted string');return Jy(a,e,t)}async function $y(a,e,t){if(typeof a!="string"||a.indexOf("-----BEGIN PRIVATE KEY-----")!==0)throw new TypeError('"pkcs8" must be PKCS#8 formatted string');return Ky(a,e,t)}async function jn(a,e,t){var i;if(!Ye(a))throw new TypeError("JWK must be an object");switch(e||(e=a.alg),a.kty){case"oct":if(typeof a.k!="string"||!a.k)throw new TypeError('missing "k" (Key Value) Parameter value');return t??(t=a.ext!==!0),t?Xs({...a,alg:e,ext:(i=a.ext)!==null&&i!==void 0?i:!1}):$e(a.k);case"RSA":if(a.oth!==void 0)throw new X('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');case"EC":case"OKP":return Xs({...a,alg:e});default:throw new X('Unsupported "kty" (Key Type) Parameter value')}}const Vy=(a,e)=>{if(!(e instanceof Uint8Array)){if(!Vl(e))throw new TypeError($l(a,e,...je,"Uint8Array"));if(e.type!=="secret")throw new TypeError(`${je.join(" or ")} instances for symmetric algorithms must be of type "secret"`)}},Zy=(a,e,t)=>{if(!Vl(e))throw new TypeError($l(a,e,...je));if(e.type==="secret")throw new TypeError(`${je.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);if(t==="sign"&&e.type==="public")throw new TypeError(`${je.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);if(t==="decrypt"&&e.type==="public")throw new TypeError(`${je.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);if(e.algorithm&&t==="verify"&&e.type==="private")throw new TypeError(`${je.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);if(e.algorithm&&t==="encrypt"&&e.type==="private")throw new TypeError(`${je.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`)},An=(a,e,t)=>{a.startsWith("HS")||a==="dir"||a.startsWith("PBES2")||/^A\d{3}(?:GCM)?KW$/.test(a)?Vy(a,e):Zy(a,e,t)};async function Yy(a,e,t,i,n){if(!(t instanceof Uint8Array))throw new TypeError(sa(t,"Uint8Array"));const r=parseInt(a.slice(1,4),10),s=await V.subtle.importKey("raw",t.subarray(r>>3),"AES-CBC",!1,["encrypt"]),o=await V.subtle.importKey("raw",t.subarray(0,r>>3),{hash:`SHA-${r<<1}`,name:"HMAC"},!1,["sign"]),d=new Uint8Array(await V.subtle.encrypt({iv:i,name:"AES-CBC"},s,e)),p=it(n,i,d,Pl(n.length<<3)),u=new Uint8Array((await V.subtle.sign("HMAC",o,p)).slice(0,r>>3));return{ciphertext:d,tag:u}}async function Xy(a,e,t,i,n){let r;t instanceof Uint8Array?r=await V.subtle.importKey("raw",t,"AES-GCM",!1,["encrypt"]):(xt(t,a,"encrypt"),r=t);const s=new Uint8Array(await V.subtle.encrypt({additionalData:n,iv:i,name:"AES-GCM",tagLength:128},r,e)),o=s.slice(-16);return{ciphertext:s.slice(0,-16),tag:o}}const Br=async(a,e,t,i,n)=>{if(!ga(t)&&!(t instanceof Uint8Array))throw new TypeError(sa(t,...je,"Uint8Array"));switch(Fl(a,i),a){case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return t instanceof Uint8Array&&Gi(t,parseInt(a.slice(-3),10)),Yy(a,e,t,i,n);case"A128GCM":case"A192GCM":case"A256GCM":return t instanceof Uint8Array&&Gi(t,parseInt(a.slice(1,4),10)),Xy(a,e,t,i,n);default:throw new X("Unsupported JWE Content Encryption Algorithm")}};async function Qy(a,e,t,i){const n=a.slice(0,7);i||(i=ql(n));const{ciphertext:r,tag:s}=await Br(n,t,e,i,new Uint8Array(0));return{encryptedKey:r,iv:Fe(i),tag:Fe(s)}}async function e_(a,e,t,i,n){const r=a.slice(0,7);return Zl(r,e,t,i,n,new Uint8Array(0))}async function a_(a,e,t,i,n){switch(An(a,e,"decrypt"),a){case"dir":{if(t!==void 0)throw new P("Encountered unexpected JWE Encrypted Key");return e}case"ECDH-ES":if(t!==void 0)throw new P("Encountered unexpected JWE Encrypted Key");case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!Ye(i.epk))throw new P('JOSE Header "epk" (Ephemeral Public Key) missing or invalid');if(!ec(e))throw new X("ECDH with the provided key is not allowed or not supported by your javascript runtime");const r=await jn(i.epk,a);let s,o;if(i.apu!==void 0){if(typeof i.apu!="string")throw new P('JOSE Header "apu" (Agreement PartyUInfo) invalid');try{s=$e(i.apu)}catch{throw new P("Failed to base64url decode the apu")}}if(i.apv!==void 0){if(typeof i.apv!="string")throw new P('JOSE Header "apv" (Agreement PartyVInfo) invalid');try{o=$e(i.apv)}catch{throw new P("Failed to base64url decode the apv")}}const d=await Ql(r,e,a==="ECDH-ES"?i.enc:a,a==="ECDH-ES"?os(i.enc):parseInt(a.slice(-5,-2),10),s,o);if(a==="ECDH-ES")return d;if(t===void 0)throw new P("JWE Encrypted Key missing");return xr(a.slice(-6),d,t)}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":{if(t===void 0)throw new P("JWE Encrypted Key missing");return Iy(a,e,t)}case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{if(t===void 0)throw new P("JWE Encrypted Key missing");if(typeof i.p2c!="number")throw new P('JOSE Header "p2c" (PBES2 Count) missing or invalid');const r=(n==null?void 0:n.maxPBES2Count)||1e4;if(i.p2c>r)throw new P('JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds');if(typeof i.p2s!="string")throw new P('JOSE Header "p2s" (PBES2 Salt) missing or invalid');let s;try{s=$e(i.p2s)}catch{throw new P("Failed to base64url decode the p2s")}return Oy(a,e,t,i.p2c,s)}case"A128KW":case"A192KW":case"A256KW":{if(t===void 0)throw new P("JWE Encrypted Key missing");return xr(a,e,t)}case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{if(t===void 0)throw new P("JWE Encrypted Key missing");if(typeof i.iv!="string")throw new P('JOSE Header "iv" (Initialization Vector) missing or invalid');if(typeof i.tag!="string")throw new P('JOSE Header "tag" (Authentication Tag) missing or invalid');let r;try{r=$e(i.iv)}catch{throw new P("Failed to base64url decode the iv")}let s;try{s=$e(i.tag)}catch{throw new P("Failed to base64url decode the tag")}return e_(a,e,t,r,s)}default:throw new X('Invalid or unsupported "alg" (JWE Algorithm) header value')}}function Ei(a,e,t,i,n){if(n.crit!==void 0&&i.crit===void 0)throw new a('"crit" (Critical) Header Parameter MUST be integrity protected');if(!i||i.crit===void 0)return new Set;if(!Array.isArray(i.crit)||i.crit.length===0||i.crit.some(s=>typeof s!="string"||s.length===0))throw new a('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');let r;t!==void 0?r=new Map([...Object.entries(t),...e.entries()]):r=e;for(const s of i.crit){if(!r.has(s))throw new X(`Extension Header Parameter "${s}" is not recognized`);if(n[s]===void 0)throw new a(`Extension Header Parameter "${s}" is missing`);if(r.get(s)&&i[s]===void 0)throw new a(`Extension Header Parameter "${s}" MUST be integrity protected`)}return new Set(i.crit)}const Er=(a,e)=>{if(e!==void 0&&(!Array.isArray(e)||e.some(t=>typeof t!="string")))throw new TypeError(`"${a}" option must be an array of strings`);if(e)return new Set(e)};async function ls(a,e,t){var i;if(!Ye(a))throw new P("Flattened JWE must be an object");if(a.protected===void 0&&a.header===void 0&&a.unprotected===void 0)throw new P("JOSE Header missing");if(typeof a.iv!="string")throw new P("JWE Initialization Vector missing or incorrect type");if(typeof a.ciphertext!="string")throw new P("JWE Ciphertext missing or incorrect type");if(typeof a.tag!="string")throw new P("JWE Authentication Tag missing or incorrect type");if(a.protected!==void 0&&typeof a.protected!="string")throw new P("JWE Protected Header incorrect type");if(a.encrypted_key!==void 0&&typeof a.encrypted_key!="string")throw new P("JWE Encrypted Key incorrect type");if(a.aad!==void 0&&typeof a.aad!="string")throw new P("JWE AAD incorrect type");if(a.header!==void 0&&!Ye(a.header))throw new P("JWE Shared Unprotected Header incorrect type");if(a.unprotected!==void 0&&!Ye(a.unprotected))throw new P("JWE Per-Recipient Unprotected Header incorrect type");let n;if(a.protected)try{const J=$e(a.protected);n=JSON.parse(Ea.decode(J))}catch{throw new P("JWE Protected Header is invalid")}if(!Bi(n,a.header,a.unprotected))throw new P("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");const r={...n,...a.header,...a.unprotected};if(Ei(P,new Map,t==null?void 0:t.crit,n,r),r.zip!==void 0){if(!n||!n.zip)throw new P('JWE "zip" (Compression Algorithm) Header MUST be integrity protected');if(r.zip!=="DEF")throw new X('Unsupported JWE "zip" (Compression Algorithm) Header Parameter value')}const{alg:s,enc:o}=r;if(typeof s!="string"||!s)throw new P("missing JWE Algorithm (alg) in JWE Header");if(typeof o!="string"||!o)throw new P("missing JWE Encryption Algorithm (enc) in JWE Header");const d=t&&Er("keyManagementAlgorithms",t.keyManagementAlgorithms),p=t&&Er("contentEncryptionAlgorithms",t.contentEncryptionAlgorithms);if(d&&!d.has(s))throw new Wi('"alg" (Algorithm) Header Parameter not allowed');if(p&&!p.has(o))throw new Wi('"enc" (Encryption Algorithm) Header Parameter not allowed');let u;if(a.encrypted_key!==void 0)try{u=$e(a.encrypted_key)}catch{throw new P("Failed to base64url decode the encrypted_key")}let v=!1;typeof e=="function"&&(e=await e(n,a),v=!0);let S;try{S=await a_(s,e,u,r,t)}catch(J){if(J instanceof TypeError||J instanceof P||J instanceof X)throw J;S=Nt(o)}let E,A;try{E=$e(a.iv)}catch{throw new P("Failed to base64url decode the iv")}try{A=$e(a.tag)}catch{throw new P("Failed to base64url decode the tag")}const L=Be.encode((i=a.protected)!==null&&i!==void 0?i:"");let N;a.aad!==void 0?N=it(L,Be.encode("."),Be.encode(a.aad)):N=L;let I;try{I=$e(a.ciphertext)}catch{throw new P("Failed to base64url decode the ciphertext")}let T=await Zl(o,S,I,E,A,N);r.zip==="DEF"&&(T=await((t==null?void 0:t.inflateRaw)||By)(T));const q={plaintext:T};if(a.protected!==void 0&&(q.protectedHeader=n),a.aad!==void 0)try{q.additionalAuthenticatedData=$e(a.aad)}catch{throw new P("Failed to base64url decode the aad")}return a.unprotected!==void 0&&(q.sharedUnprotectedHeader=a.unprotected),a.header!==void 0&&(q.unprotectedHeader=a.header),v?{...q,key:e}:q}async function oc(a,e,t){if(a instanceof Uint8Array&&(a=Ea.decode(a)),typeof a!="string")throw new P("Compact JWE must be a string or Uint8Array");const{0:i,1:n,2:r,3:s,4:o,length:d}=a.split(".");if(d!==5)throw new P("Invalid Compact JWE");const p=await ls({ciphertext:s,iv:r||void 0,protected:i||void 0,tag:o||void 0,encrypted_key:n||void 0},e,t),u={plaintext:p.plaintext,protectedHeader:p.protectedHeader};return typeof e=="function"?{...u,key:p.key}:u}async function t_(a,e,t){if(!Ye(a))throw new P("General JWE must be an object");if(!Array.isArray(a.recipients)||!a.recipients.every(Ye))throw new P("JWE Recipients missing or incorrect type");if(!a.recipients.length)throw new P("JWE Recipients has no members");for(const i of a.recipients)try{return await ls({aad:a.aad,ciphertext:a.ciphertext,encrypted_key:i.encrypted_key,header:i.header,iv:a.iv,protected:a.protected,tag:a.tag,unprotected:a.unprotected},e,t)}catch{}throw new yi}const i_=async a=>{if(a instanceof Uint8Array)return{kty:"oct",k:Fe(a)};if(!ga(a))throw new TypeError(sa(a,...je,"Uint8Array"));if(!a.extractable)throw new TypeError("non-extractable CryptoKey cannot be exported as a JWK");const{ext:e,key_ops:t,alg:i,use:n,...r}=await V.subtle.exportKey("jwk",a);return r},n_=i_;async function r_(a){return Py(a)}async function s_(a){return Ty(a)}async function lc(a){return n_(a)}async function cc(a,e,t,i,n={}){let r,s,o;switch(An(a,t,"encrypt"),a){case"dir":{o=t;break}case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{if(!ec(t))throw new X("ECDH with the provided key is not allowed or not supported by your javascript runtime");const{apu:d,apv:p}=n;let{epk:u}=n;u||(u=(await Ly(t)).privateKey);const{x:v,y:S,crv:E,kty:A}=await lc(u),L=await Ql(t,u,a==="ECDH-ES"?e:a,a==="ECDH-ES"?os(e):parseInt(a.slice(-5,-2),10),d,p);if(s={epk:{x:v,crv:E,kty:A}},A==="EC"&&(s.epk.y=S),d&&(s.apu=Fe(d)),p&&(s.apv=Fe(p)),a==="ECDH-ES"){o=L;break}o=i||Nt(e);const N=a.slice(-6);r=await Ar(N,L,o);break}case"RSA1_5":case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":{o=i||Nt(e),r=await Ny(a,t,o);break}case"PBES2-HS256+A128KW":case"PBES2-HS384+A192KW":case"PBES2-HS512+A256KW":{o=i||Nt(e);const{p2c:d,p2s:p}=n;({encryptedKey:r,...s}=await Cy(a,t,o,d,p));break}case"A128KW":case"A192KW":case"A256KW":{o=i||Nt(e),r=await Ar(a,t,o);break}case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":{o=i||Nt(e);const{iv:d}=n;({encryptedKey:r,...s}=await Qy(a,t,o,d));break}default:throw new X('Invalid or unsupported "alg" (JWE Algorithm) header value')}return{cek:o,encryptedKey:r,parameters:s}}const uc=Symbol();class Vi{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("plaintext must be an instance of Uint8Array");this._plaintext=e}setKeyManagementParameters(e){if(this._keyManagementParameters)throw new TypeError("setKeyManagementParameters can only be called once");return this._keyManagementParameters=e,this}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._sharedUnprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._sharedUnprotectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}setContentEncryptionKey(e){if(this._cek)throw new TypeError("setContentEncryptionKey can only be called once");return this._cek=e,this}setInitializationVector(e){if(this._iv)throw new TypeError("setInitializationVector can only be called once");return this._iv=e,this}async encrypt(e,t){if(!this._protectedHeader&&!this._unprotectedHeader&&!this._sharedUnprotectedHeader)throw new P("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");if(!Bi(this._protectedHeader,this._unprotectedHeader,this._sharedUnprotectedHeader))throw new P("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const i={...this._protectedHeader,...this._unprotectedHeader,...this._sharedUnprotectedHeader};if(Ei(P,new Map,t==null?void 0:t.crit,this._protectedHeader,i),i.zip!==void 0){if(!this._protectedHeader||!this._protectedHeader.zip)throw new P('JWE "zip" (Compression Algorithm) Header MUST be integrity protected');if(i.zip!=="DEF")throw new X('Unsupported JWE "zip" (Compression Algorithm) Header Parameter value')}const{alg:n,enc:r}=i;if(typeof n!="string"||!n)throw new P('JWE "alg" (Algorithm) Header Parameter missing or invalid');if(typeof r!="string"||!r)throw new P('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');let s;if(n==="dir"){if(this._cek)throw new TypeError("setContentEncryptionKey cannot be called when using Direct Encryption")}else if(n==="ECDH-ES"&&this._cek)throw new TypeError("setContentEncryptionKey cannot be called when using Direct Key Agreement");let o;{let A;({cek:o,encryptedKey:s,parameters:A}=await cc(n,r,e,this._cek,this._keyManagementParameters)),A&&(t&&uc in t?this._unprotectedHeader?this._unprotectedHeader={...this._unprotectedHeader,...A}:this.setUnprotectedHeader(A):this._protectedHeader?this._protectedHeader={...this._protectedHeader,...A}:this.setProtectedHeader(A))}this._iv||(this._iv=ql(r));let d,p,u;this._protectedHeader?p=Be.encode(Fe(JSON.stringify(this._protectedHeader))):p=Be.encode(""),this._aad?(u=Fe(this._aad),d=it(p,Be.encode("."),Be.encode(u))):d=p;let v,S;if(i.zip==="DEF"){const A=await((t==null?void 0:t.deflateRaw)||Ey)(this._plaintext);({ciphertext:v,tag:S}=await Br(r,A,o,this._iv,d))}else({ciphertext:v,tag:S}=await Br(r,this._plaintext,o,this._iv,d));const E={ciphertext:Fe(v),iv:Fe(this._iv),tag:Fe(S)};return s&&(E.encrypted_key=Fe(s)),u&&(E.aad=u),this._protectedHeader&&(E.protected=Ea.decode(p)),this._sharedUnprotectedHeader&&(E.unprotected=this._sharedUnprotectedHeader),this._unprotectedHeader&&(E.header=this._unprotectedHeader),E}}class o_{constructor(e,t,i){this.parent=e,this.key=t,this.options=i}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addRecipient(...e){return this.parent.addRecipient(...e)}encrypt(...e){return this.parent.encrypt(...e)}done(){return this.parent}}class l_{constructor(e){this._recipients=[],this._plaintext=e}addRecipient(e,t){const i=new o_(this,e,{crit:t==null?void 0:t.crit});return this._recipients.push(i),i}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setSharedUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setSharedUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}setAdditionalAuthenticatedData(e){return this._aad=e,this}async encrypt(e){var t,i,n;if(!this._recipients.length)throw new P("at least one recipient must be added");if(e={deflateRaw:e==null?void 0:e.deflateRaw},this._recipients.length===1){const[d]=this._recipients,p=await new Vi(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(d.unprotectedHeader).encrypt(d.key,{...d.options,...e});let u={ciphertext:p.ciphertext,iv:p.iv,recipients:[{}],tag:p.tag};return p.aad&&(u.aad=p.aad),p.protected&&(u.protected=p.protected),p.unprotected&&(u.unprotected=p.unprotected),p.encrypted_key&&(u.recipients[0].encrypted_key=p.encrypted_key),p.header&&(u.recipients[0].header=p.header),u}let r;for(let d=0;d<this._recipients.length;d++){const p=this._recipients[d];if(!Bi(this._protectedHeader,this._unprotectedHeader,p.unprotectedHeader))throw new P("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");const u={...this._protectedHeader,...this._unprotectedHeader,...p.unprotectedHeader},{alg:v}=u;if(typeof v!="string"||!v)throw new P('JWE "alg" (Algorithm) Header Parameter missing or invalid');if(v==="dir"||v==="ECDH-ES")throw new P('"dir" and "ECDH-ES" alg may only be used with a single recipient');if(typeof u.enc!="string"||!u.enc)throw new P('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');if(!r)r=u.enc;else if(r!==u.enc)throw new P('JWE "enc" (Encryption Algorithm) Header Parameter must be the same for all recipients');if(Ei(P,new Map,p.options.crit,this._protectedHeader,u),u.zip!==void 0&&(!this._protectedHeader||!this._protectedHeader.zip))throw new P('JWE "zip" (Compression Algorithm) Header MUST be integrity protected')}const s=Nt(r);let o={ciphertext:"",iv:"",recipients:[],tag:""};for(let d=0;d<this._recipients.length;d++){const p=this._recipients[d],u={};o.recipients.push(u);const S={...this._protectedHeader,...this._unprotectedHeader,...p.unprotectedHeader}.alg.startsWith("PBES2")?2048+d:void 0;if(d===0){const L=await new Vi(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(s).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(p.unprotectedHeader).setKeyManagementParameters({p2c:S}).encrypt(p.key,{...p.options,...e,[uc]:!0});o.ciphertext=L.ciphertext,o.iv=L.iv,o.tag=L.tag,L.aad&&(o.aad=L.aad),L.protected&&(o.protected=L.protected),L.unprotected&&(o.unprotected=L.unprotected),u.encrypted_key=L.encrypted_key,L.header&&(u.header=L.header);continue}const{encryptedKey:E,parameters:A}=await cc(((t=p.unprotectedHeader)===null||t===void 0?void 0:t.alg)||((i=this._protectedHeader)===null||i===void 0?void 0:i.alg)||((n=this._unprotectedHeader)===null||n===void 0?void 0:n.alg),r,p.key,s,{p2c:S});u.encrypted_key=Fe(E),(p.unprotectedHeader||A)&&(u.header={...p.unprotectedHeader,...A})}return o}}function dc(a,e){const t=`SHA-${a.slice(-3)}`;switch(a){case"HS256":case"HS384":case"HS512":return{hash:t,name:"HMAC"};case"PS256":case"PS384":case"PS512":return{hash:t,name:"RSA-PSS",saltLength:a.slice(-3)>>3};case"RS256":case"RS384":case"RS512":return{hash:t,name:"RSASSA-PKCS1-v1_5"};case"ES256":case"ES384":case"ES512":return{hash:t,name:"ECDSA",namedCurve:e.namedCurve};case"EdDSA":return{name:e.name};default:throw new X(`alg ${a} is not supported either by JOSE or your javascript runtime`)}}function fc(a,e,t){if(ga(e))return jy(e,a,t),e;if(e instanceof Uint8Array){if(!a.startsWith("HS"))throw new TypeError(sa(e,...je));return V.subtle.importKey("raw",e,{hash:`SHA-${a.slice(-3)}`,name:"HMAC"},!1,[t])}throw new TypeError(sa(e,...je,"Uint8Array"))}const c_=async(a,e,t,i)=>{const n=await fc(a,e,"verify");Sn(a,n);const r=dc(a,n.algorithm);try{return await V.subtle.verify(r,n,t,i)}catch{return!1}};async function cs(a,e,t){var i;if(!Ye(a))throw new le("Flattened JWS must be an object");if(a.protected===void 0&&a.header===void 0)throw new le('Flattened JWS must have either of the "protected" or "header" members');if(a.protected!==void 0&&typeof a.protected!="string")throw new le("JWS Protected Header incorrect type");if(a.payload===void 0)throw new le("JWS Payload missing");if(typeof a.signature!="string")throw new le("JWS Signature missing or incorrect type");if(a.header!==void 0&&!Ye(a.header))throw new le("JWS Unprotected Header incorrect type");let n={};if(a.protected)try{const N=$e(a.protected);n=JSON.parse(Ea.decode(N))}catch{throw new le("JWS Protected Header is invalid")}if(!Bi(n,a.header))throw new le("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const r={...n,...a.header},s=Ei(le,new Map([["b64",!0]]),t==null?void 0:t.crit,n,r);let o=!0;if(s.has("b64")&&(o=n.b64,typeof o!="boolean"))throw new le('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:d}=r;if(typeof d!="string"||!d)throw new le('JWS "alg" (Algorithm) Header Parameter missing or invalid');const p=t&&Er("algorithms",t.algorithms);if(p&&!p.has(d))throw new Wi('"alg" (Algorithm) Header Parameter not allowed');if(o){if(typeof a.payload!="string")throw new le("JWS Payload must be a string")}else if(typeof a.payload!="string"&&!(a.payload instanceof Uint8Array))throw new le("JWS Payload must be a string or an Uint8Array instance");let u=!1;typeof e=="function"&&(e=await e(n,a),u=!0),An(d,e,"verify");const v=it(Be.encode((i=a.protected)!==null&&i!==void 0?i:""),Be.encode("."),typeof a.payload=="string"?Be.encode(a.payload):a.payload);let S;try{S=$e(a.signature)}catch{throw new le("Failed to base64url decode the signature")}if(!await c_(d,e,S,v))throw new ss;let A;if(o)try{A=$e(a.payload)}catch{throw new le("Failed to base64url decode the payload")}else typeof a.payload=="string"?A=Be.encode(a.payload):A=a.payload;const L={payload:A};return a.protected!==void 0&&(L.protectedHeader=n),a.header!==void 0&&(L.unprotectedHeader=a.header),u?{...L,key:e}:L}async function hc(a,e,t){if(a instanceof Uint8Array&&(a=Ea.decode(a)),typeof a!="string")throw new le("Compact JWS must be a string or Uint8Array");const{0:i,1:n,2:r,length:s}=a.split(".");if(s!==3)throw new le("Invalid Compact JWS");const o=await cs({payload:n,protected:i,signature:r},e,t),d={payload:o.payload,protectedHeader:o.protectedHeader};return typeof e=="function"?{...d,key:o.key}:d}async function u_(a,e,t){if(!Ye(a))throw new le("General JWS must be an object");if(!Array.isArray(a.signatures)||!a.signatures.every(Ye))throw new le("JWS Signatures missing or incorrect type");for(const i of a.signatures)try{return await cs({header:i.header,payload:a.payload,protected:i.protected,signature:i.signature},e,t)}catch{}throw new ss}const Ti=a=>Math.floor(a.getTime()/1e3),pc=60,gc=pc*60,us=gc*24,d_=us*7,f_=us*365.25,h_=/^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i,Zi=a=>{const e=h_.exec(a);if(!e)throw new TypeError("Invalid time period format");const t=parseFloat(e[1]);switch(e[2].toLowerCase()){case"sec":case"secs":case"second":case"seconds":case"s":return Math.round(t);case"minute":case"minutes":case"min":case"mins":case"m":return Math.round(t*pc);case"hour":case"hours":case"hr":case"hrs":case"h":return Math.round(t*gc);case"day":case"days":case"d":return Math.round(t*us);case"week":case"weeks":case"w":return Math.round(t*d_);default:return Math.round(t*f_)}},Qs=a=>a.toLowerCase().replace(/^application\//,""),p_=(a,e)=>typeof a=="string"?e.includes(a):Array.isArray(a)?e.some(Set.prototype.has.bind(new Set(a))):!1,ds=(a,e,t={})=>{const{typ:i}=t;if(i&&(typeof a.typ!="string"||Qs(a.typ)!==Qs(i)))throw new da('unexpected "typ" JWT header value',"typ","check_failed");let n;try{n=JSON.parse(Ea.decode(e))}catch{}if(!Ye(n))throw new fa("JWT Claims Set must be a top-level JSON object");const{requiredClaims:r=[],issuer:s,subject:o,audience:d,maxTokenAge:p}=t;p!==void 0&&r.push("iat"),d!==void 0&&r.push("aud"),o!==void 0&&r.push("sub"),s!==void 0&&r.push("iss");for(const E of new Set(r.reverse()))if(!(E in n))throw new da(`missing required "${E}" claim`,E,"missing");if(s&&!(Array.isArray(s)?s:[s]).includes(n.iss))throw new da('unexpected "iss" claim value',"iss","check_failed");if(o&&n.sub!==o)throw new da('unexpected "sub" claim value',"sub","check_failed");if(d&&!p_(n.aud,typeof d=="string"?[d]:d))throw new da('unexpected "aud" claim value',"aud","check_failed");let u;switch(typeof t.clockTolerance){case"string":u=Zi(t.clockTolerance);break;case"number":u=t.clockTolerance;break;case"undefined":u=0;break;default:throw new TypeError("Invalid clockTolerance option type")}const{currentDate:v}=t,S=Ti(v||new Date);if((n.iat!==void 0||p)&&typeof n.iat!="number")throw new da('"iat" claim must be a number',"iat","invalid");if(n.nbf!==void 0){if(typeof n.nbf!="number")throw new da('"nbf" claim must be a number',"nbf","invalid");if(n.nbf>S+u)throw new da('"nbf" claim timestamp check failed',"nbf","check_failed")}if(n.exp!==void 0){if(typeof n.exp!="number")throw new da('"exp" claim must be a number',"exp","invalid");if(n.exp<=S-u)throw new jr('"exp" claim timestamp check failed',"exp","check_failed")}if(p){const E=S-n.iat,A=typeof p=="number"?p:Zi(p);if(E-u>A)throw new jr('"iat" claim timestamp check failed (too far in the past)',"iat","check_failed");if(E<0-u)throw new da('"iat" claim timestamp check failed (it should be in the past)',"iat","check_failed")}return n};async function g_(a,e,t){var i;const n=await hc(a,e,t);if(!((i=n.protectedHeader.crit)===null||i===void 0)&&i.includes("b64")&&n.protectedHeader.b64===!1)throw new fa("JWTs MUST NOT use unencoded payload");const s={payload:ds(n.protectedHeader,n.payload,t),protectedHeader:n.protectedHeader};return typeof e=="function"?{...s,key:n.key}:s}async function m_(a,e,t){const i=await oc(a,e,t),n=ds(i.protectedHeader,i.plaintext,t),{protectedHeader:r}=i;if(r.iss!==void 0&&r.iss!==n.iss)throw new da('replicated "iss" claim header parameter mismatch',"iss","mismatch");if(r.sub!==void 0&&r.sub!==n.sub)throw new da('replicated "sub" claim header parameter mismatch',"sub","mismatch");if(r.aud!==void 0&&JSON.stringify(r.aud)!==JSON.stringify(n.aud))throw new da('replicated "aud" claim header parameter mismatch',"aud","mismatch");const s={payload:n,protectedHeader:r};return typeof e=="function"?{...s,key:i.key}:s}class mc{constructor(e){this._flattened=new Vi(e)}setContentEncryptionKey(e){return this._flattened.setContentEncryptionKey(e),this}setInitializationVector(e){return this._flattened.setInitializationVector(e),this}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}setKeyManagementParameters(e){return this._flattened.setKeyManagementParameters(e),this}async encrypt(e,t){const i=await this._flattened.encrypt(e,t);return[i.protected,i.encrypted_key,i.iv,i.ciphertext,i.tag].join(".")}}const b_=async(a,e,t)=>{const i=await fc(a,e,"sign");Sn(a,i);const n=await V.subtle.sign(dc(a,i.algorithm),i,t);return new Uint8Array(n)};class fs{constructor(e){if(!(e instanceof Uint8Array))throw new TypeError("payload must be an instance of Uint8Array");this._payload=e}setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setUnprotectedHeader(e){if(this._unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this._unprotectedHeader=e,this}async sign(e,t){if(!this._protectedHeader&&!this._unprotectedHeader)throw new le("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");if(!Bi(this._protectedHeader,this._unprotectedHeader))throw new le("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");const i={...this._protectedHeader,...this._unprotectedHeader},n=Ei(le,new Map([["b64",!0]]),t==null?void 0:t.crit,this._protectedHeader,i);let r=!0;if(n.has("b64")&&(r=this._protectedHeader.b64,typeof r!="boolean"))throw new le('The "b64" (base64url-encode payload) Header Parameter must be a boolean');const{alg:s}=i;if(typeof s!="string"||!s)throw new le('JWS "alg" (Algorithm) Header Parameter missing or invalid');An(s,e,"sign");let o=this._payload;r&&(o=Be.encode(Fe(o)));let d;this._protectedHeader?d=Be.encode(Fe(JSON.stringify(this._protectedHeader))):d=Be.encode("");const p=it(d,Be.encode("."),o),u=await b_(s,e,p),v={signature:Fe(u),payload:""};return r&&(v.payload=Ea.decode(o)),this._unprotectedHeader&&(v.header=this._unprotectedHeader),this._protectedHeader&&(v.protected=Ea.decode(d)),v}}class bc{constructor(e){this._flattened=new fs(e)}setProtectedHeader(e){return this._flattened.setProtectedHeader(e),this}async sign(e,t){const i=await this._flattened.sign(e,t);if(i.payload===void 0)throw new TypeError("use the flattened module for creating JWS with b64: false");return`${i.protected}.${i.payload}.${i.signature}`}}class v_{constructor(e,t,i){this.parent=e,this.key=t,this.options=i}setProtectedHeader(e){if(this.protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this.protectedHeader=e,this}setUnprotectedHeader(e){if(this.unprotectedHeader)throw new TypeError("setUnprotectedHeader can only be called once");return this.unprotectedHeader=e,this}addSignature(...e){return this.parent.addSignature(...e)}sign(...e){return this.parent.sign(...e)}done(){return this.parent}}class k_{constructor(e){this._signatures=[],this._payload=e}addSignature(e,t){const i=new v_(this,e,t);return this._signatures.push(i),i}async sign(){if(!this._signatures.length)throw new le("at least one signature must be added");const e={signatures:[],payload:""};for(let t=0;t<this._signatures.length;t++){const i=this._signatures[t],n=new fs(this._payload);n.setProtectedHeader(i.protectedHeader),n.setUnprotectedHeader(i.unprotectedHeader);const{payload:r,...s}=await n.sign(i.key,i.options);if(t===0)e.payload=r;else if(e.payload!==r)throw new le("inconsistent use of JWS Unencoded Payload (RFC7797)");e.signatures.push(s)}return e}}class hs{constructor(e){if(!Ye(e))throw new TypeError("JWT Claims Set MUST be an object");this._payload=e}setIssuer(e){return this._payload={...this._payload,iss:e},this}setSubject(e){return this._payload={...this._payload,sub:e},this}setAudience(e){return this._payload={...this._payload,aud:e},this}setJti(e){return this._payload={...this._payload,jti:e},this}setNotBefore(e){return typeof e=="number"?this._payload={...this._payload,nbf:e}:this._payload={...this._payload,nbf:Ti(new Date)+Zi(e)},this}setExpirationTime(e){return typeof e=="number"?this._payload={...this._payload,exp:e}:this._payload={...this._payload,exp:Ti(new Date)+Zi(e)},this}setIssuedAt(e){return typeof e>"u"?this._payload={...this._payload,iat:Ti(new Date)}:this._payload={...this._payload,iat:e},this}}class y_ extends hs{setProtectedHeader(e){return this._protectedHeader=e,this}async sign(e,t){var i;const n=new bc(Be.encode(JSON.stringify(this._payload)));if(n.setProtectedHeader(this._protectedHeader),Array.isArray((i=this._protectedHeader)===null||i===void 0?void 0:i.crit)&&this._protectedHeader.crit.includes("b64")&&this._protectedHeader.b64===!1)throw new fa("JWTs MUST NOT use unencoded payload");return n.sign(e,t)}}class __ extends hs{setProtectedHeader(e){if(this._protectedHeader)throw new TypeError("setProtectedHeader can only be called once");return this._protectedHeader=e,this}setKeyManagementParameters(e){if(this._keyManagementParameters)throw new TypeError("setKeyManagementParameters can only be called once");return this._keyManagementParameters=e,this}setContentEncryptionKey(e){if(this._cek)throw new TypeError("setContentEncryptionKey can only be called once");return this._cek=e,this}setInitializationVector(e){if(this._iv)throw new TypeError("setInitializationVector can only be called once");return this._iv=e,this}replicateIssuerAsHeader(){return this._replicateIssuerAsHeader=!0,this}replicateSubjectAsHeader(){return this._replicateSubjectAsHeader=!0,this}replicateAudienceAsHeader(){return this._replicateAudienceAsHeader=!0,this}async encrypt(e,t){const i=new mc(Be.encode(JSON.stringify(this._payload)));return this._replicateIssuerAsHeader&&(this._protectedHeader={...this._protectedHeader,iss:this._payload.iss}),this._replicateSubjectAsHeader&&(this._protectedHeader={...this._protectedHeader,sub:this._payload.sub}),this._replicateAudienceAsHeader&&(this._protectedHeader={...this._protectedHeader,aud:this._payload.aud}),i.setProtectedHeader(this._protectedHeader),this._iv&&i.setInitializationVector(this._iv),this._cek&&i.setContentEncryptionKey(this._cek),this._keyManagementParameters&&i.setKeyManagementParameters(this._keyManagementParameters),i.encrypt(e,t)}}const bt=(a,e)=>{if(typeof a!="string"||!a)throw new Kl(`${e} missing or invalid`)};async function vc(a,e){if(!Ye(a))throw new TypeError("JWK must be an object");if(e??(e="sha256"),e!=="sha256"&&e!=="sha384"&&e!=="sha512")throw new TypeError('digestAlgorithm must one of "sha256", "sha384", or "sha512"');let t;switch(a.kty){case"EC":bt(a.crv,'"crv" (Curve) Parameter'),bt(a.x,'"x" (X Coordinate) Parameter'),bt(a.y,'"y" (Y Coordinate) Parameter'),t={crv:a.crv,kty:a.kty,x:a.x,y:a.y};break;case"OKP":bt(a.crv,'"crv" (Subtype of Key Pair) Parameter'),bt(a.x,'"x" (Public Key) Parameter'),t={crv:a.crv,kty:a.kty,x:a.x};break;case"RSA":bt(a.e,'"e" (Exponent) Parameter'),bt(a.n,'"n" (Modulus) Parameter'),t={e:a.e,kty:a.kty,n:a.n};break;case"oct":bt(a.k,'"k" (Key Value) Parameter'),t={k:a.k,kty:a.kty};break;default:throw new X('"kty" (Key Type) Parameter missing or unsupported')}const i=Be.encode(JSON.stringify(t));return Fe(await Il(e,i))}async function w_(a,e){e??(e="sha256");const t=await vc(a,e);return`urn:ietf:params:oauth:jwk-thumbprint:sha-${e.slice(-3)}:${t}`}async function z_(a,e){const t={...a,...e==null?void 0:e.header};if(!Ye(t.jwk))throw new le('"jwk" (JSON Web Key) Header Parameter must be a JSON object');const i=await jn({...t.jwk,ext:!0},t.alg,!0);if(i instanceof Uint8Array||i.type!=="public")throw new le('"jwk" (JSON Web Key) Header Parameter must be a public key');return i}function S_(a){switch(typeof a=="string"&&a.slice(0,2)){case"RS":case"PS":return"RSA";case"ES":return"EC";case"Ed":return"OKP";default:throw new X('Unsupported "alg" value for a JSON Web Key Set')}}function kc(a){return a&&typeof a=="object"&&Array.isArray(a.keys)&&a.keys.every(j_)}function j_(a){return Ye(a)}function A_(a){return typeof structuredClone=="function"?structuredClone(a):JSON.parse(JSON.stringify(a))}class yc{constructor(e){if(this._cached=new WeakMap,!kc(e))throw new _n("JSON Web Key Set malformed");this._jwks=A_(e)}async getKey(e,t){const{alg:i,kid:n}={...e,...t==null?void 0:t.header},r=S_(i),s=this._jwks.keys.filter(p=>{let u=r===p.kty;if(u&&typeof n=="string"&&(u=n===p.kid),u&&typeof p.alg=="string"&&(u=i===p.alg),u&&typeof p.use=="string"&&(u=p.use==="sig"),u&&Array.isArray(p.key_ops)&&(u=p.key_ops.includes("verify")),u&&i==="EdDSA"&&(u=p.crv==="Ed25519"||p.crv==="Ed448"),u)switch(i){case"ES256":u=p.crv==="P-256";break;case"ES256K":u=p.crv==="secp256k1";break;case"ES384":u=p.crv==="P-384";break;case"ES512":u=p.crv==="P-521";break}return u}),{0:o,length:d}=s;if(d===0)throw new rs;if(d!==1){const p=new Dl,{_cached:u}=this;throw p[Symbol.asyncIterator]=async function*(){for(const v of s)try{yield await eo(u,v,i)}catch{continue}},p}return eo(this._cached,o,i)}}async function eo(a,e,t){const i=a.get(e)||a.set(e,{}).get(e);if(i[t]===void 0){const n=await jn({...e,ext:!0},t);if(n instanceof Uint8Array||n.type!=="public")throw new _n("JSON Web Key Set members must be public keys");i[t]=n}return i[t]}function x_(a){const e=new yc(a);return async function(t,i){return e.getKey(t,i)}}const B_=async(a,e,t)=>{let i,n,r=!1;typeof AbortController=="function"&&(i=new AbortController,n=setTimeout(()=>{r=!0,i.abort()},e));const s=await fetch(a.href,{signal:i?i.signal:void 0,redirect:"manual",headers:t.headers}).catch(o=>{throw r?new Ul:o});if(n!==void 0&&clearTimeout(n),s.status!==200)throw new Qe("Expected 200 OK from the JSON Web Key Set HTTP response");try{return await s.json()}catch{throw new Qe("Failed to parse the JSON Web Key Set HTTP response as JSON")}};function E_(){return typeof WebSocketPair<"u"||typeof navigator<"u"&&navigator.userAgent==="Cloudflare-Workers"||typeof EdgeRuntime<"u"&&EdgeRuntime==="vercel"}class M_ extends yc{constructor(e,t){if(super({keys:[]}),this._jwks=void 0,!(e instanceof URL))throw new TypeError("url must be an instance of URL");this._url=new URL(e.href),this._options={agent:t==null?void 0:t.agent,headers:t==null?void 0:t.headers},this._timeoutDuration=typeof(t==null?void 0:t.timeoutDuration)=="number"?t==null?void 0:t.timeoutDuration:5e3,this._cooldownDuration=typeof(t==null?void 0:t.cooldownDuration)=="number"?t==null?void 0:t.cooldownDuration:3e4,this._cacheMaxAge=typeof(t==null?void 0:t.cacheMaxAge)=="number"?t==null?void 0:t.cacheMaxAge:6e5}coolingDown(){return typeof this._jwksTimestamp=="number"?Date.now()<this._jwksTimestamp+this._cooldownDuration:!1}fresh(){return typeof this._jwksTimestamp=="number"?Date.now()<this._jwksTimestamp+this._cacheMaxAge:!1}async getKey(e,t){(!this._jwks||!this.fresh())&&await this.reload();try{return await super.getKey(e,t)}catch(i){if(i instanceof rs&&this.coolingDown()===!1)return await this.reload(),super.getKey(e,t);throw i}}async reload(){this._pendingFetch&&E_()&&(this._pendingFetch=void 0),this._pendingFetch||(this._pendingFetch=B_(this._url,this._timeoutDuration,this._options).then(e=>{if(!kc(e))throw new _n("JSON Web Key Set malformed");this._jwks={keys:e.keys},this._jwksTimestamp=Date.now(),this._pendingFetch=void 0}).catch(e=>{throw this._pendingFetch=void 0,e})),await this._pendingFetch}}function L_(a,e){const t=new M_(a,e);return async function(i,n){return t.getKey(i,n)}}class R_ extends hs{encode(){const e=Fe(JSON.stringify({alg:"none"})),t=Fe(JSON.stringify(this._payload));return`${e}.${t}.`}static decode(e,t){if(typeof e!="string")throw new fa("Unsecured JWT must be a string");const{0:i,1:n,2:r,length:s}=e.split(".");if(s!==3||r!=="")throw new fa("Invalid Unsecured JWT");let o;try{if(o=JSON.parse(Ea.decode($e(i))),o.alg!=="none")throw new Error}catch{throw new fa("Invalid Unsecured JWT")}return{payload:ds(o,$e(n),t),header:o}}}const H_=Fe,ps=$e,C_=Object.freeze(Object.defineProperty({__proto__:null,decode:ps,encode:H_},Symbol.toStringTag,{value:"Module"}));function O_(a){let e;if(typeof a=="string"){const t=a.split(".");(t.length===3||t.length===5)&&([e]=t)}else if(typeof a=="object"&&a)if("protected"in a)e=a.protected;else throw new TypeError("Token does not contain a Protected Header");try{if(typeof e!="string"||!e)throw new Error;const t=JSON.parse(Ea.decode(ps(e)));if(!Ye(t))throw new Error;return t}catch{throw new TypeError("Invalid Token or Protected Header formatting")}}function N_(a){if(typeof a!="string")throw new fa("JWTs must use Compact JWS serialization, JWT must be a string");const{1:e,length:t}=a.split(".");if(t===5)throw new fa("Only JWTs using Compact JWS serialization can be decoded");if(t!==3)throw new fa("Invalid JWT");if(!e)throw new fa("JWTs must contain a payload");let i;try{i=ps(e)}catch{throw new fa("Failed to base64url decode the payload")}let n;try{n=JSON.parse(Ea.decode(i))}catch{throw new fa("Failed to parse the decoded payload as JSON")}if(!Ye(n))throw new fa("Invalid JWT Claims Set");return n}async function I_(a,e){var t;let i,n,r;switch(a){case"HS256":case"HS384":case"HS512":i=parseInt(a.slice(-3),10),n={name:"HMAC",hash:`SHA-${i}`,length:i},r=["sign","verify"];break;case"A128CBC-HS256":case"A192CBC-HS384":case"A256CBC-HS512":return i=parseInt(a.slice(-3),10),wn(new Uint8Array(i>>3));case"A128KW":case"A192KW":case"A256KW":i=parseInt(a.slice(1,4),10),n={name:"AES-KW",length:i},r=["wrapKey","unwrapKey"];break;case"A128GCMKW":case"A192GCMKW":case"A256GCMKW":case"A128GCM":case"A192GCM":case"A256GCM":i=parseInt(a.slice(1,4),10),n={name:"AES-GCM",length:i},r=["encrypt","decrypt"];break;default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return V.subtle.generateKey(n,(t=e==null?void 0:e.extractable)!==null&&t!==void 0?t:!1,r)}function cr(a){var e;const t=(e=a==null?void 0:a.modulusLength)!==null&&e!==void 0?e:2048;if(typeof t!="number"||t<2048)throw new X("Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used");return t}async function P_(a,e){var t,i,n;let r,s;switch(a){case"PS256":case"PS384":case"PS512":r={name:"RSA-PSS",hash:`SHA-${a.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:cr(e)},s=["sign","verify"];break;case"RS256":case"RS384":case"RS512":r={name:"RSASSA-PKCS1-v1_5",hash:`SHA-${a.slice(-3)}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:cr(e)},s=["sign","verify"];break;case"RSA-OAEP":case"RSA-OAEP-256":case"RSA-OAEP-384":case"RSA-OAEP-512":r={name:"RSA-OAEP",hash:`SHA-${parseInt(a.slice(-3),10)||1}`,publicExponent:new Uint8Array([1,0,1]),modulusLength:cr(e)},s=["decrypt","unwrapKey","encrypt","wrapKey"];break;case"ES256":r={name:"ECDSA",namedCurve:"P-256"},s=["sign","verify"];break;case"ES384":r={name:"ECDSA",namedCurve:"P-384"},s=["sign","verify"];break;case"ES512":r={name:"ECDSA",namedCurve:"P-521"},s=["sign","verify"];break;case"EdDSA":s=["sign","verify"];const o=(t=e==null?void 0:e.crv)!==null&&t!==void 0?t:"Ed25519";switch(o){case"Ed25519":case"Ed448":r={name:o};break;default:throw new X("Invalid or unsupported crv option provided")}break;case"ECDH-ES":case"ECDH-ES+A128KW":case"ECDH-ES+A192KW":case"ECDH-ES+A256KW":{s=["deriveKey","deriveBits"];const d=(i=e==null?void 0:e.crv)!==null&&i!==void 0?i:"P-256";switch(d){case"P-256":case"P-384":case"P-521":{r={name:"ECDH",namedCurve:d};break}case"X25519":case"X448":r={name:d};break;default:throw new X("Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448")}break}default:throw new X('Invalid or unsupported JWK "alg" (Algorithm) Parameter value')}return V.subtle.generateKey(r,(n=e==null?void 0:e.extractable)!==null&&n!==void 0?n:!1,s)}async function T_(a,e){return P_(a,e)}async function K_(a,e){return I_(a,e)}const D_="WebCryptoAPI",U_=Object.freeze(Object.defineProperty({__proto__:null,CompactEncrypt:mc,CompactSign:bc,EmbeddedJWK:z_,EncryptJWT:__,FlattenedEncrypt:Vi,FlattenedSign:fs,GeneralEncrypt:l_,GeneralSign:k_,SignJWT:y_,UnsecuredJWT:R_,base64url:C_,calculateJwkThumbprint:vc,calculateJwkThumbprintUri:w_,compactDecrypt:oc,compactVerify:hc,createLocalJWKSet:x_,createRemoteJWKSet:L_,cryptoRuntime:D_,decodeJwt:N_,decodeProtectedHeader:O_,errors:wy,exportJWK:lc,exportPKCS8:s_,exportSPKI:r_,flattenedDecrypt:ls,flattenedVerify:cs,generalDecrypt:t_,generalVerify:u_,generateKeyPair:T_,generateSecret:K_,importJWK:jn,importPKCS8:$y,importSPKI:Wy,importX509:Gy,jwtDecrypt:m_,jwtVerify:g_},Symbol.toStringTag,{value:"Module"})),J_=M0(U_);var Ot=Vt&&Vt.__awaiter||function(a,e,t,i){function n(r){return r instanceof t?r:new t(function(s){s(r)})}return new(t||(t=Promise))(function(r,s){function o(u){try{p(i.next(u))}catch(v){s(v)}}function d(u){try{p(i.throw(u))}catch(v){s(v)}}function p(u){u.done?r(u.value):n(u.value).then(o,d)}p((i=i.apply(a,e||[])).next())})},_c=Vt&&Vt.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(en,"__esModule",{value:!0});en.MangroveReviews=void 0;const q_=_c(e1),bi=_c(vy),F_=J_;class ta{static signReview(e,t){return Ot(this,void 0,void 0,function*(){t=ta.cleanPayload(t);const i="ES256",n=yield ta.publicToPem(e.publicKey),r=JSON.stringify(yield crypto.subtle.exportKey("jwk",e.publicKey));return yield new F_.SignJWT(t).setProtectedHeader({alg:i,kid:n,jwk:r,enc:"utf-8"}).sign(e.privateKey)})}static submitReview(e,t=ta.ORIGINAL_API){return bi.default.put(`${t}/submit/${e}`)}static signAndSubmitReview(e,t,i=ta.ORIGINAL_API){return Ot(this,void 0,void 0,function*(){const n=yield ta.signReview(e,t);return ta.submitReview(n,i)})}static getReviews(e,t=ta.ORIGINAL_API){return Ot(this,void 0,void 0,function*(){const{data:i}=yield bi.default.get(`${t}/reviews`,{params:e,headers:{"Content-Type":"application/json"}});return i})}static getSubject(e,t=ta.ORIGINAL_API){return bi.default.get(`${t}/subject/${encodeURIComponent(e)}`).then(({data:i})=>i)}static getIssuer(e,t=ta.ORIGINAL_API){return bi.default.get(`${t}/issuer/${encodeURIComponent(e)}`).then(({data:i})=>i)}static batchAggregate(e,t=ta.ORIGINAL_API){return!e.pems&&!e.subs?null:bi.default.post(`${t}/batch`,e).then(({data:i})=>i)}static generateKeypair(){return crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"])}static jwkToKeypair(e){return Ot(this,void 0,void 0,function*(){let t=Object.assign({},e);if(!t||t.metadata!==ta.PRIVATE_KEY_METADATA)throw new Error(`does not contain the required metadata field "${ta.PRIVATE_KEY_METADATA}"`);const i=yield crypto.subtle.importKey("jwk",t,{name:"ECDSA",namedCurve:"P-256"},!0,["sign"]);delete t.d,delete t.dp,delete t.dq,delete t.q,delete t.qi,t.key_ops=["verify"];const n=yield crypto.subtle.importKey("jwk",t,{name:"ECDSA",namedCurve:"P-256"},!0,["verify"]);return{privateKey:i,publicKey:n}})}static keypairToJwk(e){return Ot(this,void 0,void 0,function*(){const t=yield crypto.subtle.exportKey("jwk",e.privateKey);return t.metadata=ta.PRIVATE_KEY_METADATA,t})}static u8aToString(e){return new TextDecoder().decode(e)}static privateToPem(e){return Ot(this,void 0,void 0,function*(){try{const t=yield crypto.subtle.exportKey("pkcs8",e);return`-----BEGIN PRIVATE KEY-----
${btoa(String.fromCharCode(...new Uint8Array(t)))}
-----END PRIVATE KEY-----`}catch{const i=yield crypto.subtle.exportKey("jwk",e);return(0,q_.default)(i,{private:!0})}})}static publicToPem(e){return Ot(this,void 0,void 0,function*(){const t=yield crypto.subtle.exportKey("spki",e);return`-----BEGIN PUBLIC KEY-----${btoa(String.fromCharCode(...new Uint8Array(t)))}-----END PUBLIC KEY-----`})}static cleanPayload(e){if(!e.sub)throw"Payload must include subject URI in `sub` field.";if(!e.rating&&!e.opinion)throw"Payload must include either rating or opinion.";if(e.rating!==void 0&&(e.rating<0||e.rating>100))throw"Rating must be in the range from 0 to 100.";e.iat=Math.floor(Date.now()/1e3),e.rating===null&&delete e.rating,e.opinion||delete e.opinion,(!e.images||!e.images.length)&&delete e.images;const t=Object.assign({client_id:window.location.href},e.metadata);for(const i in t){const n=t[i];(n===null||n===!1)&&delete t[i]}return e.metadata=t,e}}en.MangroveReviews=ta;ta.ORIGINAL_API="https://api.mangrove.reviews";ta.PRIVATE_KEY_METADATA="Mangrove private key";(function(a){Object.defineProperty(a,"__esModule",{value:!0}),a.MangroveReviews=void 0;const e=en;Object.defineProperty(a,"MangroveReviews",{enumerable:!0,get:function(){return e.MangroveReviews}})})(wa);class W_{constructor(e,t){$(this,"keypair",new yt(void 0));$(this,"mangroveIdentity");$(this,"key_id",new yt(void 0));$(this,"_mangroveIdentityCreationDate");$(this,"geoReviewsById");$(this,"allReviewsById");this.mangroveIdentity=e,this._mangroveIdentityCreationDate=t,e.addCallbackAndRunD(async i=>{await this.setKeypair(i)})}async setKeypair(e){console.debug("Setting keypair from",e);const t=await wa.MangroveReviews.jwkToKeypair(JSON.parse(e));this.keypair.setData(t);const i=await wa.MangroveReviews.publicToPem(t.publicKey);this.key_id.setData(i)}async CreateIdentity(){const e=await wa.MangroveReviews.generateKeypair(),t=await wa.MangroveReviews.keypairToJwk(e);if((this.mangroveIdentity.data??"")!=="")return;this.keypair.setData(e);const i=await wa.MangroveReviews.publicToPem(e.publicKey);this.key_id.setData(i),this.mangroveIdentity.setData(JSON.stringify(t)),this._mangroveIdentityCreationDate.setData(new Date().toISOString())}async getKeypair(){if(this.keypair.data===void 0)try{!Ca.runningFromConsole&&(this.mangroveIdentity.data??"")===""&&await this.CreateIdentity()}catch(e){console.error("Could not create identity: ",e)}return this.keypair.data}getKeyId(){return this.key_id}getGeoReviews(){return this.geoReviewsById||(this.geoReviewsById=this.getAllReviews().mapD(e=>e.filter(t=>{try{return new URL(t.sub).protocol==="geo:"}catch{return!1}}))),this.geoReviewsById}getAllReviews(){return this.allReviewsById!==void 0?this.allReviewsById:(this.allReviewsById=new yt(void 0),this.key_id.map(async e=>{if(e===void 0)return[];const t=await wa.MangroveReviews.getReviews({kid:e});this.allReviewsById.setData(t.reviews.map(i=>({...i,...i.payload})))}),this.allReviewsById)}addReview(e){var t,i,n;(n=this.allReviewsById)==null||n.setData((i=(t=this.allReviewsById)==null?void 0:t.data)==null?void 0:i.concat([e]))}}const nt=class nt{constructor(e,t,i,n,r){$(this,"subjectUri");$(this,"average");$(this,"_reviews",new yt([]));$(this,"reviews",this._reviews);$(this,"_lat");$(this,"_lon");$(this,"_uncertainty");$(this,"_name");$(this,"_identity");$(this,"_testmode");const s=Wn.centerpointCoordinates(e);[this._lon,this._lat]=s,this._identity=i,this._testmode=r??new Wt(!1);const o=(n==null?void 0:n.nameKey)??"name";if(n.uncertaintyRadius)this._uncertainty=n.uncertaintyRadius;else if(e.geometry.type==="Point")this._uncertainty=(n==null?void 0:n.uncertaintyRadius)??10;else{let d;if(e.geometry.type==="LineString")d=[e.geometry.coordinates];else if(e.geometry.type==="MultiLineString"||e.geometry.type==="Polygon")d=e.geometry.coordinates;else if(e.geometry.type==="MultiPolygon")d=e.geometry.coordinates[0];else throw"Invalid feature type: "+e.geometry.type;let p=0;for(const u of d)for(const v of u)p=Math.max(p,Wn.distanceBetween(s,v));this._uncertainty=p}this._name=t.map(d=>d[o]??(n==null?void 0:n.fallbackName)),this.subjectUri=this.ConstructSubjectUri(),this.subjectUri.mapD(async d=>{const p=await wa.MangroveReviews.getReviews({sub:d});console.debug("Got reviews for",e,p,d),this.addReviews(p.reviews,this._name.data)},[this._name]),this.ConstructSubjectUri(!0).mapD(async d=>{try{const p=await wa.MangroveReviews.getReviews({sub:d});console.debug("Got reviews (no-encode) for",e,p,d),this.addReviews(p.reviews,this._name.data)}catch{console.log("Could not fetch reviews for partially incorrect query ",d)}},[this._name]),this.average=this._reviews.map(d=>{if(!d||d.length===0)return null;let p=0,u=0;for(const v of d)v.rating!==void 0&&(u++,p+=v.rating);return Math.round(p/u)})}static construct(e,t,i,n,r){const s=e.properties.id,o=nt._featureReviewsCache[s];if(o!==void 0)return o;const d=new nt(e,t,i,n,r);return nt._featureReviewsCache[s]=d,d}async createReview(e){if(e.opinion!==void 0&&e.opinion.length>nt.REVIEW_OPINION_MAX_LENGTH)throw"Opinion too long, should be at most "+nt.REVIEW_OPINION_MAX_LENGTH+" characters long";const t={sub:this.subjectUri.data,...e},i=await this._identity.getKeypair(),n=await wa.MangroveReviews.signReview(i,t),r=await wa.MangroveReviews.publicToPem(i.publicKey);this._testmode.data?(console.log("Testmode enabled - not uploading review"),await Ca.waitFor(1e3)):await wa.MangroveReviews.submitReview(n);const s={...t,kid:r,signature:n,madeByLoggedInUser:new Wt(!0)};this._reviews.data.push(s),this._reviews.ping(),this._identity.addReview(s)}addReviews(e,t){const i=new Set(this._reviews.data.map(r=>r.rating+" "+r.opinion));let n=!1;for(const r of e){const s=r.payload;try{const d=new URL(s.sub);if(d.protocol!=="geo:")continue;const p=d.pathname.split(",").map(E=>Number(E));if(Wn.distanceBetween([this._lat,this._lon],p)>this._uncertainty)continue;const v=d.searchParams.get("q");if(Ca.levenshteinDistance(v.toLowerCase(),t.toLowerCase())/t.length>.25)continue}catch(d){console.warn(d);continue}const o=s.rating+" "+s.opinion;i.has(o)||(this._reviews.data.push({...s,kid:r.kid,signature:r.signature,madeByLoggedInUser:this._identity.getKeyId().map(d=>r.kid===d)}),n=!0)}n&&(this._reviews.data.sort((r,s)=>s.iat-r.iat),this._reviews.ping())}ConstructSubjectUri(e=!1){return this._name.map(t=>{let i=`geo:${this._lat},${this._lon}?u=${Math.round(this._uncertainty)}`;if(t)i+="&q="+(e?t:encodeURIComponent(t));else if(this._uncertainty>1e3){console.error("Not fetching reviews. Only got a point and a very big uncertainty range ("+this._uncertainty+"), so you'd probably only get garbage. Specify a name");return}return i})}};$(nt,"REVIEW_OPINION_MAX_LENGTH",1e3),$(nt,"_featureReviewsCache",{});let ao=nt;class gs{constructor(e){$(this,"features");if(e===void 0)throw"Static feature source received undefined as source";let t;e.features?t=e.features:t=e,Array.isArray(t)?this.features=new Wt(t):this.features=t}static fromGeojson(e){return new gs(e)}}const G_=[{commits:387,contributor:"Pieter Vander Vennet"},{commits:352,contributor:"kjon"},{commits:188,contributor:"paunofu"},{commits:95,contributor:"Allan Nordhøy"},{commits:83,contributor:"Robin van der Linde"},{commits:72,contributor:"mcliquid"},{commits:63,contributor:"danieldegroot2"},{commits:49,contributor:"Anonymous"},{commits:44,contributor:"Supaplex"},{commits:36,contributor:"Lucas"},{commits:36,contributor:"Iago"},{commits:33,contributor:"Jiří Podhorecký"},{commits:32,contributor:"Babos Gábor"},{commits:29,contributor:"Artem"},{commits:26,contributor:"Reza Almanda"},{commits:25,contributor:"SC"},{commits:23,contributor:"Marco"},{commits:20,contributor:"gallegonovato"},{commits:18,contributor:"Patchanka64"},{commits:18,contributor:"Max Spicer"},{commits:18,contributor:"Štefan Baebler"},{commits:18,contributor:"el_libre como el chaval"},{commits:15,contributor:"macpac"},{commits:15,contributor:"WaldiS"},{commits:14,contributor:"LeJun"},{commits:14,contributor:"J. Lavoie"},{commits:13,contributor:"Olivier"},{commits:13,contributor:"Romain de Bossoreille"},{commits:13,contributor:"Joost"},{commits:12,contributor:"hugoalh"},{commits:12,contributor:"Ettore Atalan"},{commits:12,contributor:"Piotr Strebski"},{commits:11,contributor:"Manuel Tassi"},{commits:11,contributor:"Jaime Marquínez Ferrándiz"},{commits:11,contributor:"Túllio Franca"},{commits:10,contributor:"brunnerpaul"},{commits:10,contributor:"pdassori"},{commits:10,contributor:"bgo-eiu"},{commits:10,contributor:"Win Olario"},{commits:10,contributor:"Johannes Rössel"},{commits:10,contributor:"Irina"},{commits:9,contributor:"Jeff Huang"},{commits:9,contributor:"Lasse Liehu"},{commits:9,contributor:"快乐的老鼠宝宝"},{commits:9,contributor:"deep map"},{commits:9,contributor:"Fjuro"},{commits:9,contributor:"Niels Madsen"},{commits:9,contributor:"Jacque Fresco"},{commits:8,contributor:"Krzysztof Chorzempa"},{commits:8,contributor:"Vinicius"},{commits:7,contributor:"Franco"},{commits:7,contributor:"NetworkedPoncho"},{commits:7,contributor:"Joost Schouppe"},{commits:7,contributor:"Andrews Leruth"},{commits:7,contributor:"Niels Elgaard Larsen"},{commits:6,contributor:"Juele juele"},{commits:6,contributor:"Leonardo Gómez Berniga"},{commits:6,contributor:"Felipe Nogueira"},{commits:6,contributor:"David Haberthür"},{commits:6,contributor:"eMerzh"},{commits:6,contributor:"ⵣⵓⵀⵉⵔ ⴰⵎⴰⵣⵉⵖ زهير أمازيغ"},{commits:6,contributor:"seppesantens"},{commits:6,contributor:"Nikolay Korotkiy"},{commits:6,contributor:"William Weber Berrutti"},{commits:6,contributor:"lvgx"},{commits:5,contributor:"Christian Schmidt"},{commits:5,contributor:"Emory Shaw"},{commits:5,contributor:"nilocram"},{commits:5,contributor:"ⵣⵓⵀⵉⵔ ⴰⵎⴰⵣⵉⵖ ZOUHIR DEHBI"},{commits:5,contributor:"sylvain-m"},{commits:5,contributor:"Fabio Bettani"},{commits:5,contributor:"BMN"},{commits:5,contributor:"Dingcycle"},{commits:5,contributor:"phlostically"},{commits:5,contributor:"Piotr"},{commits:5,contributor:"Alexey Shabanov"},{commits:4,contributor:"André Marcelo Alvarenga"},{commits:4,contributor:"Klára Fleischhansová"},{commits:4,contributor:"Hiroshi Miura"},{commits:4,contributor:"Adolfo Jayme Barrientos"},{commits:4,contributor:"Polgár Sándor"},{commits:4,contributor:"Jan Zabel"},{commits:3,contributor:"Paolo Mauri"},{commits:3,contributor:"Peter Brodersen"},{commits:3,contributor:"ssantos"},{commits:3,contributor:"Stéphane De Greef"},{commits:3,contributor:"Alexey Lutskyi"},{commits:3,contributor:"Bibi56"},{commits:3,contributor:"aleksej0R"},{commits:3,contributor:"liimee"},{commits:3,contributor:"foxandpotatoes"},{commits:3,contributor:"Sasha"},{commits:3,contributor:"Jose Luis Infante"},{commits:3,contributor:"Francois"},{commits:3,contributor:"Eduardo Addad de Oliveira"},{commits:3,contributor:"Wiktor Przybylski"},{commits:3,contributor:"Erik Palm"},{commits:3,contributor:"vankos"},{commits:3,contributor:"JCGF-OSM"},{commits:3,contributor:"SiegbjornSitumeang"},{commits:2,contributor:"Beardhatcode"},{commits:2,contributor:"yhr"},{commits:2,contributor:"Stéphanie Jean-Daubias"},{commits:2,contributor:"CaldeiraG"},{commits:2,contributor:"Henry00572"},{commits:2,contributor:"larusalka"},{commits:2,contributor:"Smith Brown"},{commits:2,contributor:"Michel"},{commits:2,contributor:"Kelson Vibber"},{commits:2,contributor:"מוימוי טרייצקי"},{commits:2,contributor:"lmagreault"},{commits:2,contributor:"galder158@hotmail.com"},{commits:2,contributor:"HO Gin Wang"},{commits:2,contributor:"multiflexi"},{commits:2,contributor:"Tarcila Cataldi"},{commits:2,contributor:"Valerio Bozzolan"},{commits:2,contributor:"Marc Marc"},{commits:2,contributor:"Midgard"},{commits:2,contributor:"M. Rey"},{commits:2,contributor:"Localizer"},{commits:2,contributor:"Eric Armijo"},{commits:2,contributor:"MeblIkea"},{commits:2,contributor:"わたなべけんご"},{commits:2,contributor:"Mateusz Konieczny"},{commits:2,contributor:"Kristoffer Grundström"},{commits:2,contributor:"Sebastian Kürten"},{commits:2,contributor:"Damian Tokarski"},{commits:2,contributor:"mic140"},{commits:2,contributor:"Heiko"},{commits:2,contributor:"Leo Alcaraz"},{commits:1,contributor:"Onnar Rick"},{commits:1,contributor:"Обо всем"},{commits:1,contributor:"David"},{commits:1,contributor:"Roosa Huovinen"},{commits:1,contributor:"Berete Baba"},{commits:1,contributor:"Federica Gaspari"},{commits:1,contributor:"Julio Salas"},{commits:1,contributor:"Michal Čermák"},{commits:1,contributor:"Juan"},{commits:1,contributor:"Traladarer"},{commits:1,contributor:"LuPa"},{commits:1,contributor:"gnu-ewm"},{commits:1,contributor:"Magnitudee"},{commits:1,contributor:"Dario Crespi"},{commits:1,contributor:"Hungarian_user"},{commits:1,contributor:"Falk Rund"},{commits:1,contributor:"sparky-oxford"},{commits:1,contributor:"jcn706"},{commits:1,contributor:"whatismoss"},{commits:1,contributor:"LePirlouit"},{commits:1,contributor:"SoftwareByRedline"},{commits:1,contributor:"plic ploc"},{commits:1,contributor:"Janina Ellinghaus"},{commits:1,contributor:"Andre Fajar N"},{commits:1,contributor:"Ahen Purwakarta"},{commits:1,contributor:"Luna Jernberg"},{commits:1,contributor:"Rodrigo Tavares"},{commits:1,contributor:"Michał Targoński"},{commits:1,contributor:"Sean Young"},{commits:1,contributor:"Damian Pułka"},{commits:1,contributor:"Iváns"},{commits:1,contributor:"riiga"},{commits:1,contributor:"Carlos Ramos Carreño"}],$_={contributors:G_},V_=[{commits:7767,contributor:"Pieter Vander Vennet"},{commits:481,contributor:"Robin van der Linde"},{commits:55,contributor:"Tobias"},{commits:38,contributor:"Win Olario"},{commits:36,contributor:"dependabot[bot]"},{commits:33,contributor:"Hosted Weblate"},{commits:33,contributor:"Christian Neumann"},{commits:31,contributor:"Andrews Leruth"},{commits:31,contributor:"Pieter Fiers"},{commits:30,contributor:"paunofu"},{commits:29,contributor:"riQQ"},{commits:26,contributor:"Joost"},{commits:26,contributor:"karelleketers"},{commits:24,contributor:"Ward"},{commits:21,contributor:"wjtje"},{commits:21,contributor:"AlexanderRebai"},{commits:19,contributor:"Niels Elgaard Larsen"},{commits:19,contributor:"yopaseopor"},{commits:19,contributor:"Sebastian Kürten"},{commits:18,contributor:"Arno Deceuninck"},{commits:17,contributor:"pgm-chardelv1"},{commits:15,contributor:"Brice Maron"},{commits:15,contributor:"ToastHawaii"},{commits:13,contributor:"Nicole"},{commits:12,contributor:"Tobias Jordans"},{commits:12,contributor:"Bavo Vanderghote"},{commits:11,contributor:"Flo Edelmann"},{commits:11,contributor:"Thibault Molleman"},{commits:11,contributor:"RobJN"},{commits:10,contributor:"danieldegroot2"},{commits:10,contributor:"LiamSimons"},{commits:9,contributor:"Codain"},{commits:9,contributor:"Midgard"},{commits:8,contributor:"Binnette"},{commits:8,contributor:"pelderson"},{commits:8,contributor:"Mateusz Konieczny"},{commits:7,contributor:"OliNau"},{commits:6,contributor:"David Haberthür"},{commits:4,contributor:"Daniele Santini"},{commits:4,contributor:"Nadhem"},{commits:4,contributor:"Ward Beyens"},{commits:3,contributor:"Thierry1030"},{commits:3,contributor:"Weblate (bot)"},{commits:3,contributor:"Léo Villeveygoux"},{commits:2,contributor:"Niklas Vogel"},{commits:2,contributor:"eMerzh"},{commits:2,contributor:"bxl-forever"},{commits:2,contributor:"Lu"},{commits:2,contributor:"Paul Brunner"},{commits:2,contributor:"ⵣⵓⵀⵉⵔ ⴰⵎⴰⵣⵉⵖ زهير أمازيغ"},{commits:2,contributor:"Jiří Podhorecký"},{commits:2,contributor:"pdassori"},{commits:2,contributor:"快乐的老鼠宝宝"},{commits:2,contributor:"arrival-spring"},{commits:2,contributor:"Strubbl"},{commits:2,contributor:"RayBB"},{commits:2,contributor:"Charlotte Delvaux"},{commits:2,contributor:"Supaplex"},{commits:2,contributor:"pbarban"},{commits:2,contributor:"graveelius"},{commits:2,contributor:"Stanislas Gueniffey"},{commits:1,contributor:"Bart Louwers"},{commits:1,contributor:"Manuel Tassi"},{commits:1,contributor:"contrapunctus"},{commits:1,contributor:"Roman Zhukov"},{commits:1,contributor:"Ciprian"},{commits:1,contributor:"redfast00"},{commits:1,contributor:"Daniel McDonald"},{commits:1,contributor:"M!dgard"},{commits:1,contributor:"galder158@hotmail.com"},{commits:1,contributor:"Bart Hanssens"},{commits:1,contributor:"brunnerpaul"},{commits:1,contributor:"flaburgan"},{commits:1,contributor:"bgo-eiu"},{commits:1,contributor:"Wouter van der Wal"},{commits:1,contributor:"Reiner Herrmann"},{commits:1,contributor:"Hopperpop"},{commits:1,contributor:"Arya"},{commits:1,contributor:"Robbert Gurdeep Singh"},{commits:1,contributor:"HispanicMojitos"},{commits:1,contributor:"kaipankrath"},{commits:1,contributor:"loviuz"},{commits:1,contributor:"kjonosm"},{commits:1,contributor:"Štefan Baebler"},{commits:1,contributor:"Mark Rogerson"},{commits:1,contributor:"nicole_s"},{commits:1,contributor:"SC"},{commits:1,contributor:"Raphael Das Gupta"},{commits:1,contributor:"Nikolay Korotkiy"},{commits:1,contributor:"Seppe Santens"},{commits:1,contributor:"root"},{commits:1,contributor:"Allan Nordhøy"},{commits:1,contributor:"Sebastian"},{commits:1,contributor:"Hiroshi Miura"},{commits:1,contributor:"riiga"},{commits:1,contributor:"Vinicius"},{commits:1,contributor:"Alexey Shabanov"},{commits:1,contributor:"Polgár Sándor"},{commits:1,contributor:"SiegbjornSitumeang"},{commits:1,contributor:"Marco"},{commits:1,contributor:"mozita"},{commits:1,contributor:"Schouppe Joost"},{commits:1,contributor:"Noémie"},{commits:1,contributor:"Tomas Fiers"},{commits:1,contributor:"tbowdecl97"}],Z_={contributors:V_};function Y_(a){let e,t,i,n,r;const s=a[2].default,o=ut(s,a,a[1],null);let d=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},a[0]],p={};for(let u=0;u<d.length;u+=1)p=Aa(p,d[u]);return{c(){e=zt("svg"),o&&o.c(),t=zt("path"),ge(t,"fill-rule","evenodd"),ge(t,"d","M7.5 3.75A1.5 1.5 0 006 5.25v13.5a1.5 1.5 0 001.5 1.5h6a1.5 1.5 0 001.5-1.5V15a.75.75 0 011.5 0v3.75a3 3 0 01-3 3h-6a3 3 0 01-3-3V5.25a3 3 0 013-3h6a3 3 0 013 3V9A.75.75 0 0115 9V5.25a1.5 1.5 0 00-1.5-1.5h-6zm5.03 4.72a.75.75 0 010 1.06l-1.72 1.72h10.94a.75.75 0 010 1.5H10.81l1.72 1.72a.75.75 0 11-1.06 1.06l-3-3a.75.75 0 010-1.06l3-3a.75.75 0 011.06 0z"),ge(t,"clip-rule","evenodd"),St(e,p)},m(u,v){ue(u,e,v),o&&o.m(e,null),Ve(e,t),i=!0,n||(r=[Ae(e,"click",a[3]),Ae(e,"mouseover",a[4]),Ae(e,"mouseenter",a[5]),Ae(e,"mouseleave",a[6]),Ae(e,"keydown",a[7])],n=!0)},p(u,[v]){o&&o.p&&(!i||v&2)&&dt(o,s,u,u[1],i?ht(s,u[1],v,null):ft(u[1]),null),St(e,p=Yi(d,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},v&1&&u[0]]))},i(u){i||(ee(o,u),i=!0)},o(u){ce(o,u),i=!1},d(u){u&&de(e),o&&o.d(u),n=!1,Xi(r)}}}function X_(a,e,t){const i=[];let n=jt(e,i),{$$slots:r={},$$scope:s}=e;function o(S){We.call(this,a,S)}function d(S){We.call(this,a,S)}function p(S){We.call(this,a,S)}function u(S){We.call(this,a,S)}function v(S){We.call(this,a,S)}return a.$$set=S=>{e=Aa(Aa({},e),Qi(S)),t(0,n=jt(e,i)),"$$scope"in S&&t(1,s=S.$$scope)},[n,s,r,o,d,p,u,v]}class Q_ extends Bt{constructor(e){super(),Et(this,e,X_,Y_,Mt,{})}}function e2(a){let e,t,i,n,r;const s=a[2].default,o=ut(s,a,a[1],null);let d=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},a[0]],p={};for(let u=0;u<d.length;u+=1)p=Aa(p,d[u]);return{c(){e=zt("svg"),o&&o.c(),t=zt("path"),ge(t,"fill-rule","evenodd"),ge(t,"d","M9 2.25a.75.75 0 01.75.75v1.506a49.38 49.38 0 015.343.371.75.75 0 11-.186 1.489c-.66-.083-1.323-.151-1.99-.206a18.67 18.67 0 01-2.969 6.323c.317.384.65.753.998 1.107a.75.75 0 11-1.07 1.052A18.902 18.902 0 019 13.687a18.823 18.823 0 01-5.656 4.482.75.75 0 11-.688-1.333 17.323 17.323 0 005.396-4.353A18.72 18.72 0 015.89 8.598a.75.75 0 011.388-.568A17.21 17.21 0 009 11.224a17.17 17.17 0 002.391-5.165 48.038 48.038 0 00-8.298.307.75.75 0 01-.186-1.489 49.159 49.159 0 015.343-.371V3A.75.75 0 019 2.25zM15.75 9a.75.75 0 01.68.433l5.25 11.25a.75.75 0 01-1.36.634l-1.198-2.567h-6.744l-1.198 2.567a.75.75 0 01-1.36-.634l5.25-11.25A.75.75 0 0115.75 9zm-2.672 8.25h5.344l-2.672-5.726-2.672 5.726z"),ge(t,"clip-rule","evenodd"),St(e,p)},m(u,v){ue(u,e,v),o&&o.m(e,null),Ve(e,t),i=!0,n||(r=[Ae(e,"click",a[3]),Ae(e,"mouseover",a[4]),Ae(e,"mouseenter",a[5]),Ae(e,"mouseleave",a[6]),Ae(e,"keydown",a[7])],n=!0)},p(u,[v]){o&&o.p&&(!i||v&2)&&dt(o,s,u,u[1],i?ht(s,u[1],v,null):ft(u[1]),null),St(e,p=Yi(d,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 24 24"},{fill:"currentColor"},{"aria-hidden":"true"},v&1&&u[0]]))},i(u){i||(ee(o,u),i=!0)},o(u){ce(o,u),i=!1},d(u){u&&de(e),o&&o.d(u),n=!1,Xi(r)}}}function a2(a,e,t){const i=[];let n=jt(e,i),{$$slots:r={},$$scope:s}=e;function o(S){We.call(this,a,S)}function d(S){We.call(this,a,S)}function p(S){We.call(this,a,S)}function u(S){We.call(this,a,S)}function v(S){We.call(this,a,S)}return a.$$set=S=>{e=Aa(Aa({},e),Qi(S)),t(0,n=jt(e,i)),"$$scope"in S&&t(1,s=S.$$scope)},[n,s,r,o,d,p,u,v]}class t2 extends Bt{constructor(e){super(),Et(this,e,a2,e2,Mt,{})}}function i2(a){let e,t,i,n,r;const s=a[2].default,o=ut(s,a,a[1],null);let d=[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},a[0]],p={};for(let u=0;u<d.length;u+=1)p=Aa(p,d[u]);return{c(){e=zt("svg"),o&&o.c(),t=zt("path"),ge(t,"fill-rule","evenodd"),ge(t,"d","M15.312 11.424a5.5 5.5 0 01-9.201 2.466l-.312-.311h2.433a.75.75 0 000-1.5H3.989a.75.75 0 00-.75.75v4.242a.75.75 0 001.5 0v-2.43l.31.31a7 7 0 0011.712-3.138.75.75 0 00-1.449-.39zm1.23-3.723a.75.75 0 00.219-.53V2.929a.75.75 0 00-1.5 0V5.36l-.31-.31A7 7 0 003.239 8.188a.75.75 0 101.448.389A5.5 5.5 0 0113.89 6.11l.311.31h-2.432a.75.75 0 000 1.5h4.243a.75.75 0 00.53-.219z"),ge(t,"clip-rule","evenodd"),St(e,p)},m(u,v){ue(u,e,v),o&&o.m(e,null),Ve(e,t),i=!0,n||(r=[Ae(e,"click",a[3]),Ae(e,"mouseover",a[4]),Ae(e,"mouseenter",a[5]),Ae(e,"mouseleave",a[6]),Ae(e,"keydown",a[7])],n=!0)},p(u,[v]){o&&o.p&&(!i||v&2)&&dt(o,s,u,u[1],i?ht(s,u[1],v,null):ft(u[1]),null),St(e,p=Yi(d,[{xmlns:"http://www.w3.org/2000/svg"},{viewBox:"0 0 20 20"},{fill:"currentColor"},{"aria-hidden":"true"},v&1&&u[0]]))},i(u){i||(ee(o,u),i=!0)},o(u){ce(o,u),i=!1},d(u){u&&de(e),o&&o.d(u),n=!1,Xi(r)}}}function n2(a,e,t){const i=[];let n=jt(e,i),{$$slots:r={},$$scope:s}=e;function o(S){We.call(this,a,S)}function d(S){We.call(this,a,S)}function p(S){We.call(this,a,S)}function u(S){We.call(this,a,S)}function v(S){We.call(this,a,S)}return a.$$set=S=>{e=Aa(Aa({},e),Qi(S)),t(0,n=jt(e,i)),"$$scope"in S&&t(1,s=S.$$scope)},[n,s,r,o,d,p,u,v]}class r2 extends Bt{constructor(e){super(),Et(this,e,n2,i2,Mt,{})}}const s2="usersettings",o2={en:"A special layer which is not meant to be shown on a map, but which is used to set user settings",de:"Eine spezielle Ebene, die nicht für die Darstellung auf einer Karte gedacht ist, sondern für die Festlegung von Benutzereinstellungen verwendet wird",nl:"Een speciale lag die niet getoond wordt op de kaart, maar die de instellingen van de gebruiker weergeeft",pt:"Uma camada especial que não deve ser mostrada em um mapa, mas que é usada para definir as configurações do usuário",ca:"Una capa especial que no està pensada per mostrar-se en un mapa, però que s'utilitza per configurar la configuració de l'usuari",cs:"Speciální vrstva, která není určena k zobrazení na mapě, ale slouží k nastavení uživatelských nastavení"},l2="special",c2=["_mastodon_candidate_md=feat.properties._description.match(/\\[[^\\]]*\\]\\((.*(mastodon|en.osm.town).*)\\).*/)?.at(1)","_d=feat.properties._description?.replace(/&lt;/g,'<')?.replace(/&gt;/g,'>') ?? ''",`_mastodon_candidate_a=(feat => {const e = document.createElement('div');e.innerHTML = feat.properties._d;return Array.from(e.getElementsByTagName("a")).filter(a => a.href.match(/mastodon|en.osm.town/) !== null)[0]?.href   }) (feat) `,`_mastodon_link=(feat => {const e = document.createElement('div');e.innerHTML = feat.properties._d;return Array.from(e.getElementsByTagName("a")).filter(a => a.getAttribute("rel")?.indexOf('me') >= 0)[0]?.href})(feat) `,"_mastodon_candidate=feat.properties._mastodon_candidate_md ?? feat.properties._mastodon_candidate_a","__current_background:='initial_value'"],u2={render:{en:"Settings",nl:"Instellingen",de:"Einstellungen",fr:"Paramètres",da:"Indstillinger",ca:"Configuració",cs:"Nastavení",fi:"Asetukset",zh_Hant:"設定"}},d2=null,f2=null,h2=[{id:"profile",render:{"*":"{user_profile()}"}},{id:"language_picker",render:{"*":"{language_picker()}"},mappings:[{if:"__url_parameter_initialized:language=yes",icon:"./assets/layers/usersettings/translate_disabled.svg",then:{en:"The language was set via an URL-parameter and cannot be set by the user.",de:"Die Sprache wurde über einen URL-Parameter gesetzt und kann nicht vom Benutzer eingestellt werden.",ca:"L'idioma es va establir mitjançant un paràmetre d'URL i l'usuari no pot definir-lo.",cs:"Jazyk byl nastaven pomocí parametru URL a uživatel jej nemůže nastavit.²",nl:"De taal werd ingesteld via een URL-parameter en kan niet manueel ingesteld worden.",da:"Sproget er angivet vha. en URL-parameter og kan ikke angives af brugeren."}}]},{id:"inbox",mappings:[{if:"_unreadMessages=0",then:{ca:"{link(Obre la teva safata d'entrada,&LBRACE_backend&RBRACE/messages/inbox,,,)}",cs:"{link(Otevřít schránku,&LBRACE_backend&RBRACE/messages/inbox,,,)}",da:"{link(Åbn din indbakke,&LBRACE_backend&RBRACE/messages/inbox,,,)}",de:"{link(Deinen Posteingang öffnen,&LBRACE_backend&RBRACE/messages/inbox,,,)}",en:"{link(Open your inbox,&LBRACE_backend&RBRACE/messages/inbox,,,)}",nl:"{link(Ga naar je inbox,&LBRACE_backend&RBRACE/messages/inbox,,,)}"}},{if:"_unreadMessages>0",then:{ca:"{link(<b class='alert'>Tens &LBRACE_unreadMessages&RBRACE missatges </b><br/>Obri la safata d'entrada,&LBRACE_backend&RBRACE/messages/inbox,,,)}",cs:"{link(<b class='alert'>Máte &LBRACE_unreadMessages&RBRACE</b><br/>Otevřít schránku,&LBRACE_backend&RBRACE/messages/inbox,,,)}",da:"{link(<b class='alert'>Du har &LBRACE_unreadMessages&RBRACE beskeder</b><br/>Åbn din indbakke,&LBRACE_backend&RBRACE/messages/inbox,,,)}",de:"{link(<b class='alert'>Sie haben &LBRACE_unreadMessages&RBRACE Nachrichten</b><br/>Posteingang öffnen,&LBRACE_backend&RBRACE/messages/inbox,,,)}",en:"{link(<b class='alert'>You have &LBRACE_unreadMessages&RBRACE messages</b><br/>Open your inbox,&LBRACE_backend&RBRACE/messages/inbox,,,)}",nl:"{link(<b class='alert'>Je hebt &LBRACE_unreadMessages&RBRACE ongelezen berichten</b><br/>Ga naar je inbox,&LBRACE_backend&RBRACE/messages/inbox,,,)}"}}]},{id:"settings-link",render:{ca:"{link(Obriu la vostra configuració a OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}",cs:"{link(Otevřít vaše nastavení na OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}",da:"{link(Åbn dine indstillinger på OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}",de:"{link(Öffne Deine Einstellungen auf OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}",en:"{link(Open your settings on OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}",nl:"{link(Open je instellingen op OpenStreetMap.org,&LBRACE_backend&RBRACE/account/edit,,,)}"}},{id:"logout",render:{"*":"{logout()}"}},{id:"a11y-features",question:{en:"What accessibility features should be applied?",nl:"Wanneer moet de toegankelijkheidsmode ingeschakeld worden?",de:"Welche Barrierefrei-Funktionen sollen angewendet werden?",da:"Hvilke tilgængelighedsfunktioner skal anvendes?"},mappings:[{if:"mapcomplete-a11y=default",alsoShowIf:"mapcomplete-a11y=",then:{en:"Enable accessibility features when arrow keys are used to navigate the map",ca:"Activar les funcions d'accessibilitat quan s'utilitzen les tecles de fletxa per navegar pel mapa",nl:"Schakel toegankelijkheidsmode aan wanneer op de pijltjestoetsen wordt geduwd om de kaart te bewegen",de:"Barrierefrei-Modus aktivieren, wenn Pfeiltasten zum Navigieren in der Karte verwendet werden",da:"Aktiver tilgængelighedsfunktioner, når piletaster anvendes til at navigere i kortet"}},{if:"mapcomplete-a11y=always",then:{en:"Always enable accessibility features",ca:"Sempre habilita les característiques d'accessibilitat",nl:"Schakel de toegankelijkheidsmode altijd aan",de:"Barrierefrei-Modus immer aktivieren",da:"Aktiver altid tilgængelighedsfunktioner"}},{if:"mapcomplete-a11y=never",then:{en:"Never enable accessibility features",nl:"Gebruik geen toegankelijkheidsmode",de:"Barrierefrei-Modus niemals aktivieren",da:"Aktiver aldrig tilgængelighedsfunktioner"}}]},{id:"background-layer-readonly",condition:{and:["_theme:backgroundLayer~*","mapcomplete-preferred-background-layer~*","_theme:backgroundLayer!:={mapcomplete-preferred-background-layer}"]},render:{en:"This thematic map has a predefined background layer set. Your default theme setting does not apply",ca:"Aquest mapa temàtic té un conjunt de capes de fons predefinides. La configuració predeterminada del tema no s'aplica",de:"Diese thematische Karte hat einen vordefinierten Hintergrund. Ihr Standardhintergrund wird nicht angewendet",cs:"Tato tematická mapa má předdefinovanou sadu podkladových vrstev. Vaše výchozí nastavení tématu se nepoužije",nl:"Deze kaart heeft een achtegrondlaag instgesteld. Je instellingen worden niet gebruikt",da:"Dette temakort har angivet et foruddefineret baggrundslag. Dine standardindstillinger benyttes ikke"}},{id:"background-layer",question:{en:"What background layer should be shown by default?",ca:"Quina capa de fons s'ha de mostrar per defecte?",de:"Welche Hintergrundebene soll als Standard verwendet werden?",cs:"Jaká vrstva pozadí by se měla zobrazovat ve výchozím nastavení?",nl:"Welke achtergrondlaag moet altijd gebruikt worden?",fr:"Quel fond souhaitez-vous utiliser par défaut ?",da:"Hvilket baggrundslag skal vises som standard?"},condition:"_theme:backgroundLayer=",mappings:[{if:"mapcomplete-preferred-background-layer=default",alsoShowIf:"mapcomplete-preferred-background-layer=",then:{en:"Use the default background layer",ca:"Utilitzeu la capa de fons predeterminada",de:"Standardhintergrund verwenden",cs:"Použití výchozí vrstvu pozadí",nl:"Gebruik de standaard achtergrondlaag",fr:"Utiliser le fond par défaut",da:"Vis standardbaggrundslaget"}},{if:"mapcomplete-preferred-background-layer=osm",then:{en:"Use OpenStreetMap-carto as default layer",ca:"Utilitzeu OpenStreetMap-carto com a capa predeterminada",de:"OpenStreetMap-carto als Standardhintergrund verwenden",cs:"Použít OpenStreetMap-carto jako výchozí vrstvu",nl:"Gebruik OpenStreetMap-carto altijd als achtergrondlaag",fr:"Utiliser le fond OpenStreetMap-carto par défaut",da:"Brug OpenStreetMap-carto som standardlag"}},{if:"mapcomplete-preferred-background-layer=photo",then:{en:"Use aerial imagery as default background",ca:"Utilitzeu imatges aèries com a fons predeterminat",de:"Satellitenbilder als Standardhintergrund verwenden",cs:"Použít letecké snímky jako výchozí pozadí",nl:"Gebruik luchtfoto's als standaard achtergrondlaag",fr:"Utiliser le fond imagerie aérienne par défaut",da:"Brug luftfoto som standardbaggrund"}},{if:"mapcomplete-preferred-background-layer=map",then:{en:"Use a non-openstreetmap based map as default background",ca:"Utilitzeu un mapa que no sigui openstreetmap com a fons predeterminat",de:"Eine eigene Karte als Standardhintergrund verwenden",cs:"Použití mapy, která není založena na mapě openstreetmap, jako výchozího pozadí",nl:"Gebruik altijd een kaart di niet op OpenStreetMap gebaseerd is als achtergrond",fr:"Utiliser un fond non basé sur OpenStreetMap par défaut",da:"Brug et ikke-OpenSreetMap-baseret kort som standardbaggrund"}},{if:"mapcomplete-preferred-background-layer:={__current_background}",then:{en:"Use the current background layer (<span class='code'>{__current_background}</span>) as default background",ca:"Utilitzeu la capa de fons actual (<span class='code'>{__current_background}</span>) com a fons predeterminat",de:"Aktuelle Hintergrundebene (<span class='code'>{__current_background}</span>) als Standardhintergrund verwenden",cs:"Použít aktuální vrstvu pozadí (<span class='code'>{__current_background}</span>) jako výchozí pozadí",nl:"Gebruik altijd <span class='code'>{__current_background}</span> als achtergrondlaag. Dit is de huidige achtergrond.",fr:"Utiliser le fond actuel (<span class='code'>{__current_background}</span>) par défaut",da:"Brug det nuværende baggrundslag (<span class='code'>{__current_background}</span>) som standardbaggrund"},hideInAnswer:{or:["__current_background=","__current_background=osm","__current_background=initial_value"]}},{if:"mapcomplete-preferred-background-layer~*",then:{en:"Use background layer <span class='code'>{mapcomplete-preferred-background-layer}</span> as default background",ca:"Utilitza la capa de fons <span class='code'>{mapcomplete-preferred-background-layer}</span> com a fons predeterminat",de:"Hintergrundebene <span class='code'>{mapcomplete-preferred-background-layer}</span> als Standardhintergrund verwenden",cs:"Použít vrstvu pozadí <span class='code'>{mapcomplete-preferred-background-layer}</span> jako výchozí pozadí",nl:"Gebruik <span class='code'>{mapcomplete-preferred-background-layer}</span> altijd als achtergrondlaag",fr:"Utiliser le fond (<span class='code'>{mapcomplete-preferred-background-layer}</span>)par défaut",da:"Brug baggrundslaget <span class='code'>{mapcomplete-preferred-background-layer}</span> som standardbaggrund"},hideInAnswer:!0}]},{id:"picture-license",description:"This question is not meant to be placed on an OpenStreetMap-element; however it is used in the user information panel to ask which license the user wants",question:{en:"Under what license do you want to publish your pictures?",de:"Unter welcher Lizenz möchten Sie Ihre Bilder veröffentlichen?",nl:"Met welke licentie wil je je afbeeldingen toevoegen?",ca:"Sota quina llicència vols publicar les teves fotos?",pt:"Sob que licença você deseja publicar suas fotos?",cs:"Pod jakou licencí chcete své fotografie zveřejnit?",da:"Under hvilken licens vil du frigive dine billeder?"},mappings:[{if:"mapcomplete-pictures-license=",icon:"./assets/layers/usersettings/scale.svg",then:{en:"Pictures you take will be licensed with <b>CC0</b> and added to the public domain. This means that everyone can use your pictures for any purpose. <span class='subtle'>This is the default choice.</span>",de:"Die von Ihnen aufgenommenen Bilder werden mit <b>CC0</b> lizenziert und der Public Domain hinzugefügt. Das bedeutet, dass jeder Ihre Bilder für jeden Zweck verwenden kann. <span class='subtle'>Dies ist die Standardeinstellung.</span>",nl:"Afbeeldingen die je toevoegt zullen gepubliceerd worden met de <b>CC0</b>-licentie en dus aan het publieke domein toegevoegd worden. Dit betekent dat iedereen je afbeeldingen kan gebruiken voor elk mogelijks gebruik. <span class='subtle'>Dit is de standaard-instelling</span>",cs:"Pořízené fotografie budou licencovány pod <b>CC0</b> a přidány do veřejné domény. To znamená, že kdokoli může vaše snímky použít k jakémukoli účelu. <span class='subtle'>Toto je výchozí volba.</span>",ca:"Les imatges que feu tindran llicència <b>CC0</b> i s'afegiran al domini públic. Això vol dir que tothom pot utilitzar les vostres imatges per a qualsevol propòsit. <span class='subtle'>Aquesta és l'opció predeterminada. </span>",pt:"As fotos que você tirar serão licenciadas com <b>CC0</b> e adicionadas ao domínio público. Isso significa que todos podem usar suas fotos para qualquer finalidade. <span class='subtle'>Esta é a escolha padrão.</span>"},hideInAnswer:!0},{if:"mapcomplete-pictures-license=CC0",icon:"./assets/layers/usersettings/scale.svg",then:{en:"Pictures you take will be licensed with <b>CC0</b> and added to the public domain. This means that everyone can use your pictures for any purpose.",de:"Ihre aufgenommenen Bilder werden mit <b>CC0</b> lizenziert und der Public Domain hinzugefügt. Das bedeutet, dass jeder Ihre Bilder für jeden Zweck verwenden kann.",nl:"Afbeeldingen die je toevoegt zullen gepubliceerd worden met de <b>CC0</b>-licentie en dus aan het publieke domein toegevoegd worden. Dit betekent dat iedereen je afbeeldingen kan gebruiken voor elk mogelijks gebruik.",ru:"Изображения будут опубликованы под лицензией <b>CC0</b> и перейдут в общественное достояние. Это значит, что кто угодно имеет право использовать их без ограничений.",cs:"Pořízené fotografie budou licencovány pod <b>CC0</b> a přidány do veřejné domény. To znamená, že kdokoli může vaše snímky použít k jakémukoli účelu.",ca:"Les imatges que feu tindran llicència <b>CC0</b> i s'afegiran al domini públic. Això vol dir que tothom pot utilitzar les vostres imatges per a qualsevol propòsit.",es:"Las fotografías que tome tendrán una licencia con <b>CC0</b> y se agregarán al dominio público. Esto significa que todos pueden usar sus imágenes para cualquier propósito.",pt:"As fotos que você tirar serão licenciadas com <b>CC0</b> e adicionadas ao domínio público. Isso significa que todos podem usar suas fotos para qualquer finalidade.",da:"Billeder, som du har taget, vil blive udgivet under <b>CC0</b>-licensen og lagt ud i fælleseje. Det betyder, at alle kan bruge dine billeder til ethvert formål.",fr:"Les photos que vous avez ajoutées seront sous licence <b>CC0</b>  et mises dans le domaine public. Cela signifie que n'importe qui pourra les utiliser, quel qu'en soit l'usage."}},{if:"mapcomplete-pictures-license=CC-BY 4.0",icon:"./assets/layers/usersettings/scale.svg",then:{en:"Pictures you take will be licensed with <b>CC-BY 4.0</b> which requires everyone using your picture that they have to attribute you",ca:"Les fotografies que facis es publicaran sota <b>CC-BY 4.0</b> que requereix que qualsevol que utilitzi la vostra imatge us ha de donar crèdits",de:"Die von Ihnen aufgenommenen Bilder werden mit <b>CC-BY 4.0</b> lizenziert, was bedeutet, dass jeder, der Ihr Bild verwendet, Sie als Urheber nennen muss",nl:"Afbeeldingen die je toevoegt zullen gepubliceerd worden met de <b>CC-BY 4.0</b>-licentie. Dit betekent dat iedereen je afbeelding mag gebruiken voor elke toepassing mits het vermelden van je naam",cs:"Pořízené fotografie budou licencovány pod <b>CC-BY 4.0</b>, což vyžaduje, aby vás uvedl každý, kdo použije vaší fotku",pt:"As fotos que você tirar serão licenciadas com <b>CC-BY 4.0</b>, que exige que todos que usam sua foto atribuam a você"}},{if:"mapcomplete-pictures-license=CC-BY-SA 4.0",icon:"./assets/layers/usersettings/scale.svg",then:{en:"Pictures you take will be licensed with <b>CC-BY-SA 4.0</b> which means that everyone using your picture must attribute you and that derivatives of your picture must be reshared with the same license.",de:"Die von Ihnen aufgenommenen Bilder werden mit <b>CC-BY-SA 4.0</b> lizenziert, was bedeutet, dass jeder, der Ihr Bild verwendet, Sie als Urheber nennen muss und dass Ableitungen Ihres Bildes mit der gleichen Lizenz weitergegeben werden müssen.",nl:"Afbeeldingen die je toevoegt zullen gepubliceerd worden met de <b>CC-BY-SA 4.0</b>-licentie. Dit betekent dat iedereen je afbeelding mag gebruiken voor elke toepassing mits het vermelden van je naam en dat afgeleide werken van je afbeelding ook ondere deze licentie moeten gepubliceerd worden.",cs:"Pořízené fotografie budou licencovány pod <b>CC-BY-SA 4.0</b>, což vyžaduje, aby vás uvedl každý, kdo použije vaší fotku a že odvozené fotky musí být dále sdíleny se stejnou licencí.",ca:"Les imatges que feu tindran una llicència amb <b>CC-BY-SA 4.0</b> el que significa que tothom que utilitzi la vostra imatge us ha d'atribuir i que els derivats de la vostra imatge s'han de tornar a compartir amb la mateixa llicència.",fr:"Les photos que vous prenez seront sous la licence <b>CC-BY-SA 4.0</b> ce qui signifie que quiconque utilisant votre photo doit vous créditer et que les modifications apportées à votre photo doivent être repartagées avec la même licence.",pt:"As fotos que você tirar serão licenciadas com <b>CC-BY-SA 4.0</b>, o que significa que todos que usarem sua foto devem atribuí-lo e que os derivados de sua foto devem ser compartilhados novamente com a mesma licença."}}]},{id:"show_tags",question:{en:"Show the raw OpenStreetMap-tags?",de:"Rohe OpenStreetMap-Tags anzeigen?",fr:"Afficher les attributs OpenStreetMap bruts ?",ca:"Mostra les etiquetes d'OpenStreetMap en brut?",cs:"Zobrazit nezpracované/raw tagy OpenStreetMap?",nl:"Moeten de data-attributen getoond worden?"},questionHint:{en:"<b>Tags</b> are attributes that every element has. This is the technical data that is stored in the database. You don't need this information to edit with MapComplete, but advanced users might want to use this as reference.",de:"<b>Tags</b> sind die Eigenschaften, die jedes Objekt hat. Das sind die technischen Daten, die in der Datenbank gespeichert werden. Du brauchst diese Informationen nicht, um mit MapComplete Änderungen zu machen, aber fortgeschrittenen Nutzer*innen kann es als Referenz dienen.",ca:"Les <b>etiquetes</b> són atributs que té cada element. Aquestes són les dades tècniques que s'emmagatzemen a la base de dades. No necessiteu aquesta informació per editar amb MapComplete, però és possible que els usuaris avançats la vulguin fer servir com a referència.",cs:"<b>Tagy</b> jsou atributy, které má každý element. Jedná se o technické údaje, které jsou uloženy v databázi. K úpravám pomocí MapComplete tyto informace nepotřebujete, ale pokročilí uživatelé by je mohli chtít použít jako referenci.",nl:"<b>Data-attributen</b> zijn stukjes data die elk element in OpenStreetMap heeft. Dit is technische data die in de databank komt. Je hoeft deze informatie niet te kennen om aanpassingen te maken met MapComplete, maar geavanceerde gebruikers kunnen dit als referentie gebruiken.",fr:"Les<b>Tags</b> ou étiquettes sont des attributs rattachés à chaque élément. C'est une donnée technique qui est stockée dans une base de données. Vous n'avez pas besoin de connaître ces étiquettes pour utiliser MapComplete, mais certains utilisateurs préfèrent les afficher."},mappings:[{if:"mapcomplete-show_tags=no",then:{en:"Never show the tags.",de:"Tags nie anzeigen.",ca:"No mostris mai les etiquetes.",cs:"Nikdy nezobrazovat tagy.",nl:"Verberg data-attributen",fr:"Ne jamais voir les étiquettes."}},{if:"mapcomplete-show_tags=",then:{en:"Show the tags that will be applied once I have made {__userjourney_tagsVisibleAt} changesets",de:"Tags anzeigen sobald ich {__userjourney_tagsVisibleAt} Changesets erstellt habe",ca:"Mostra les etiquetes que s'aplicaran un cop hagi fet {__userjourney_tagsVisibleAt} conjunts de canvis",cs:"Zobrazit tagy, které budou použity, jakmile provedu {__userjourney_tagsVisibleAt} sady změn",nl:"Toon data-attributen bij wijzigingen indien je meer dan {__userjourney_tagsVisibleAt} changesets hebt gemaakt",fr:"Voir les étiquettes au bout de  {__userjourney_tagsVisibleAt} modifications"}},{if:"mapcomplete-show_tags=yes",then:{en:"Show the tags that will be applied when making a change",de:"Tags anzeigen, die bei der Änderung hinzugefügt werden",ca:"Mostra les etiquetes que s'aplicaran en fer un canvi",cs:"Zobrazení tagů, které budou použity při provádění změny",nl:"Toon de data-attributen die toegepast zullen worden bij wijzigingen",fr:"Voir les étiquettes quand je fais une modification"}},{if:"mapcomplete-show_tags=full",then:{en:"Show the tags that will be applied when making a change and show the tags table on every feature",de:"Tags anzeigen, die bei der Änderung hinzugefügt werden, und Tag-Tabelle bei jedem Objekt anzeigen",ca:"Mostra les etiquetes que s'aplicaran a l'hora de fer un canvi i mostra la taula d'etiquetes a cada element",cs:"Zobrazení tagů, které se použijí při provádění změny, a zobrazení tabulky tagů u každé funkce",nl:"Toon de data-attributen die toegepast zullen worden bij wijzigingen en toon een tabel met alle data-attributen bij elk object.",fr:"Voir les étiquettes quand je fais une modification et toujours voir les étiquettes pour chaque élément"}}]},{id:"all-questions-at-once",question:{en:"Should questions for unknown data fields appear one-by-one or together?",de:"Sollen Fragen für unbekannte Datenfelder einzeln oder zusammen angezeigt werden?",fr:"Est-ce que les questions pour les champs sans donnée doivent apparaître une à une ou toutes ensembles ?",pt:"As perguntas para campos de dados desconhecidos devem aparecer uma a uma ou juntas?",ca:"Les preguntes amb camps de dades desconeguts haurien d'aparèixer una per una o juntes?",nl:"Moeten onbeantwoorde vragen om beurt of allemaal samen getoond worden?",cs:"Mají se otázky pro neznámá datová pole zobrazovat jednotlivě, nebo společně?",da:"Skal spørgsmål for ukendte oplysninger vises ét ad gangen eller alle på én gang?"},mappings:[{if:"mapcomplete-show-all-questions=true",then:{en:"Show all questions in the infobox together",de:"Alle Fragen in der Infobox zusammen anzeigen",ca:"Mostra totes les preguntes al quadre d'informació",fr:"Afficher toutes les question en même temps dans l'infobox",pt:"Mostrar todas as perguntas na caixa de informações juntas",nl:"Toon alle onbeantwoorde vragen",cs:"Zobrazit všechny otázky v infoboxu dohromady",da:"Vis alle spørgsmål i infoboksen på én gang"}},{if:"mapcomplete-show-all-questions=false",then:{en:"Show questions one-by-one",de:"Fragen der Reihe nach anzeigen",ca:"Mostra les preguntes una per una",fr:"Afficher les questions une à une",pt:"Mostrar perguntas uma a uma",nl:"Toon de vragen één per één",cs:"Zobrazit otázky jednu po druhé",da:"Vis spørgsmål ét ad gangen"}}]},{id:"show_crosshair",question:{en:"Should a crosshair be shown in the center of the display?",cs:"Měl by se uprostřed displeje zobrazovat kříž?",de:"Soll ein Fadenkreuz in der Mitte des Bildschirms angezeigt werden?",nl:"Moet er een kruisje getoond worden in het centrum van je display?"},questionHint:{en:"This can help to accurately position a new element",cs:"To může pomoci přesněji umístit nový prvek",de:"Dies kann dazu beitragen, ein neues Element genau zu positionieren",nl:"Dit kan helpen om nieuwe elementen accuraat te plaatsen",ca:"Això pot ajudar a posicionar amb precisió un nou element"},mappings:[{if:"mapcomplete-show_crosshair=yes",then:"Show a crosshair in the center of the map when zoomed in above level 17"},{if:"mapcomplete-show_crosshair=no",then:"Do not show a crosshair in the center of the map"},{if:"mapcomplete-show_crosshair=",then:"Do not show a crosshair in the center of the map",hideInAnswer:!0},{if:"mapcomplete-show_crosshair=always",then:"Always show a crosshair in the center of the map"}]},{id:"add-new-feature",question:{en:"How should the menu to add a new feature be opened?",de:"Wie soll das Menü zum Hinzufügen eines neuen Objekts geöffnet werden?"},mappings:[{if:"mapcomplete-preferences-add-new-mode=button",then:{en:"Adding a new feature is done with the button at the bottom left. Clicking the map does nothing",de:"Das Hinzufügen eines neuen Objekts erfolgt über die Schaltfläche unten links. Ein Klick auf die Karte bewirkt nichts"}},{if:"mapcomplete-preferences-add-new-mode=click",then:{en:"When clicking or tapping the map, a marker pops up where a new feature is added",de:"Wenn Sie auf die Karte klicken oder tippen, wird eine Markierung eingeblendet, an der ein neues Objekt hinzugefügt wird"}},{if:"mapcomplete-preferences-add-new-mode=click_right",then:{en:"When right-clicking or long-pressing the map, a marker pops up where a new feature can be added",de:"Beim Rechtsklick oder einem langen Druck auf die Karte erscheint eine Markierung, mit der ein neues Objekt hinzugefügt werden kann"}},{if:"mapcomplete-preferences-add-new-mode=button_click",then:{en:"When clicking or tapping the map, a marker pops up where a new feature can be added. Additionally, a button at the bottom left is shown",de:"Beim Klicken oder Tippen auf die Karte wird eine Markierung eingeblendet, an der ein neues Objekt hinzugefügt werden kann. Zusätzlich wird unten links eine Schaltfläche angezeigt"}},{if:"mapcomplete-preferences-add-new-mode=button_click_right",then:{en:"When right-clicking or long-pressing the map, a marker pops up where a new feature can be added. Additionally, a button at the bottom left is shown",de:"Beim Rechtsklick oder einem langen Druck auf die Karte erscheint eine Markierung, an der ein neues Objekt hinzugefügt werden kann. Zusätzlich wird unten links eine Schaltfläche angezeigt"}}]},{id:"fixate-north",question:{en:"Should north always be up?",de:"Soll Norden immer oben sein?",ca:"El nord hauria d'estar sempre amunt?",cs:"Měl by být sever vždy nahoře?",nl:"Moet het noorden altijd naar boven getoond worden?",da:"Skal nord altid pege opad?"},mappings:[{if:"mapcomplete-fixate-north=",icon:"./assets/svg/compass.svg",then:{en:"Allow to rotate the map",de:"Drehen der Karte zulassen",ca:"Permet girar el mapa",fr:"Autoriser la rotation de la carte",da:"Tillad rotation af kortet",cs:"Umožnit otáčení mapy",nl:"Sta kaartrotatie toe"}},{if:"mapcomplete-fixate-north=yes",icon:"./assets/svg/compass.svg",then:{en:"Always keep north pointing up",de:"Norden immer nach oben zeigen lassen",fr:"Toujours garder le nord en haut",ca:"Mantingueu sempre el nord apuntant cap amunt",cs:"Sever vždy směřujte nahoru",nl:"Hou het noorden altijd naar boven",da:"Nord peger altid opad"}}]},{id:"more_privacy_theme_override",mappings:[{if:"__featureSwitchMorePrivacy=true",then:{en:"This theme is sensitive. Making changes will not indicate if you were nearby explicitly.",de:"Dieses Thema ist sensibel. Wenn du Änderungen vornimmst, wird nicht angezeigt, ob du explizit in der Nähe warst.",nl:"Dit thema ligt gevoelig. Wijzigingen aan objecten zullen niet aangeven of je in de buurt was."}}]},{id:"more_privacy",question:{en:"When making changes, should a rough indication be given how far away you were from the object?",de:"Sollte bei Änderungen eine grobe Angabe gemacht werden, wie weit du vom Objekt entfernt warst?",nl:"Mag er opgeslaan worden hoever je je van een object bevindt wanneer je aanpassingen maakt aan dit object?"},questionHint:{en:"If you make a change to one or more objects and you enabled your location, a rough indication of where you made will be saved: it is indicated if you were closer then 25m, 500m, 5km or further away then 5km. This helps mappers understand your context when making changes, but gives an indication of where you were at this time. ",de:"Wenn du eine Änderung an einem oder mehreren Objekten vornimmst und deinen Standort aktivierst, wird eine ungefähre Angabe darüber gespeichert, wo du dich befunden hast: Es wird angezeigt, ob du näher als 25m, 500m, 5km oder weiter als 5km entfernt warst. Das hilft den Kartierern, deinen Kontext zu verstehen, wenn du Änderungen vornimmst, gibt aber auch einen Hinweis darauf, wo du zu diesem Zeitpunkt warst. ",nl:"Wanneer je een wijziging maakt aan één of meer interessepunten en als MapComplete toont waar je bent, dan kan opgeslaan worden hoever je je ongeveer van deze objecten bevindt. Er wordt aangeduid of je dichter dan 25m, 500m, 5km of verder dan 5km was. Dit helpt om andere bijdragers te begrijpen hoe je je bijdragen deed, maar geeft natuurlijk ook aan waar je op dat moment was. "},mappings:[{if:"mapcomplete-more_privacy=yes",icon:"./assets/svg/eye.svg",then:{en:"When making changes to OpenStreetMap, do not indicate how far away you were from the changed objects.",de:"Wenn du Änderungen an OpenStreetMap vornimmst, gibst du nicht an, wie weit du von den geänderten Objekten entfernt warst.",nl:"Geef niet aan hoever je je van de gewijzigde objecten bevindt wanneer je wijzigingen maakt met MapComplete."}},{if:"mapcomplete-more_privacy=no",icon:"cross_bottom_right:red;./assets/svg/eye.svg",then:{en:"When making changes to OpenStreetMap, roughly indicate how far away you were from the changed objects. This helps other contributors to understand how you made the change",de:"Wenn du Änderungen an OpenStreetMap vornimmst, gib grob an, wie weit du von den geänderten Objekten entfernt warst. Das hilft anderen Mitwirkenden zu verstehen, wie du die Änderung vorgenommen hast.",nl:"Geef aan hoever je je ongeveer bevindt ten opzichte van objecten die je wijzigt in OpenStreetMap. Dit helpt andere bijdagers te begrijpen welke wijzigingen je waarom maakt."}}]},{id:"mangrove-keys",classes:"flex flex-col",render:{ca:"{link(Baixeu la clau privada del vostre compte de Mangrove,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Qualsevol persona que tingui aquest fitxer pot fer ressenyes amb la vostra identitat",cs:"{link(Stáhnout soukromý klíč pro Mangrove účet,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Kdokoli, kdo má tento soubor, může provádět recenze s vaší identitou",da:"{link(Hent den private nøgle til din Mangrove-konto,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Enhver, der har denne fil, kan lave ændringer med din identitet",de:"{link(Laden Sie den privaten Schlüssel für Ihr Mangrove-Konto herunter,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Jeder, der diese Datei besitzt, kann mit Ihrer Identität Rezensionen vornehmen",en:"{link(Download the private key for your Mangrove Account,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Anyone possessing this file can make reviews with your identity",nl:"{link(Download de private sleutel van je Mangrove-account,data:application/json&COMMA&LBRACEmangroveidentity&RBRACE,,mangrove_private_key_&LBRACE_name&RBRACE,):button}Iedereen die dit bestand bezit, kan met jouw identiteit wijzigingen maken"}},{id:"mangrove-key-import",render:{da:"{import_mangrove_key(Indlæs en privat Mangrove-nøgle fra backup)}Når du uploader en privat nøgle, slettes din nuværende private nøgle. Hvis du har brugt den til at lave anmeldelser, kan du downloade din private nøgle først",de:"{import_mangrove_key(Privaten Mangrove-Schlüssel aus Backup importieren)}Wenn du einen privaten Schlüssel hochlädst, wird dein aktueller privater Schlüssel gelöscht. Wenn du damit Rezensionen geschrieben hast, lade zuerst deinen aktuellen privaten Schlüssel hoch",en:"{import_mangrove_key(Import a mangrove private key from backup)}Uploading a private key erases your current private key. If you made reviews with it, download your current private key first",nl:"{import_mangrove_key(Herstel een Mangrove Private sleutel van backup)}Een private sleutel uploaden overschrijft je huidige private sleutel. Indien je beoordelingen maakte met je huidige private sleutel, download deze dan eerst"}},{id:"translations-title",label:["translations"],render:"<h3>Translating MapComplete</h3>"},{label:["translations"],id:"translation-mode",question:{en:"Do you want to help translating MapComplete?",de:"Möchten Sie bei der Übersetzung von MapComplete helfen?",cs:"Chcete pomoci s překladem MapComplete?",ca:"Vols ajudar a traduir MapComplete?",fr:"Voulez-vous aider à traduire MapComplete ?",pt:"Quer ajudar na tradução do MapComplete?",nl:"Wil je MapComplete helpen vertalen?",da:"Vil du hjælpe med at oversætte MapComplete?"},mappings:[{if:"mapcomplete-translation-mode=false",icon:"cross_bottom_right:red;./assets/svg/translate.svg",then:{en:"Don't show a button to quickly change translations",de:"Keine Schaltfläche zum schnellen Wechseln von Übersetzungen anzeigen",ca:"No mostris cap botó per a canviar ràpidament les traduccions",fr:"Ne pas afficher de bouton pour modifier les traductions rapidement",pt:"Não mostrar um botão para alterar as traduções rapidamente",cs:"Nezobrazovat tlačítko pro rychlou změnu překladů",nl:"Verberg de knoppen om een vertaling in te voeren."}},{if:"mapcomplete-translation-mode=true",icon:"./assets/svg/translate.svg",then:{en:"Show a button to quickly open translations when using MapComplete on a big screen",de:"Schaltfläche anzeigen zum schnellen Öffnen von Übersetzungen beim Verwenden von MapComplete auf einem großen Bildschirm",fr:"Afficher un bouton pour ouvrir rapidement les traductions lorsque vous utilisez MapComplete sur un grand écran",ca:"Mostra un botó per a obrir ràpidament les traduccions quan utilitzes MapComplet en una pantalla gran",pt:"Mostrar um botão para abrir traduções rapidamente ao usar o MapComplete em uma tela grande",da:"Vis en knap for hurtigt at åbne oversættelser, når du bruger MapComplete på en stor skærm",cs:"Zobrazit tlačítko pro rychlé otevření překladů při použití MapComplete na velké obrazovce",nl:"Toon een knopje om snel vertalingen te maken indien MapComplete op een groot scherm is geopend"}},{if:"mapcomplete-translation-mode=mobile",icon:"./assets/layers/usersettings/translate_mobile.svg",then:{en:"Always show the translation buttons, including on mobile",de:"Übersetzungsschaltflächen immer anzeigen, auch auf dem Handy",ca:"Mostra sempre els botons de traducció, fins i tot al mòbil",fr:"Toujours afficher les boutons de traduction, même sur mobile",pt:"Mostrar sempre os botões de tradução, inclusive no celular",cs:"Vždy zobrazovat tlačítka překladu, a to i na mobilu",nl:"Toon een knopje om snel vertalingen te maken op mobiel en op grote schermen"}}]},{label:["translations"],id:"translation-help",mappings:[{if:{or:["mapcomplete-translation-mode=yes","mapcomplete-translation-mode=true","mapcomplete-translation-mode=mobile"]},then:{ca:"Fes clic a la icona 'tradueix' al costat d'una cadena per introduir o actualitzar un fragment de text. Necessites un compte de Weblate per a això. Crea'n un amb el teu nom d'usuari OSM per desbloquejar automàticament el mode de traducció.",da:"Klik på 'oversæt'-ikonet ved siden af en streng for at indtaste eller opdatere et stykke tekst. Du skal have en Weblate-konto for at kunne gøre dette. Opret en med dit OSM-brugernavn for automatisk at låse oversættelsestilstanden op.",de:"Klicken Sie auf das Übersetzungssymbol neben einer Zeichenfolge, um den Übersetzungstext einzugeben oder zu aktualisieren. Dazu benötigen Sie ein Weblate-Konto. Erstellen Sie eines mit Ihrem OSM-Benutzernamen, um den Übersetzungsmodus automatisch freizuschalten.",en:"Click the 'translate'-icon next to a string to enter or update a piece of text. You need a Weblate-account for this. Create one with your OSM-username to automatically unlock translation mode.",es:"Haz clic en el icono 'traducir' al lado de una cadena para introducir o actualizar un texto. Necesitas una cuenta de Weblate para esto. Crea una con tu usuario de OSM para desbloquear el modo de traducción automáticamente.",fr:`Cliquez sur l'icône "traduire" à côté d'une chaîne de caractères pour saisir ou mettre à jour la chaine de texte. Vous aurez besoin d'un compte Weblate pour cela. Créez-en un avec votre nom d'utilisateur OSM pour déverrouiller automatiquement le mode traduction.`,nl:"Klik op het 'vertaal'-icoontje die naast een stukje tekst staat om deze tekst te vertalen of aan te passen. Hiervoor heb je een (gratis) Weblate-account nodig. Indien je jouw account maakt met dezelfde naam als je OSM-gebruikersnaam, dan zullen de vertaalknoppen automatisch verschijnen.",zh_Hant:"點字串旁邊的 'translate'-icon 來輸入或是更新一段文字。你需要 Weblate 帳號。用你 OSM 帳號名稱來創建帳號，並且自動解鎖翻譯模式。",cs:"Chcete-li zadat nebo aktualizovat část textu, klikněte na ikonu „přeložit“ vedle řetězce. K tomu potřebujete účet Weblate. Vytvořte si jej s vaším uživatelským jménem OSM, abyste automaticky odemkli režim překladu."},icon:"./assets/svg/translate.svg"}]},{label:["translations"],id:"translation-completeness",render:{ca:"Les traduccions de {_theme} en {_language} tenen un {_translation_percentage}%: {_translation_translated_count} cadenes de {_translation_total} estan traduïdes",da:"Oversættelser for {_theme} i {_language} er på {_translation_percentage}%: {_translation_translated_count} strenge ud af {_translation_total} er oversat",de:"Die Übersetzung für {_theme} in {_language} ist zu {_translation_percentage}% vollständig: {_translation_translated_count} Zeichenfolgen von {_translation_total} sind übersetzt",en:"Translations for {_theme} in {_language} are at {_translation_percentage}%: {_translation_translated_count} strings out of {_translation_total} are translated",es:"Las traducciones para {_theme} en {_language} están al {_translation_percentage}%: {_translation_translated_count} cadenas de {_translation_total} están traducidas",id:"Terjemahan untuk {_theme} dalam {_language} masih {_translation_percentage}%: {_translation_translated_count} string dari {_translation_total} diterjemahkan",nb_NO:"Oversettelsen for {_theme} i {_language} har {_translation_percentage}% dekning: {_translation_translated_count} strenger av {_translation_total} har blitt oversatt",nl:"Vertalingen voor {_theme} in {_language} zijn momenteel op {_translation_percentage}%: van {_translation_total} teksten zijn er reeds {_translation_translated_count} vertaald",zh_Hant:"{_theme} 的 {_language} 翻譯目前是 {_translation_percentage}%：{_translation_total} 中的 {_translation_translated_count} 已經翻譯了",fr:"Les traductions pour {_theme} en {_language} sont à {_translation_percentage} % : {_translation_translated_count} chaînes traduites sur {_translation_total}",cs:"Překlady pro {_theme} v {_language} jsou na úrovni {_translation_percentage}%: {_translation_translated_count} z {_translation_total} je přeloženo"},condition:{or:["mapcomplete-translation-mode=yes","mapcomplete-translation-mode=true","mapcomplete-translation-mode=mobile"]},mappings:[{if:"_translation_percentage=100",icon:"confirm",then:{en:"Completely translated",nl:"Volledig vertaald",de:"Vollständig übersetzt",ca:"Completament traduït",pt:"Traduzido completamente",cs:"Kompletně přeloženo"}}]},{id:"translation-links",label:["translations"],condition:{and:["_translation_links~*",{or:["mapcomplete-translation-mode=true","mapcomplete-translation-mode=mobile"]}]},render:{"*":"{multi(_translation_links,<a href='&LBRACElink&RBRACE' target='_blank' rel='noopener'>Translate entries of &LBRACEid&RBRACE</a>,)}"}},{id:"verified-mastodon",mappings:[{if:"_mastodon_link~*",then:{en:"A link to your Mastodon-profile has been been found: <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>",de:"Es wurde ein Link zu deinem Mastodon-Profil gefunden: <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>",nl:"Een link naar je Mastodon-profiel werd gevonden: <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>",fr:"Un lien vers votre profil Mastodon a été trouvé : <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>",ca:"S'ha trobat un enllaç al vostre perfil de Mastodon: <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>",cs:"Byl nalezen odkaz na váš profil Mastodon: <a href='{_mastodon_link}' target='_blank' rel='noopener'>{_mastodon_link}</a>"},icon:"mastodon"},{if:"_mastodon_candidate~*",then:{en:`We found a link to what looks to be a mastodon account, but it is unverified. <a href='https://www.openstreetmap.org/profile/edit' target='_blank' rel='noopener'>Edit your profile description</a> and place the following there: <span class='code'>&lta href="{_mastodon_candidate}" rel="me"&gtMastodon&lt/a&gt`,de:`Wir haben einen Link gefunden, der aussieht wie ein Mastodon-Konto, aber nicht verifiziert ist. <a href='https://www.openstreetmap.org/profile/edit' target='_blank' rel='noopener'>Bearbeiten Sie Ihre Profilbeschreibung</a> und fügen Sie dort Folgendes ein: <span class='code'>&lta href="{_mastodon_candidate}" rel="me"&gtMastodon&lt/a&gt`,nl:`Je profielbeschrijving bevat een link die vermoedelijk naar je Mastodon gaat, maar deze link is niet verifieerdbaar voor Mastodon.<a href='https://www.openstreetmap.org/profile/edit' target='_blank' rel='noopener'>Pas je profielbeschrijving aan</a> en plaats er de volgende code: <span class='code'>&lta href="{_mastodon_candidate}" rel="me"&gtMastodon&lt/a&gt`,ca:`Hem trobat un enllaç al que sembla ser un compte de mastodon, però no està verificat. <a href='https://www.openstreetmap.org/profile/edit' target='_blank' rel='noopener'>Editeu la descripció del vostre perfil</a> i col·loqueu-hi el següent: <span class='code '>&lta href="{_mastodon_candidate}" rel="me"&gtMastodon&lt/a&gt`,cs:`Našli jsme odkaz na to, co vypadá jako účet mastodon, ale je neověřený. <a href='https://www.openstreetmap.org/profile/edit' target='_blank' rel='noopener'>Upravte popis svého profilu</a> a umístěte tam následující: <span class='code '>&lta href="{_mastodon_candidate}" rel="me"&gtMastodon&lt/a&gt`},icon:"invalid"}]},{id:"cscount-thanks",mappings:[{if:"_csCount>0",then:{en:"You have made changes on {_csCount} different occasions! That is awesome!",de:"Sie haben bei {_csCount} verschiedenen Gelegenheiten Änderungen vorgenommen! Das ist großartig!",ca:"Has fet {_csCount} en diferents ocasions! Això és sorprenent!",fr:"Vous avez fait {_csCount} modifications ! C'est génial !",pt:"Você fez alterações em {_csCount} ocasiões diferentes! Isso é incrível!",nl:"Je hebt {_csCount} verschillende keren bijgedragen! Dat is indrukwekkend!",da:"Du har lavet ændringer ved {_csCount} forskellige begivenheder! Det er fantastisk!",es:"Has hecho cambios en {_csCount} ocasiones diferentes. ¡Es alucinante!",cs:"Změny jste provedli při {_csCount} různých příležitostech! To je úžasné!"},icon:"party"}]},{id:"translation-thanks",mappings:[{if:"_translation_contributions>0",then:{en:"You have contributed to translating MapComplete with {_translation_contributions} commits! That's awesome!",nl:"Je hebt MapComplete helpen vertalen met {_translation_contributions} commits! Dat is fantastisch! Bedankt hiervoor!",de:"Du hast mit {_translation_contributions} Änderungen zur Übersetzung von MapComplete beigetragen! Das ist großartig!"},icon:"party"}]},{id:"contributor-thanks",mappings:[{if:"_code_contributions>0",then:{en:"You have contributed code to MapComplete with {_code_contributions} commits! That's awesome!",de:"Sie haben Code zu MapComplete mit {_code_contributions} Commits beigetragen! Das ist großartig!",nl:"Je hebt mee geprogrammeerd aan MapComplete met {_code_contributions} commits! Das supercool van je! Bedankt hiervoor!",ca:"Heu aportat codi a MapComplete amb {_code_contributions} commits! Això és increïble!",cs:"Přispěli jste do MapComplete kódem s {_code_contributions} revizemi! To je úžasné!",da:"Du har bidraget kode til MapComplete med {_code_contributions} commits! Det er fantastisk!"},icon:"party",hideInAnswer:!0}]},{id:"show_debug",question:{en:"Show user settings debug info?",de:"Debug-Informationen zu den Benutzereinstellungen anzeigen?",cs:"Zobrazit informace o ladění v nastavení?",ca:"Vols mostrar la informació de depuració de la configuració de l'usuari?",pt:"Mostrar informações de depuração das configurações do usuário?",nl:"Moet debug-informatie getoond worden?"},mappings:[{if:"mapcomplete-show_debug=yes",icon:"./assets/svg/bug.svg",then:{en:"Show debug info",de:"Debug-Informationen anzeigen",cs:"Zobrazit informace o ladění",ca:"Mostra la informació de depuració",pt:"Mostrar informações de depuração",nl:"Toon debug-informatie"}},{if:"mapcomplete-show_debug=no",icon:"cross_bottom_right:red;./assets/svg/bug.svg",then:{en:"Don't show debug info",de:"Keine Debug-Informationen anzeigen",cs:"Nezobrazovat informace o ladění",ca:"No mostris informació de depuració",pt:"Não mostrar informações de depuração",nl:"Verberg debug-informatie"}},{if:"mapcomplete-show_debug=",then:{en:"Don't show debug info",de:"Keine Debug-Informationen anzeigen",cs:"Nezobrazovat informace o ladění",pt:"Não mostrar informações de depuração",da:"Vis ikke debug-informationer",ca:"No mostris informació de depuració",nl:"Verberg debug-informatie"},hideInAnswer:!0}]},{id:"debug-gps",condition:"mapcomplete-show_debug=yes",render:"{gps_all_tags()}"},{id:"debug",condition:"mapcomplete-show_debug=yes",render:"{all_tags()}"}],p2=[{render:"icons.defaults",id:"iconsdefaults"},{render:"icons.rating",id:"iconsrating"}],g2=[],m2={id:s2,description:o2,source:l2,calculatedTags:c2,title:u2,pointRendering:d2,lineRendering:f2,tagRenderings:h2,titleIcons:p2,_layerIcon:g2};class wc{metaTaggging_for_usersettings(e){Ca.AddLazyProperty(e.properties,"_mastodon_candidate_md",()=>{var t;return(t=e.properties._description.match(/\[[^\]]*\]\((.*(mastodon|en.osm.town).*)\).*/))==null?void 0:t.at(1)}),Ca.AddLazyProperty(e.properties,"_d",()=>{var t,i;return((i=(t=e.properties._description)==null?void 0:t.replace(/&lt;/g,"<"))==null?void 0:i.replace(/&gt;/g,">"))??""}),Ca.AddLazyProperty(e.properties,"_mastodon_candidate_a",()=>(t=>{var n;const i=document.createElement("div");return i.innerHTML=t.properties._d,(n=Array.from(i.getElementsByTagName("a")).filter(r=>r.href.match(/mastodon|en.osm.town/)!==null)[0])==null?void 0:n.href})(e)),Ca.AddLazyProperty(e.properties,"_mastodon_link",()=>(t=>{var n;const i=document.createElement("div");return i.innerHTML=t.properties._d,(n=Array.from(i.getElementsByTagName("a")).filter(r=>{var s;return((s=r.getAttribute("rel"))==null?void 0:s.indexOf("me"))>=0})[0])==null?void 0:n.href})(e)),Ca.AddLazyProperty(e.properties,"_mastodon_candidate",()=>e.properties._mastodon_candidate_md??e.properties._mastodon_candidate_a),e.properties.__current_backgroun="initial_value"}}$(wc,"themeName","usersettings");var yo,_o;const kt=class kt{constructor(e,t,i,n){$(this,"osmConnection");$(this,"mangroveIdentity");$(this,"installedUserThemes");$(this,"showAllQuestionsAtOnce");$(this,"showTags");$(this,"showCrosshair");$(this,"fixateNorth");$(this,"a11y");$(this,"homeLocation");$(this,"morePrivacy");$(this,"language");$(this,"preferredBackgroundLayer");$(this,"imageLicense");$(this,"gpsLocationHistoryRetentionTime",new yt(7*24*60*60,"gps_location_retention"));$(this,"addNewFeatureMode",new yt("button_click_right"));$(this,"preferencesAsTags");$(this,"_mapProperties");this.osmConnection=e,this._mapProperties=n,this.osmConnection.GetPreference("translation-mode","false").addCallbackAndRunD(s=>{s=s.toLowerCase(),s==="true"||s==="yes"?(ya.showLinkOnMobile.setData(!1),ya.showLinkToWeblate.setData(!0)):s==="false"||s==="no"?ya.showLinkToWeblate.setData(!1):s==="mobile"?(ya.showLinkOnMobile.setData(!0),ya.showLinkToWeblate.setData(!0)):(ya.showLinkOnMobile.setData(!1),ya.showLinkToWeblate.setData(!1))}),this.showAllQuestionsAtOnce=yt.asBoolean(this.osmConnection.GetPreference("show-all-questions","false",{documentation:"Either 'true' or 'false'. If set, all questions will be shown all at once"})),this.language=this.osmConnection.GetPreference("language"),this.showTags=this.osmConnection.GetPreference("show_tags"),this.showCrosshair=this.osmConnection.GetPreference("show_crosshair"),this.fixateNorth=this.osmConnection.GetPreference("fixate-north"),this.morePrivacy=this.osmConnection.GetPreference("more_privacy","no"),this.a11y=this.osmConnection.GetPreference("a11y"),this.mangroveIdentity=new W_(this.osmConnection.GetLongPreference("identity","mangrove"),this.osmConnection.GetPreference("identity-creation-date","mangrove")),this.preferredBackgroundLayer=this.osmConnection.GetPreference("preferred-background-layer",void 0,{documentation:"The ID of a layer or layer category that MapComplete uses by default"}),this.addNewFeatureMode=this.osmConnection.GetPreference("preferences-add-new-mode","button_click_right",{documentation:"How adding a new feature is done"}),this.imageLicense=this.osmConnection.GetPreference("pictures-license","CC0",{documentation:"The license under which new images are uploaded"}),this.installedUserThemes=this.InitInstalledUserThemes(),this.homeLocation=this.initHomeLocation(),this.preferencesAsTags=this.initAmendedPrefs(t,i),this.syncLanguage()}syncLanguage(){zs.wasInitialized("language")||this.language.syncWith(ya.language)}static initUserSettingsState(){try{return new L0(m2,"userinformationpanel")}catch{return}}GetUnofficialTheme(e){console.log("GETTING UNOFFICIAL THEME");const t=this.osmConnection.GetLongPreference("unofficial-theme-"+e),i=t.data;if(i===void 0||i==="undefined"||i===""){t.setData(null);return}try{const n=JSON.parse(i);return n.isOfficial=!1,n}catch{console.warn("Removing theme "+e+" as it could not be parsed from the preferences; the content is:",i),t.setData(null);return}}markLayoutAsVisited(e){if(!e){console.error("Trying to mark a layout as visited, but ",e," got passed");return}e.hideFromOverview&&this.osmConnection.isLoggedIn.addCallbackAndRunD(t=>{if(t)return this.osmConnection.GetPreference("hidden-theme-"+(e==null?void 0:e.id)+"-enabled").setData("true"),!0}),e.official||this.osmConnection.GetLongPreference("unofficial-theme-"+e.id).setData(JSON.stringify({id:e.id,icon:e.icon,title:e.title.translations,shortDescription:e.shortDescription.translations,definition:e.definition}))}InitInstalledUserThemes(){const e="mapcomplete-unofficial-theme-",t="-combined-length";return this.osmConnection.preferencesHandler.preferences.map(i=>Object.keys(i).filter(n=>n.startsWith(e)&&n.endsWith(t)).map(n=>n.substring(e.length,n.length-t.length)))}initHomeLocation(){const e=[],t=E0.ListStabilized(this.osmConnection.userDetails.map(i=>{if(i===void 0)return;const n=i.home;if(n!==void 0)return[n.lon,n.lat]})).map(i=>i===void 0?e:[{type:"Feature",properties:{id:"home","user:home":"yes",_lon:i[0],_lat:i[1]},geometry:{type:"Point",coordinates:i}}]);return new gs(t)}initAmendedPrefs(e,t){var o,d;const i=new yt({_theme:e==null?void 0:e.id,"_theme:backgroundLayer":e==null?void 0:e.defaultBackgroundId,_backend:this.osmConnection.Backend(),_applicationOpened:new Date().toISOString(),_supports_sharing:typeof window>"u"?"no":window.navigator.share?"yes":"no",_iframe:Ca.isIframe?"yes":"no"});for(const p in js.userJourney)i.data["__userjourney_"+p]=js.userJourney[p];for(const p of zs.initializedParameters())i.data["__url_parameter_initialized:"+p]="yes";const n=this.osmConnection;n.preferencesHandler.preferences.addCallback(p=>{for(const u in p){const v=p[u];if(!(v==="undefined"||!v))if(u.endsWith("-combined-length")){const S=Number(v),E=u.substring(0,u.length-6);let A="";for(let L=0;L<S;L++)A+=p[E+L];i.data[E.substring(0,E.length-10)]=A}else i.data[u]=p[u]}i.ping()});const r=n.GetPreference("translation-mode");ya.language.mapD(p=>{i.data._language=p;const u=r.data;if((u==="true"||u==="mobile")&&e!==void 0){const v=kt.usersettingsConfig,S=e.missingTranslations(v),E=S.total,A=S.untranslated.get(p)??[],L=A.some(q=>q.startsWith("themes:")),N=Ca.Dedup(A.filter(q=>q.startsWith("layers:")).map(q=>q.slice(7).split(".")[0])),I=Ca.NoNull([L?{id:"theme:"+e.id,link:Ss.hrefToWeblateZen(p,"themes",e.id)}:void 0,...N.map(q=>({id:"layer:"+q,link:Ss.hrefToWeblateZen(p,"layers",q)}))]),T=A.length;i.data._translation_total=""+E,i.data._translation_translated_count=""+(E-T),i.data._translation_percentage=""+Math.floor(100*(E-T)/E),i.data._translation_links=JSON.stringify(I)}i.ping()},[r]),this.mangroveIdentity.getKeyId().addCallbackAndRun(p=>{i.data.mangrove_kid=p,i.ping()});const s=new wc;n.userDetails.addCallback(p=>{for(const E in p)i.data["_"+E]=""+p[E];s.metaTaggging_for_usersettings({properties:i.data});const u=p.name.toLowerCase().replace(/\s+/g,""),v=$_.contributors.find(E=>E.contributor.toLowerCase().replace(/\s+/g,"")===u);v&&(i.data._translation_contributions=""+v.commits);const S=Z_.contributors.find(E=>E.contributor.toLowerCase().replace(/\s+/g,"")===u);S&&(i.data._code_contributions=""+S.commits),i.ping()}),i.addCallbackD(p=>{for(const u in p)u.startsWith("_")||u==="mapcomplete-language"||(p[u+"-combined-0"]?this.osmConnection.GetLongPreference(u,"").setData(p[u]):this.osmConnection.GetPreference(u,void 0,{prefix:""}).setData(p[u]))});for(const p in t)t[p].addCallbackAndRun&&t[p].addCallbackAndRun(u=>{i.data["__"+p]!==u&&(i.data["__"+p]=""+u,i.ping())});return(d=(o=this._mapProperties)==null?void 0:o.rasterLayer)==null||d.addCallbackAndRun(p=>{var u;i.data.__current_background=(u=p==null?void 0:p.properties)==null?void 0:u.id,i.ping()}),i}};$(kt,"usersettingsConfig",kt.initUserSettingsState()),$(kt,"availableUserSettingsIds",((_o=(yo=kt.usersettingsConfig)==null?void 0:yo.tagRenderings)==null?void 0:_o.map(e=>e.id))??[]),$(kt,"SHOW_TAGS_VALUES",["always","yes","full"]);let to=kt;const b2=a=>({}),io=a=>({}),v2=a=>({}),no=a=>({}),k2=a=>({}),ro=a=>({});function so(a){let e,t,i,n;const r=[z2,w2,_2,y2],s=[];function o(d,p){return!d[1]&&!d[2]&&d[4]==="loading"?0:!d[2]&&d[4]==="error"?1:d[4]==="logged-in"?2:!d[2]&&d[4]==="not-attempted"?3:-1}return~(e=o(a))&&(t=s[e]=r[e](a)),{c(){t&&t.c(),i=ri()},m(d,p){~e&&s[e].m(d,p),ue(d,i,p),n=!0},p(d,p){let u=e;e=o(d),e===u?~e&&s[e].p(d,p):(t&&(_i(),ce(s[u],1,1,()=>{s[u]=null}),wi()),~e?(t=s[e],t?t.p(d,p):(t=s[e]=r[e](d),t.c()),ee(t,1),t.m(i.parentNode,i)):t=null)},i(d){n||(ee(t),n=!0)},o(d){ce(t),n=!1},d(d){~e&&s[e].d(d),d&&de(i)}}}function y2(a){let e;const t=a[12]["not-logged-in"],i=ut(t,a,a[11],io);return{c(){i&&i.c()},m(n,r){i&&i.m(n,r),e=!0},p(n,r){i&&i.p&&(!e||r&2048)&&dt(i,t,n,n[11],e?ht(t,n[11],r,b2):ft(n[11]),io)},i(n){e||(ee(i,n),e=!0)},o(n){ce(i,n),e=!1},d(n){i&&i.d(n)}}}function _2(a){let e;const t=a[12].default,i=ut(t,a,a[11],null);return{c(){i&&i.c()},m(n,r){i&&i.m(n,r),e=!0},p(n,r){i&&i.p&&(!e||r&2048)&&dt(i,t,n,n[11],e?ht(t,n[11],r,null):ft(n[11]),null)},i(n){e||(ee(i,n),e=!0)},o(n){ce(i,n),e=!1},d(n){i&&i.d(n)}}}function w2(a){let e;const t=a[12].error,i=ut(t,a,a[11],no),n=i||S2(a);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){i?i.p&&(!e||s&2048)&&dt(i,t,r,r[11],e?ht(t,r[11],s,v2):ft(r[11]),no):n&&n.p&&(!e||s&33)&&n.p(r,e?s:-1)},i(r){e||(ee(n,r),e=!0)},o(r){ce(n,r),e=!1},d(r){n&&n.d(r)}}}function z2(a){let e;const t=a[12].loading,i=ut(t,a,a[11],ro),n=i||j2();return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){i&&i.p&&(!e||s&2048)&&dt(i,t,r,r[11],e?ht(t,r[11],s,k2):ft(r[11]),ro)},i(r){e||(ee(n,r),e=!0)},o(r){ce(n,r),e=!1},d(r){n&&n.d(r)}}}function S2(a){let e,t,i,n,r,s,o,d,p,u,v,S,E;return i=new R0({props:{class:"m-2 h-8 w-8 shrink-0"}}),r=new ur({props:{t:a[9][a[5]]??a[8].loginFailedUnreachableMode}}),d=new r2({props:{class:"h-6 w-6"}}),u=new ur({props:{t:a[8].retry}}),{c(){e=Oa("div"),t=Oa("div"),qa(i.$$.fragment),n=Na(),qa(r.$$.fragment),s=Na(),o=Oa("button"),qa(d.$$.fragment),p=Na(),qa(u.$$.fragment),ge(t,"class","max-w-64 flex items-center"),ge(o,"class","h-fit"),ge(e,"class","alert flex flex-col items-center")},m(A,L){ue(A,e,L),Ve(e,t),Fa(i,t,null),Ve(t,n),Fa(r,t,null),Ve(e,s),Ve(e,o),Fa(d,o,null),Ve(o,p),Fa(u,o,null),v=!0,S||(E=Ae(o,"click",a[13]),S=!0)},p(A,L){const N={};L&32&&(N.t=A[9][A[5]]??A[8].loginFailedUnreachableMode),r.$set(N)},i(A){v||(ee(i.$$.fragment,A),ee(r.$$.fragment,A),ee(d.$$.fragment,A),ee(u.$$.fragment,A),v=!0)},o(A){ce(i.$$.fragment,A),ce(r.$$.fragment,A),ce(d.$$.fragment,A),ce(u.$$.fragment,A),v=!1},d(A){A&&de(e),Wa(i),Wa(r),Wa(d),Wa(u),S=!1,E()}}}function j2(a){let e,t;return e=new C0({}),{c(){qa(e.$$.fragment)},m(i,n){Fa(e,i,n),t=!0},i(i){t||(ee(e.$$.fragment,i),t=!0)},o(i){ce(e.$$.fragment,i),t=!1},d(i){Wa(e,i)}}}function A2(a){let e,t,i=a[3]&&so(a);return{c(){i&&i.c(),e=ri()},m(n,r){i&&i.m(n,r),ue(n,e,r),t=!0},p(n,[r]){n[3]?i?(i.p(n,r),r&8&&ee(i,1)):(i=so(n),i.c(),ee(i,1),i.m(e.parentNode,e)):i&&(_i(),ce(i,1,1,()=>{i=null}),wi())},i(n){t||(ee(i),t=!0)},o(n){ce(i),t=!1},d(n){i&&i.d(n),n&&de(e)}}}function x2(a,e,t){var I,T,q;let i,n,r,{$$slots:s={},$$scope:o}=e,{state:d}=e,{ignoreLoading:p=!1}=e,{silentFail:u=!1}=e,v=((I=d==null?void 0:d.osmConnection)==null?void 0:I.loadingStatus)??new Wt("logged-in");Hi(a,v,J=>t(4,n=J));let S=((T=d==null?void 0:d.featureSwitches)==null?void 0:T.featureSwitchEnableLogin)??new Wt(!0);Hi(a,S,J=>t(3,i=J));const E=Lr.t.general,A={offline:E.loginFailedOfflineMode,unreachable:E.loginFailedUnreachableMode,unknown:E.loginFailedUnreachableMode,readonly:E.loginFailedReadonlyMode},L=((q=d==null?void 0:d.osmConnection)==null?void 0:q.apiIsOnline)??new Wt("online");Hi(a,L,J=>t(5,r=J));const N=()=>d.osmConnection.AttemptLogin();return a.$$set=J=>{"state"in J&&t(0,d=J.state),"ignoreLoading"in J&&t(1,p=J.ignoreLoading),"silentFail"in J&&t(2,u=J.silentFail),"$$scope"in J&&t(11,o=J.$$scope)},[d,p,u,i,n,r,v,S,E,A,L,o,s,N]}class $2 extends Bt{constructor(e){super(),Et(this,e,x2,A2,Mt,{state:0,ignoreLoading:1,silentFail:2})}}function V2(a,e){let t;return e.current.map(i=>{a.setAttribute("placeholder",i)},[],i=>{t=i}),{destroy:t}}const zc={ca:"llengua àfar",cs:"afarština",de:"Afar",en:"Afar",eo:"afara lingvo",es:"idioma afar",eu:"Afarrera",fi:"afarin kieli",fr:"afar",gl:"Lingua afar",he:"עפרית",hu:"afar",id:"Bahasa Afar",it:"afar",ja:"アファル語",nb_NO:"afar",nl:"Afar",pl:"Język afar",pt:"Língua afar",pt_BR:"língua afar",ru:"афарский язык",sv:"afar",_meta:{dir:["left-to-right"]}},Sc={ca:"abkhaz",cs:"abcházština",da:"Abkhasisk",de:"Abchasisch",en:"Abkhaz",eo:"abĥaza lingvo",es:"abjasio",eu:"abkhazera",fi:"abhaasi",fr:"abkhaze",gl:"Lingua abkhaza",he:"אבחזית",hu:"abház",id:"Bahasa Abkhaz",it:"abcaso",ja:"アブハズ語",nb_NO:"abkhasisk",nl:"Abchazisch",pl:"język abchaski",pt:"Língua abecásia",pt_BR:"Língua abecásia",ru:"абхазский язык",sl:"Abhaščina",sv:"abchaziska",zh_Hans:"阿布哈兹语",zh_Hant:"阿布哈茲語",_meta:{countries:["GE"],dir:["left-to-right"]}},jc={ca:"abazí",cs:"abazština",da:"abazinsk",de:"Abasinisch",en:"Abaza",eo:"abaza lingvo",es:"abaza",eu:"abazera",fi:"Abazan kieli",fr:"abaza",gl:"Lingua abaza",he:"אבזית",hu:"abaza",id:"Bahasa Abaza",it:"lingua abazina",ja:"アバザ語",nb_NO:"abazinsk",nl:"Abazijns",pl:"Język abazyński",pt:"Língua abaza",pt_BR:"Língua abaza",ru:"абазинский язык",sv:"abazinska",zh_Hans:"阿巴扎语",zh_Hant:"阿巴扎語",_meta:{dir:["left-to-right"]}},Ac={ca:"àrab mesopotàmic",de:"Irakisch-Arabisch",en:"Mesopotamian Arabic",eo:"Mezopotamia araba dialekto",es:"árabe mesopotámico",fr:"arabe mésopotamien",id:"Bahasa Arab Mesopotamia",ja:"アラビア語イラク方言",nl:"Mesopotamisch-Arabisch",pl:"Dialekty mezopotamskie języka arabskiego",pt:"Árabe iraquiano",pt_BR:"Árabe iraquiano",ru:"иракский диалект арабского языка",sl:"mezopotamska arabščina",sv:"irakisk arabiska",_meta:{dir:["right-to-left"]}},xc={en:"Amdo Tibetan",fr:"tibétain de l'Amdo",hu:"amdói tibeti",ja:"アムド・チベット語",pl:"Język amdo",pt:"Tibetano Amdo",ru:"амдо",sv:"ambdotibetanska",_meta:{dir:["left-to-right"]}},Bc={ca:"adigué",cs:"adygejština",de:"Adygeisch",en:"Adyghe",eo:"adigea lingvo",es:"adigués",eu:"adigera",fi:"adygen kieli",fr:"adyguéen",gl:"Lingua adigue",he:"אדיגית",hu:"adigei",id:"bahasa Adyghe",it:"adighè",ja:"アディゲ語",nb_NO:"adygeisk",nl:"Adygees",pl:"język adygejski",pt:"língua adigue",ru:"адыгейский язык",sl:"adigejščina",sv:"adygeiska",zh_Hans:"阿迪格语",zh_Hant:"阿迪格語",_meta:{dir:["left-to-right","right-to-left"]}},Ec={ca:"àrab tunisià",cs:"tuniština",da:"Tunesisk arabisk",de:"Tunesisch-Arabisch",en:"Tunisian Arabic",eo:"tunizia araba lingvo",es:"árabe tunecino",fi:"tunisianarabia",fr:"arabe tunisien",he:"ערבית תוניסאית",id:"Bahasa Arab Tunisia",it:"arabo tunisino",ja:"アラビア語チュニジア方言",nb_NO:"tunisisk arabisk",nl:"Tunesisch-Arabisch",pl:"tunezyjski",pt:"árabe tunisino",pt_BR:"Árabe tunisino",ru:"Тунисский диалект арабского языка",sl:"tunizijska arabščina",sv:"tunisisk arabiska",zh_Hans:"突尼斯阿拉伯语",zh_Hant:"突尼西亞阿拉伯語",_meta:{dir:["left-to-right","right-to-left"]}},Mc={ca:"afrikaans",cs:"afrikánština",da:"afrikaans",de:"Afrikaans",en:"Afrikaans",eo:"afrikansa lingvo",es:"afrikáans",eu:"afrikaans",fi:"afrikaans",fr:"afrikaans",gl:"Lingua africáner",he:"אפריקאנס",hu:"afrikaans",id:"Afrikaans",it:"afrikaans",ja:"アフリカーンス語",nb_NO:"afrikaans",nl:"Afrikaans",pl:"język afrikaans",pt:"língua africâner",pt_BR:"língua africâner",ru:"африкаанс",sl:"afrikanščina",sv:"afrikaans",zh_Hans:"南非语",zh_Hant:"南非語",_meta:{countries:["ZA"],dir:["left-to-right"]}},Lc={ca:"aghem",de:"Aghem",en:"Aghem",es:"aghem",fr:"aghem",gl:"Lingua aghem",he:"אגחם",ja:"アゲム語",nl:"Aghem",sv:"aghem",_meta:{dir:["left-to-right"]}},Rc={ca:"àrab llevantí",cs:"levantská arabština",de:"levantinisches Arabisch",en:"Levantine Arabic",eo:"Levantenia araba dialekto",es:"árabe levantino",fr:"arabe levantin",he:"ערבית לבנטינית",id:"Arab Syam",it:"lingue arabe levantine",ja:"アラビア語レバント方言",nl:"Levantijns-Arabisch",pl:"dialekty syryjsko-palestyńskie języka arabskiego",pt:"Árabe levantino",ru:"Левантийский диалект арабского языка",sl:"levantinska arabščina",sv:"nordlevantinsk arabiska",_meta:{dir:["right-to-left","left-to-right"]}},Hc={ca:"àkan",cs:"akanština",de:"Akan",en:"Akan",eo:"akanaj lingvoj",es:"lenguas akánicas",fi:"akanin kieli",fr:"akan",gl:"Lingua akan",he:"אקאן",hu:"akan",it:"akan",ja:"アカン語",nb_NO:"akan",nl:"Akan",pl:"język akan",pt:"língua akan",pt_BR:"língua akan",ru:"акан",sv:"akan",zh_Hans:"阿肯语",zh_Hant:"阿寒語",_meta:{dir:["left-to-right"]}},Cc={ca:"aklanon",da:"aklansk",de:"Akeanon",en:"Aklanon",eo:"aklana lingvo",es:"aclano",eu:"aklanera",fi:"Aklanon",fr:"aklanon",gl:"Lingua aklanon",id:"bahasa Akyan",it:"lingua Aklan",ja:"アクラノン語",pl:"Język aklanon",pt:"Língua aklan",sv:"aklan",_meta:{dir:["left-to-right"]}},Oc={ca:"alibamu",de:"Alabama",en:"Alabama",eo:"alabama lingvo",es:"Idioma alabama",eu:"Alabama hizkuntza",fr:"alabama",gl:"Lingua alabama",it:"lingua alabama",ja:"アラバマ語",nb_NO:"Alabama",nl:"Alabama",pl:"język alabama",ru:"Алабамский язык",sv:"alabama",_meta:{dir:["left-to-right"]}},Nc={ca:"gheg",cs:"gegština",da:"gegisk",de:"Gegisch",en:"Gheg Albanian",eo:"geg-albana lingvo",es:"Albanés guego",eu:"gheg albaniera",fr:"guègue",hu:"geg albán",it:"lingua albanese ghega",ja:"ゲグ方言",nb_NO:"Gegisk",nl:"Gegisch",pl:"Dialekt gegijski języka albańskiego",ru:"гегский диалект албанского языка",sl:"gegovščina",sv:"gegiska",zh_Hans:"盖格方言",zh_Hant:"蓋格方言",_meta:{dir:["left-to-right"]}},Ic={ca:"alemany suís",cs:"švýcarská němčina",da:"schweizertysk",de:"Schweizerdeutsch",en:"Swiss German",eo:"svisgermana lingvo",es:"alemán de Suiza",fi:"sveitsinsaksa",fr:"suisse allemand",gl:"Lingua alemá de Suíza",he:"גרמנית שווייצרית",hu:"svájci német",id:"Jerman Swiss",it:"svizzero tedesco",ja:"スイスドイツ語",nb_NO:"sveitsertysk",nl:"Zwitserduits",pl:"gwary schwyzertüütsch",pt:"suíço-alemão",ru:"швейцарский диалект",sl:"švicarska nemščina",sv:"schweizertyska",zh_Hans:"瑞士德语",zh_Hant:"瑞士德語",_meta:{dir:["left-to-right"]}},Pc={ca:"altaic meridional",de:"Südaltaisch",en:"Southern Altai",eo:"sudaltaja lingvo",fr:"altaï méridional",gl:"Lingua altai meridional",he:"אלטאית דרומית",it:"lingua altai meridionale",ja:"南アルタイ語",nb_NO:"Søraltaisk",nl:"Zuid-Altajs",ru:"aлтайский язык",sv:"sydaltaiska",zh_Hant:"南阿爾泰語",_meta:{dir:["left-to-right"]}},Tc={ca:"amhàric",cs:"amharština",da:"amharisk",de:"Amharisch",en:"Amharic",eo:"amhara lingvo",es:"amhárico",eu:"Amharera",fi:"amharan kieli",fr:"amharique",gl:"Lingua amhárica",he:"אמהרית",hu:"amhara",id:"Bahasa Amhar",it:"amarico",ja:"アムハラ語",nb_NO:"amharisk",nl:"Amhaars",pl:"język amharski",pt:"Língua amárica",pt_BR:"língua amárica",ru:"амхарский язык",sl:"amharščina",sv:"amhariska",zh_Hans:"阿姆哈拉语",zh_Hant:"阿姆哈拉語",_meta:{countries:["ET"],dir:["left-to-right"]}},Kc={ca:"amis",de:"Amisisch",en:"Amis",es:"idioma amis",fi:"Amisin kieli",fr:"amis",gl:"Lingua amis",id:"Bahasa Amis",it:"lingua amis",ja:"アミ語",nl:"Amis",pl:"Język amis",pt:"língua amis",ru:"амисский язык",sv:"amis",zh_Hans:"阿美语",zh_Hant:"阿美語",_meta:{dir:["left-to-right"]}},Dc={ca:"aragonès",cs:"aragonština",da:"aragonsk",de:"Aragonesisch",en:"Aragonese",eo:"aragona lingvo",es:"aragonés",eu:"aragoiera",fi:"aragonia",fr:"aragonais",gl:"Lingua aragonesa",he:"אראגונית",hu:"aragóniai",id:"Bahasa Aragon",it:"aragonese",ja:"アラゴン語",nb_NO:"aragonesisk",nl:"Aragonees",pl:"język aragoński",pt:"Língua aragonesa",pt_BR:"Língua aragonesa",ru:"арагонский язык",sl:"aragonščina",sv:"aragonska",zh_Hans:"阿拉贡语",zh_Hant:"亞拉岡語",_meta:{dir:["left-to-right"]}},Uc={cs:"angština",de:"Angika",en:"Angika",eo:"angika",es:"Idioma angika",fi:"Angika",fr:"angika",gl:"Lingua angika",it:"lingua angika",ja:"アンギカ語",nl:"Angika",pt:"Língua angika",ru:"ангика",sv:"angika",zh_Hans:"昂加语",zh_Hant:"昂加語",_meta:{dir:["left-to-right"]}},Jc={ca:"arekuna",de:"Pemón",en:"Pemon",eo:"pemona lingvo",es:"Idioma pemón",fr:"pemon",it:"pemon",ja:"ペモン語",nb_NO:"Pemón",nl:"Pemón",pt:"Língua taurepangue",pt_BR:"Língua taurepangue",ru:"Пемонский язык",sv:"pemon",_meta:{dir:["left-to-right"]}},qc={ca:"àrab llevantí",cs:"levantská arabština",de:"levantinisches Arabisch",en:"Levantine Arabic",eo:"Levantenia araba dialekto",es:"árabe levantino",fr:"arabe levantin",he:"ערבית לבנטינית",id:"Arab Syam",it:"lingue arabe levantine",ja:"アラビア語レバント方言",nl:"Levantijns-Arabisch",pl:"dialekty syryjsko-palestyńskie języka arabskiego",pt:"Árabe levantino",ru:"Левантийский диалект арабского языка",sl:"levantinska arabščina",sv:"nordlevantinsk arabiska",_meta:{dir:["right-to-left","left-to-right"]}},Fc={ca:"àrab",cs:"arabština",da:"arabisk",de:"Arabisch",en:"Arabic",eo:"araba lingvo",es:"árabe",eu:"arabiera",fi:"arabia",fr:"arabe",gl:"árabe",he:"ערבית",hu:"arab",id:"bahasa Arab",it:"arabo",ja:"アラビア語",nb_NO:"arabisk",nl:"Arabisch",pl:"język arabski",pt:"árabe",pt_BR:"árabe",ru:"арабский язык",sl:"arabščina",sv:"arabiska",zh_Hans:"阿拉伯语",zh_Hant:"阿拉伯語",_meta:{countries:["AE","AF","BH","DJ","DZ","EG","ER","IQ","JO","KM","KW","LB","LY","MA","MR","OM","PS","QA","SA","SD","SO","SS","SY","TD","TN","YE"],dir:["right-to-left"]}},Wc={ca:"mapudungun",cs:"mapučština",da:"Mapudungun",de:"Mapudungun",en:"Mapudungun",eo:"mapuĉa lingvo",es:"mapuche",eu:"Mapudungun",fi:"mapudungun",fr:"mapudungun",gl:"Lingua mapuche",he:"מאפודונגון",id:"Bahasa Mapuche",it:"mapudungun",ja:"マプチェ語",nb_NO:"Mapudungun",nl:"Mapudungun",pl:"Język mapudungun",pt:"mapudungun",ru:"мапуче",sl:"Mapudungun",sv:"mapudungun",zh_Hans:"马普切语",zh_Hant:"馬普切語",_meta:{dir:["left-to-right"]}},Gc={ca:"àrab algerià",da:"Algerisk arabisk",de:"Algerisch-Arabisch",en:"Algerian Arabic",eo:"alĝeria araba lingvo",es:"árabe argelino",eu:"aljeriar arabiera",fi:"algerianarabia",fr:"arabe algérien",gl:"Árabe alxeriano",hu:"algériai arab",id:"Bahasa Arab Aljazair",it:"arabo algerino",ja:"アラビア語アルジェリア方言",nb_NO:"algerisk-arabisk",nl:"Algerijns-Arabisch",pt:"árabe argelino",ru:"Алжирский диалект арабского языка",sl:"alžirska arabščina",sv:"algerisk arabiska",zh_Hant:"阿爾及利亞阿拉伯語",_meta:{dir:["right-to-left"]}},$c={ca:"àrab marroquí",cs:"Marocká arabština",da:"Marokkansk arabisk",de:"Marokkanisch-Arabisch",en:"Moroccan Darija",eo:"maroka araba lingvo",es:"árabe marroquí",eu:"marokoar arabiera",fi:"marokonarabia",fr:"Darija marocain",gl:"árabe marroquí",he:"ערבית מרוקאית",id:"Bahasa Arab Maroko",it:"arabo marocchino",ja:"アラビア語モロッコ方言",nb_NO:"marokkansk-arabisk",nl:"Marokkaans-Arabisch",pl:"marokańska odmiana języka arabskiego",pt:"Árabe marroquino",ru:"Марокканский диалект арабского языка",sl:"maroška arabščina",sv:"marockansk arabiska",zh_Hant:"摩洛哥阿拉伯語",_meta:{dir:["right-to-left"]}},Vc={ca:"àrab egipci",cs:"egyptská arabština",da:"egyptisk arabisk",de:"Ägyptisch-Arabisch",en:"Egyptian Arabic",eo:"egipt-araba lingvo",es:"árabe egipcio",eu:"egiptoar arabiera",fi:"egyptinarabia",fr:"arabe égyptien",gl:"Árabe exipcio",he:"ערבית מצרית",hu:"egyiptomi arab",id:"bahasa Arab Mesir",it:"arabo egiziano",ja:"アラビア語エジプト方言",nb_NO:"egyptisk arabisk",nl:"Egyptisch-Arabisch",pl:"dialekt egipski języka arabskiego",pt:"árabe egípcio",pt_BR:"Árabe egípcio",ru:"египетский диалект арабского языка",sl:"egiptovska arabščina",sv:"egyptisk arabiska",zh_Hant:"埃及阿拉伯語",_meta:{dir:["right-to-left"]}},Zc={ca:"assamès",cs:"ásámština",da:"assamesisk",de:"Assamesisch",en:"Assamese",eo:"asama lingvo",es:"asamés",eu:"assamera",fi:"assami",fr:"assamais",gl:"Lingua asamesa",he:"אסאמית",hu:"asszámi",id:"bahasa Assam",it:"assamese",ja:"アッサム語",nb_NO:"assamesisk",nl:"Assamees",pl:"język asamski",pt:"língua assamesa",ru:"ассамский язык",sl:"asamščina",sv:"assamesiska",zh_Hant:"阿薩姆語",_meta:{dir:["left-to-right"]}},Yc={ca:"llengua de signes americana",cs:"americký znakový jazyk",da:"ASL",de:"American Sign Language",en:"American Sign Language",eo:"usona signolingvo",es:"lengua de señas estadounidense",eu:"amerikar keinu hizkuntza",fi:"amerikkalainen viittomakieli",fr:"langue des signes américaine",gl:"lingua de signos americana",he:"שפת הסימנים האמריקאית",id:"Bahasa Isyarat Amerika",it:"lingua dei segni americana",ja:"アメリカ手話",nb_NO:"amerikansk tegnspråk",nl:"Amerikaanse Gebarentaal",pl:"amerykański język migowy",pt:"língua de sinais americana",pt_BR:"língua de sinais americana",ru:"амслен",sv:"amerikanskt teckenspråk",zh_Hant:"美國手語",_meta:{dir:["left-to-right","vertical left-to-right"]}},Xc={ca:"asturià",cs:"asturština",da:"asturiansk",de:"Asturisch",en:"Asturian",eo:"astura lingvo",es:"asturiano",eu:"asturiera",fi:"asturia",fr:"asturien",gl:"lingua asturiana",he:"אסטורית",hu:"asztúriai",id:"Bahasa Asturia",it:"asturiano",ja:"アストゥリアス語",nb_NO:"asturiansk",nl:"Asturisch",pl:"język asturyjski",pt:"asturiano",pt_BR:"Língua asturiana",ru:"астурийский язык",sl:"asturijščina",sv:"asturiska",zh_Hans:"阿斯图里亚斯语",zh_Hant:"阿斯圖里亞斯語",_meta:{dir:["left-to-right"]}},Qc={ca:"atikamekw",cs:"atikamekština",de:"Atikamekw",en:"Atikamekw",es:"atikamekw",fi:"Atikamekw",fr:"atikamekw",gl:"Lingua atikamekw",it:"lingua atikamekw",ja:"アティカメク語",nb_NO:"atikamekw",nl:"Atikamekw",pt:"Língua atikamekw",ru:"aтикамек",sv:"atikamekw",zh_Hans:"阿提卡米克语",zh_Hant:"阿提卡米克語",_meta:{dir:["left-to-right"]}},eu={ca:"àvar",cs:"avarština",de:"Awarisch",en:"Avar",eo:"avara lingvo",es:"avar",eu:"avarera",fi:"Avaarin kieli",fr:"avar",gl:"Lingua avar",he:"אווארית",hu:"avar",id:"Bahasa Avar",it:"avaro",ja:"アヴァル語",nb_NO:"avarisk",nl:"Avaars",pl:"język awarski",pt:"Língua avar",ru:"аварский язык",sl:"Avarščina",sv:"avariska",_meta:{dir:["left-to-right"]}},au={ca:"Avadhi",de:"Awadhi",en:"Awadhi",eo:"avadhia",es:"awadhi",eu:"Awadhiera",fi:"Awadhin kieli",fr:"awadhi",gl:"Lingua awadhi",he:"אוודהית",id:"Bahasa Awadhi",it:"awadhi",ja:"アワディー語",nb_NO:"Awadhi",nl:"Awadhi",pl:"Awadhi",pt:"Língua awadhi",pt_BR:"Língua awadhi",ru:"авадхи",sv:"awadhi",zh_Hans:"阿瓦德语",zh_Hant:"阿瓦德語",_meta:{dir:["left-to-right"]}},tu={ca:"aimara",cs:"ajmarština",da:"Aymara",de:"Aymara",en:"Aymara",eo:"ajmara lingvo",es:"aymara",eu:"Aimara",fi:"aimara",fr:"aymara",gl:"Lingua aimará",he:"איימרה",hu:"ajmara",id:"Bahasa Aymara",it:"aymara",ja:"アイマラ語",nb_NO:"aymara",nl:"Aymara",pl:"język ajmara",pt:"Língua aymará",pt_BR:"Língua aimará",ru:"аймара",sl:"Ajmarščina",sv:"aymara",zh_Hans:"艾马拉语",zh_Hant:"艾馬拉語",_meta:{countries:["BO","PE"],dir:["left-to-right"]}},iu={ca:"àzeri",cs:"ázerbájdžánština",da:"aserbajdsjansk",de:"Aserbaidschanisch",en:"Azerbaijani",eo:"azerbajĝana lingvo",es:"azerí",eu:"azerbaijanera",fi:"azeri",fr:"azéri",gl:"Lingua azerí",he:"אזרית",hu:"azeri",id:"Bahasa Azeri",it:"azero",ja:"アゼルバイジャン語",nb_NO:"aserbajdsjansk",nl:"Azerbeidzjaans",pl:"język azerski",pt:"Língua azeri",pt_BR:"língua azeri",ru:"азербайджанский язык",sl:"azerbajdžanščina",sv:"azerbajdzjanska",zh_Hans:"阿塞拜疆语",zh_Hant:"亞塞拜然語",_meta:{countries:["AZ"],dir:["right-to-left","left-to-right"]}},nu={ca:"baixkir",cs:"baškirština",da:"basjkirsk",de:"Baschkirisch",en:"Bashkir",eo:"baŝkira lingvo",es:"bashkir",eu:"Baxkirera",fi:"baškiiri",fr:"bachkir",gl:"Lingua baskir",he:"בשקירית",hu:"baskír",id:"Bahasa Bashkir",it:"baschiro",ja:"バシキール語",nb_NO:"basjkirsk",nl:"Basjkiers",pl:"język baszkirski",pt:"Língua bashkir",pt_BR:"Língua bashkir",ru:"башкирский язык",sl:"Baškirščina",sv:"basjkiriska",zh_Hans:"巴什基尔语",zh_Hant:"巴什基爾語",_meta:{dir:["left-to-right"]}},ru={ca:"balinès",cs:"balijština",da:"balinesisk",de:"Balinesisch",en:"Balinese",eo:"balia lingvo",es:"balinés",eu:"baliera",fi:"Balin kieli",fr:"balinais",gl:"Lingua balinesa",he:"באלינזית",id:"Bahasa Bali",it:"balinese",ja:"バリ語",nb_NO:"balinesisk",nl:"Balinees",pl:"język balijski",pt:"balinês",pt_BR:"Língua balinesa",ru:"Балийский язык",sl:"balijščina",sv:"balinesiska",zh_Hans:"巴厘语",zh_Hant:"峇里語",_meta:{dir:["left-to-right"]}},su={ca:"bavarès",cs:"bavorština",da:"Bajersk",de:"Bairisch",en:"Bavarian",eo:"bavara lingvo",es:"bávaro",eu:"Bavariera",fi:"Baijerin kieli",fr:"bavarois",gl:"Lingua bavaresa",he:"בווארית",hu:"bajor",id:"Bahasa Bayern",it:"bavarese",ja:"バイエルン・オーストリア語",nb_NO:"bairisk",nl:"Beiers",pl:"dialekt bawarski",pt:"língua bávara",ru:"австро-баварский язык",sl:"bavarščina",sv:"bayerska",zh_Hans:"奥地利-巴伐利亚德语",zh_Hant:"奧地利-巴伐利亞德語",_meta:{dir:["left-to-right"]}},ou={ca:"Batak Toba",cs:"Batak Toba",da:"Batak Toba",de:"Toba Batak",en:"Toba Batak",eo:"Batak Toba",es:"Batak Toba",eu:"Batak Toba",fi:"Batak Toba",fr:"batak toba",gl:"Lingua toba batak",hu:"Batak Toba",id:"Bahasa Batak Toba",it:"lingua batak toba",ja:"バタク・トバ語",nb_NO:"Batak Toba",nl:"Batak Toba",pl:"język batak toba",pt:"Batak Toba",pt_BR:"Batak Toba",ru:"Тоба",sl:"Batak Toba",sv:"toba batak",_meta:{dir:["left-to-right"]}},lu={de:"West Coast Bajau",en:"West Coast Bajau",fr:"bajau de la côte occidentale",gl:"Lingua bajaw da costa occidental",nb_NO:"vestkystbajau",nl:"Westkust-Bajau",ru:"баджо западного побережья",sv:"västkustbajau",_meta:{dir:["left-to-right"]}},cu={ca:"llengua beja",de:"Bedscha",en:"Beja",eo:"beĝaa lingvo",es:"Idioma beya",eu:"Bedawi hizkuntza",fi:"Bedžan kieli",fr:"bedja",id:"Bahasa Beja",it:"begia",ja:"ベジャ語",nb_NO:"Beja",nl:"Beja",pl:"Język bedża",pt:"Língua beja",ru:"Беджа",sl:"bedščina",sv:"beja",_meta:{dir:["right-to-left","left-to-right"]}},uu={ca:"llengau de signes britànica",cs:"britský znakový jazyk",de:"Britische Gebärdensprache",en:"British Sign Language",eo:"brita signolingvo",es:"lengua de señas británica",fi:"brittiläinen viittomakieli",fr:"langue des signes britannique",he:"שפת הסימנים הבריטית",id:"Bahasa Isyarat Britania",it:"lingua dei segni britannica",ja:"イギリス手話",nb_NO:"britisk tegnspråk",nl:"Britse gebarentaal",pl:"brytyjski język migowy",pt:"língua de sinais britânica",ru:"британский жестовый язык",sv:"brittiskt teckenspråk",_meta:{dir:["left-to-right","vertical left-to-right"]}},du={ca:"badaga",de:"Badaga",en:"Badaga",fi:"Badagan kieli",fr:"badaga",he:"באדאגה",id:"Bahasa Badaga",it:"lingua badaga",ja:"バダガ語",nl:"Badaga",pl:"Język badaga",pt:"Língua badaga",pt_BR:"Língua badaga",sv:"badaga",_meta:{dir:["left-to-right"]}},fu={ca:"búlgar",cs:"bulharština",da:"bulgarsk",de:"Bulgarisch",en:"Bulgarian",eo:"bulgara lingvo",es:"búlgaro",eu:"bulgariera",fi:"bulgaria",fr:"bulgare",gl:"lingua búlgara",he:"בולגרית",hu:"bolgár",id:"bahasa Bulgaria",it:"bulgaro",ja:"ブルガリア語",nb_NO:"bulgarsk",nl:"Bulgaars",pl:"język bułgarski",pt:"língua búlgara",pt_BR:"língua búlgara",ru:"болгарский язык",sl:"bolgarščina",sv:"bulgariska",zh_Hans:"保加利亚语",zh_Hant:"保加利亞語",_meta:{countries:["BG"],dir:["left-to-right"]}},hu={ca:"bhojpuri",cs:"bhódžpurština",da:"Bhojpuri",de:"Bhojpuri",en:"Bhojpuri",eo:"bhojpura lingvo",es:"Idioma bopurí",eu:"bhojpuri",fi:"Bhodžpurin kieli",fr:"bhodjpouri",gl:"Lingua bhojpuri",he:"בוג'פורית",hu:"bhódzspurí",id:"bahasa Bhojpuri",it:"bhojpuri",ja:"ボージュプリー語",nb_NO:"Bhojpuri",nl:"Bhojpuri",pl:"język bhodźpuri",pt:"Língua bhojpuri",ru:"бходжпури",sv:"bhojpuri",zh_Hans:"博杰普尔语",zh_Hant:"博杰普爾語",_meta:{dir:["left-to-right"]}},pu={ca:"bhojpuri",cs:"bhódžpurština",da:"Bhojpuri",de:"Bhojpuri",en:"Bhojpuri",eo:"bhojpura lingvo",es:"Idioma bopurí",eu:"bhojpuri",fi:"Bhodžpurin kieli",fr:"bhodjpouri",gl:"Lingua bhojpuri",he:"בוג'פורית",hu:"bhódzspurí",id:"bahasa Bhojpuri",it:"bhojpuri",ja:"ボージュプリー語",nb_NO:"Bhojpuri",nl:"Bhojpuri",pl:"język bhodźpuri",pt:"Língua bhojpuri",ru:"бходжпури",sv:"bhojpuri",zh_Hans:"博杰普尔语",zh_Hant:"博杰普爾語",_meta:{dir:["left-to-right"]}},gu={ca:"bislama",cs:"bislamština",de:"Bislama",en:"Bislama",eo:"bislama lingvo",es:"Bislama",eu:"Bislama",fi:"Bislama",fr:"bichelamar",gl:"Bislama",he:"ביסלמה",hu:"biszlama",id:"Bahasa Bislama",it:"bislama",ja:"ビスラマ語",nb_NO:"bislama",nl:"Bislama",pl:"język bislama",pt:"Língua bislamá",ru:"бислама",sl:"bislamščina",sv:"bislama",_meta:{countries:["VU"],dir:["left-to-right","boustrophedon"]}},mu={ca:"blackfoot",de:"Blackfoot",en:"Blackfoot",eo:"nigrapieda lingvo",es:"Idioma siksiká",fi:"Mustajalka",fr:"pied-noir",gl:"Lingua siksiká",he:"שפת בלאקפוט",id:"Bahasa Blackfoot",it:"lingua blackfoot",ja:"ブラックフット語",nb_NO:"blackfoot",nl:"Blackfoot",pl:"język siksika",pt:"Língua Siksiká",ru:"блэкфут",sv:"siksika",zh_Hans:"黑脚语",_meta:{dir:["left-to-right"]}},bu={ca:"bàmbara",cs:"bambarština",da:"Bambara",de:"Bambara",en:"Bambara",eo:"bambara lingvo",es:"bambara",eu:"Banbara hizkuntza",fi:"bambaran kieli",fr:"bambara",gl:"Lingua bambara",he:"במברה",hu:"bambara",id:"Bahasa Bambara",it:"Bambara",ja:"バンバラ語",nb_NO:"bambara",nl:"Bambara",pl:"język bambara",pt:"Língua bambara",ru:"бамана",sv:"bambara",_meta:{countries:["ML"],dir:["left-to-right","right-to-left"]}},vu={ca:"bengalí",cs:"bengálština",da:"bengali",de:"Bengalisch",en:"Bangla",eo:"bengala lingvo",es:"bengalí",eu:"bengalera",fi:"bengali",fr:"bengali",gl:"lingua bengalí",he:"בנגלית",hu:"bengáli",id:"Bahasa Bengali",it:"bengali",ja:"ベンガル語",nb_NO:"bengali",nl:"Bengaals",pl:"język bengalski",pt:"língua bengali",pt_BR:"língua bengali",ru:"бенгальский язык",sl:"bengalščina",sv:"bengali",zh_Hans:"孟加拉语",zh_Hant:"孟加拉語",_meta:{countries:["BD"],dir:["left-to-right"]}},ku={ca:"bunun",en:"Bunun",eu:"bununera",fi:"bununin kieli",fr:"bunun",id:"Bahasa Bunun",it:"lingua bunun",ja:"ブヌン語",nl:"Bunun",pl:"Język bunun",pt:"Língua bunun",ru:"Бунун",sv:"bunun",zh_Hant:"布農語",_meta:{dir:["left-to-right"]}},yu={ca:"tibetà",cs:"tibetština",da:"tibetansk",de:"Tibetisch",en:"Tibetan",eo:"tibeta lingvo",es:"tibetano",eu:"Tibetera",fi:"tiibetin kieli",fr:"tibétain",gl:"Lingua tibetana",he:"טיבטית",hu:"tibeti",id:"bahasa Tibet Lhasa",it:"tibetano",ja:"チベット語",nb_NO:"tibetansk",nl:"Tibetaans",pl:"język tybetański",pt:"Língua tibetana",pt_BR:"Língua tibetana",ru:"тибетский язык",sl:"tibetanščina",sv:"tibetanska",_meta:{dir:["left-to-right"]}},_u={ca:"bishnupriya manipuri",cs:"bišnuprijskomanipurština",de:"Bishnupriya Manipuri",en:"Bishnupriya Manipuri",eo:"biŝnuprija manipura lingvo",es:"Bishnupriya manipurí",fi:"Bishnupriya Manipuri",fr:"manipourî de Bishnupriyay",gl:"Lingua bishnupriya manipuri",he:"בישנופרייה מניפורי",id:"Bahasa Bishnupriya Manipuri",it:"Bishnupriya Manipuri",ja:"ビシュヌプリヤ・マニプリ語",nb_NO:"bishnupriya manipuri",nl:"Bishnupriya Manipuri",pl:"Język bisznuprija-manipuri",pt:"Bishnupriya Manipuri",ru:"Бишнуприя-манипури",sv:"bishnupriya manipuri",zh_Hans:"比什努普里亚-曼尼普尔语",zh_Hant:"比什努普里亞-曼尼普爾語",_meta:{dir:["left-to-right"]}},wu={de:"Bachtiarisch",en:"Bakhtiari",fr:"bakhtiari",it:"dialetto Bakhtiari-Hakhamanesh",ja:"バフティヤーリー語",nl:"Bachtiarisch",pl:"Język bachtiarski",ru:"Бахтиярский язык",sv:"bakhtiari",zh_Hans:"巴赫蒂亚语",zh_Hant:"巴赫蒂亞語",_meta:{dir:["right-to-left"]}},zu={ca:"bretó",cs:"bretonština",da:"bretonsk",de:"Bretonisch",en:"Breton",eo:"bretona lingvo",es:"bretón",eu:"Bretainiera",fi:"bretoni",fr:"breton",gl:"lingua bretoa",he:"ברטונית",hu:"breton",id:"Bahasa Breton",it:"bretone",ja:"ブルトン語",nb_NO:"bretonsk",nl:"Bretons",pl:"język bretoński",pt:"bretão",pt_BR:"língua bretã",ru:"бретонский язык",sl:"bretonščina",sv:"bretonska",zh_Hans:"布列塔尼语",zh_Hant:"布列塔尼語",_meta:{dir:["left-to-right"]}},Su={ca:"bodo",cs:"jazyk Bodo",de:"Bodo",en:"Bodo",eo:"bodoa lingvo",es:"Idioma bodo",fi:"Bodon kieli",fr:"bodo",he:"בודו",id:"Bahasa Bodo",it:"bodo",ja:"ボド語",nb_NO:"Bodo",nl:"Boro",pl:"Język bodo",pt:"Língua bodo",ru:"Бодо",sv:"bodo",_meta:{dir:["left-to-right"]}},ju={ca:"abinomn",cs:"abinomn",en:"Abinomn",es:"Idioma abinomn",fi:"Abinomn",fr:"abinomn",gl:"Lingua abinomn",id:"Abinomn",ja:"アビノムン語",nl:"Abinomn",pl:"Język abinomn",ru:"абиномн",sl:"abinomn",sv:"abinomn",_meta:{dir:["left-to-right"]}},Au={ca:"buruixaski",cs:"Burušaskí",da:"Burushaski",de:"Burushaski",en:"Burushaski",eo:"buruŝa lingvo",es:"Idioma burushaski",eu:"Buruxaski",fi:"Burušaskin kieli",fr:"bourouchaski",gl:"Lingua burushaski",he:"בורושסקי",hu:"burusaszki",id:"Bahasa Burushaski",it:"lingua burushaski",ja:"ブルシャスキー語",nl:"Burushaski",pl:"Język buruszaski",pt:"língua burushaski",ru:"Бурушаски",sv:"burushaski",zh_Hans:"布鲁夏斯基语",zh_Hant:"布魯夏斯基語",_meta:{dir:["left-to-right"]}},xu={ca:"akoose",de:"Akoose",en:"Kose",fi:"Koose",fr:"akoose",gl:"Lingua akoose",ja:"アコース語",nl:"Bakossi",sv:"akoose",_meta:{dir:["left-to-right"]}},Bu={cs:"Mandailing",en:"Mandailing",fr:"batak mandailing",id:"Bahasa Mandailing",ja:"バタク・マンダイリン語",nl:"Batak Mandailing",pl:"język batak mandailing",ru:"мандайлингский язык",sv:"mandailing",zh_Hans:"曼代灵语",zh_Hant:"曼代靈語",_meta:{dir:["left-to-right"]}},Eu={ca:"bugui",cs:"bugijština",de:"Buginesisch",en:"Bugis",eo:"buĝia lingvo",es:"idioma buguinés",fi:"Bugin kieli",fr:"bouguinais",gl:"Lingua bugi",hu:"bugisz",id:"Bugis",it:"lingua buginese",ja:"ブギス語",nb_NO:"Buginesisk",nl:"Boeginees",pl:"język bugijski",pt:"Língua buginesa",ru:"бугийский язык",sl:"buginščina",sv:"buginesiska",_meta:{dir:["left-to-right"]}},Mu={ca:"buriat",cs:"burjatština",de:"Burjatisch",en:"Buryat",eo:"burjata lingvo",es:"idioma buriato",eu:"Buriatera",fi:"Burjaatin kieli",fr:"bouriate",gl:"Lingua buriata",he:"בוריאטית",hu:"burját",id:"bahasa Buryat",it:"buriato",ja:"ブリヤート語",nb_NO:"burjatisk",nl:"Boerjatisch",pl:"język buriacki",pt:"Língua buriata",pt_BR:"Língua buriata",ru:"бурятский язык",sv:"burjatiska",zh_Hant:"布里亞特語",_meta:{dir:["left-to-right","vertical left-to-right"]}},Lu={ca:"llengua de signes brasilera",da:"brasiliansk tegnsprog",de:"Brasilianische Gebärdensprache",en:"Brazilian Sign Language",eo:"brazila signolingvo",es:"lengua de señas brasileña",fr:"langue des signes brésilienne",he:"שפת הסימנים הברזילאית",id:"Bahasa Isyarat Brasil",it:"lingua dei segni brasiliana",ja:"ブラジル手話",nb_NO:"brasiliansk tegnspråk",nl:"Braziliaanse gebarentaal",pt:"língua brasileira de sinais",pt_BR:"língua brasileira de sinais",ru:"бразильский жестовый язык",sv:"brasilianskt teckenspråk",_meta:{dir:["vertical left-to-right"]}},Ru={ca:"català",cs:"katalánština",da:"catalansk",de:"Katalanisch",en:"Catalan",eo:"kataluna lingvo",es:"catalán",eu:"katalan",fi:"katalaani",fr:"catalan",gl:"lingua catalá",he:"קטלאנית",hu:"katalán",id:"Katalan",it:"catalano",ja:"カタルーニャ語",nb_NO:"katalansk",nl:"Catalaans",pl:"język kataloński",pt:"língua catalã",pt_BR:"língua catalã",ru:"каталанский язык",sl:"katalonščina",sv:"katalanska",zh_Hans:"加泰罗尼亚语",zh_Hant:"加泰隆尼亞語",_meta:{countries:["AD"],dir:["left-to-right"]}},Hu={ca:"kaqtxikel",cs:"kakčikelština",de:"Cakchiquel-Sprache",en:"Kaqchikel",eo:"kakĉikela lingvo",es:"Kaqchikel",eu:"Kaqchikel",fr:"cakchiquel",gl:"Lingua kaqchikel",id:"Bahasa Kaqchikel",ja:"カクチケル語",nb_NO:"Kakchikel",nl:"Kaqchikel",pl:"Język kaqchikel",pt:"Língua caqchiquel",ru:"Какчикельский язык",sv:"cakchiquel",_meta:{dir:["left-to-right"]}},Cu={ca:"carolinià",de:"Karolinisch",en:"Carolinian",eo:"karolina lingvo",es:"carolinio",fi:"Karoliini",fr:"carolinien",he:"קרוליניאלית",id:"bahasa Caroline",it:"lingua caroliniana",ja:"カロリン語",nb_NO:"karolinsk",nl:"Caroliniaans",pl:"język karoliński",pt:"Língua caroliniana",ru:"Каролинский язык",sv:"karoliniska",_meta:{dir:["left-to-right"]}},Ou={de:"Chakma",en:"Chakma",eo:"ĉakma lingvo",fr:"changma kodha",ja:"チャクマ語",nl:"Chakma",pl:"język czakma",pt:"língua chakma",pt_BR:"língua chakma",ru:"чакма",sv:"chakma",_meta:{dir:["left-to-right"]}},Nu={ca:"min dong",de:"Min Dong",en:"Eastern Min",eo:"min-donga lingvo",es:"min dong",fi:"mindong",fr:"mindong",gl:"Lingua ming dong",he:"מין מזרחית",id:"Bahasa Min Timur",it:"min dong",ja:"閩東語",nb_NO:"Mindong",nl:"Mindong",pl:"Język mindong",pt:"Língua min oriental",pt_BR:"Min Dong",ru:"Восточноминьский язык",sv:"mindong",zh_Hans:"闽东语",zh_Hant:"閩東語",_meta:{dir:["top-to-bottom","left-to-right"]}},Iu={ca:"txetxè",cs:"čečenština",da:"Tjetjensk",de:"Tschetschenisch",en:"Chechen",eo:"ĉeĉena lingvo",es:"checheno",eu:"txetxenera",fi:"Tšetšeenin kieli",fr:"tchétchène",gl:"Lingua chechena",he:"צ'צ'נית",hu:"csecsen",id:"Bahasa Chechnya",it:"ceceno",ja:"チェチェン語",nb_NO:"tsjetsjensk",nl:"Tsjetsjeens",pl:"język czeczeński",pt:"checheno",pt_BR:"Língua chechena",ru:"чеченский язык",sl:"čečenščina",sv:"tjetjenska",zh_Hans:"车臣语",zh_Hant:"車臣語",_meta:{dir:["left-to-right"]}},Pu={ca:"cebuà",cs:"cebuánština",da:"sebuansk",de:"Cebuano",en:"Cebuano",eo:"cebua lingvo",es:"cebuano",eu:"cebuera",fi:"Cebun kieli",fr:"cebouan",gl:"Lingua cebuana",he:"סבואנו",hu:"szebuano",id:"Cebu",it:"cebuano",ja:"セブ語",nb_NO:"cebuano",nl:"Cebuano",pl:"język cebuański",pt:"cebuano",ru:"себуанский язык",sl:"sebuanščina",sv:"cebuano",zh_Hans:"宿务语",zh_Hant:"宿霧語",_meta:{dir:["left-to-right"]}},Tu={ca:"chamorro",cs:"čamorština",de:"Chamorro",en:"Chamorro",eo:"ĉamora lingvo",es:"idioma chamorro",eu:"Chamorro",fi:"Tšamorron kieli",fr:"chamorro",gl:"Lingua chamorra",he:"צ'מורו",hu:"csamorro",id:"Bahasa Chamorro",it:"chamorro",ja:"チャモロ語",nb_NO:"chamorro",nl:"Chamorro",pl:"język czamorro",pt:"Língua chamorro",ru:"чаморро",sv:"chamorro",_meta:{dir:["left-to-right"]}},Ku={ca:"chinook jargon",de:"Chinook Wawa",en:"Chinook Jargon",eo:"ĉinuka piĝino",fi:"chinook-jargon",fr:"chinook",he:"עגה של הצ'ינוק",ja:"チヌーク・ジャーゴン",nb_NO:"Chinook jargon",nl:"Chinook Jargon",pt:"Jargão chinook",ru:"чинукский жаргон",sv:"chinookjargong",zh_Hans:"奇努克混合语",zh_Hant:"支努幹混合語",_meta:{dir:["left-to-right"]}},Du={ca:"choctaw",cs:"čoktština",de:"Choctaw",en:"Choctaw",eo:"ĉakta lingvo",es:"idioma choctaw",fi:"Choctawin kieli",fr:"choctaw",gl:"lingua choctaw",hu:"csaktó",id:"Bahasa Choctaw",it:"lingua choctaw",ja:"チョクトー語",nb_NO:"choctaw",nl:"Choctaw",pl:"język czoktaw",pt:"língua choctaw",ru:"Чоктавский язык",sv:"choctaw",zh_Hans:"乔克托语",_meta:{dir:["left-to-right"]}},Uu={ca:"cherokee",cs:"čerokézština",da:"Cherokee",de:"Cherokee",en:"Cherokee",eo:"Ĉeroka lingvo",es:"cheroqui",eu:"Txerokiera",fi:"Cherokeen kieli",fr:"cherokee",gl:"Lingua cheroqui",he:"צ'רוקי",hu:"cseroki",id:"Bahasa Cherokee",it:"cherokee",ja:"チェロキー語",nb_NO:"cherokesisk",nl:"Cherokee",pl:"język czirokeski",pt:"cherokee",ru:"чероки",sl:"čerokeščina",sv:"cherokesiska",zh_Hans:"切罗基语",zh_Hant:"切羅基語",_meta:{dir:["left-to-right"]}},Ju={ca:"xeiene",da:"Cheyenne",de:"Cheyenne",en:"Cheyenne",eo:"Ĉejena lingvo",es:"cheyene",eu:"Cheyennera",fi:"Cheyennen kieli",fr:"cheyenne",gl:"Lingua cheyenne",he:"שאיין",hu:"cheyenne",id:"Bahasa Cheyenne",it:"cheyenne",ja:"シャイアン語",nb_NO:"Cheyenne",nl:"Cheyenne",pl:"język czejeński",pt:"Língua cheyenne",ru:"шайенский язык",sv:"cheyenne",zh_Hans:"夏延语",zh_Hant:"夏安語",_meta:{dir:["left-to-right"]}},qu={ca:"sorani",cs:"sorání",da:"Sorani",de:"Sorani",en:"Sorani",eo:"sorana lingvo",es:"sorani",eu:"Sorani",fi:"sorani",fr:"sorani",gl:"lingua kurda central",he:"סוראנית",hu:"szoráni",id:"Soranî",it:"sorani",ja:"ソラニー",nl:"Sorani",pl:"język sorani",pt:"Língua sorâni",ru:"сорани",sl:"soranščina",sv:"soranî",zh_Hans:"中库尔德语",zh_Hant:"中庫德語",_meta:{dir:["right-to-left"]}},Fu={ca:"txuktxi",cs:"čukština",da:"tjuktjisk",de:"Tschuktschisch",en:"Chukchi",eo:"Ĉukĉa lingvo",es:"Idioma chucoto",eu:"Txuktxiera",fi:"Tšuktšin kieli",fr:"tchouktche",gl:"Lingua Chukoto",he:"צ'וקצ'ית",hu:"csukcs",id:"Bahasa Chukchi",it:"lingua ciukcia",ja:"チュクチ語",nb_NO:"Luoravetlansk",nl:"Tsjoektsjisch",pl:"Język czukocki",pt:"Língua chukoto",ru:"чукотский язык",sl:"Čukotščina",sv:"tjuktjiska",_meta:{dir:["left-to-right"]}},Wu={de:"Hakha Chin",en:"Hakha–Chin",fr:"haka chin",ja:"ハカ語",nl:"Hakha-Chin",ru:"Чинский язык",sv:"hakha-chin",_meta:{dir:["left-to-right"]}},Gu={ca:"cors",cs:"korsičtina",da:"Korsikansk",de:"Korsisch",en:"Corsican",eo:"korsika lingvo",es:"corso",eu:"Korsikera",fi:"Korsikan kieli",fr:"corse",gl:"Lingua corsa",he:"קורסיקאית",hu:"korzikai",id:"Bahasa Korsika",it:"Lingua corsa",ja:"コルシカ語",nb_NO:"korsikansk",nl:"Corsicaans",pl:"język korsykański",pt:"Língua corsa",ru:"корсиканский язык",sl:"korziščina",sv:"korsikanska",_meta:{dir:["left-to-right"]}},$u={de:"Pu-Xian",en:"Pu-Xian Min",fr:"puxian",ja:"莆仙語",nb_NO:"Puxian",nl:"Puxian",pl:"Język puxian",pt:"Língua putian",ru:"Пусяньский язык",sv:"pu-xian-min",zh_Hans:"莆仙语",zh_Hant:"莆仙語",_meta:{dir:["left-to-right"]}},Vu={ca:"cree",cs:"kríjština",de:"Cree",en:"Cree",eo:"kria lingvo",es:"idioma cree",eu:"cree hizkuntza",fi:"Cree",fr:"cri",gl:"Lingua cree",he:"קרי",hu:"krí",id:"Bahasa Cree",it:"cree",ja:"クリー語",nb_NO:"cree",nl:"Cree",pl:"język kri",pt:"Língua cree",ru:"кри",sl:"krijščina",sv:"cree",_meta:{dir:["left-to-right"]}},Zu={ca:"tàtar de Crimea",cs:"krymská tatarština",da:"Krimtatarisk",de:"Krimtatarisch",en:"Crimean Tatar",eo:"krime-tatara lingvo",es:"tártaro de Crimea",eu:"Krimeako tatarera",fi:"krimintataari",fr:"tatar de Crimée",gl:"Lingua tártara de Crimea",he:"טטרית של קרים",hu:"krími tatár",id:"Bahasa Tatar Krimea",it:"tataro di Crimea",ja:"クリミア・タタール語",nb_NO:"krimtatarisk",nl:"Krim-Tataars",pl:"język krymskotatarski",pt:"tártaro da Crimeia",pt_BR:"Língua tártara da Crimeia",ru:"крымскотатарский язык",sl:"krimska tatarščina",sv:"krimtatariska",zh_Hans:"克里米亚鞑靼语",zh_Hant:"克里米亞韃靼語",_meta:{dir:["right-to-left","left-to-right"]}},Yu={ca:"crioll de les Seychelles",cs:"Seychelská kreolština",de:"Seychellenkreol",en:"Seychellois Creole",eo:"sejŝela lingvo",es:"criollo seychelense",fi:"Seychellien kreoli",fr:"créole seychellois",gl:"Crioulo das Seychelles",he:"קריאולית סיישלית",hu:"seychelle-i kreol",id:"Bahasa Kreol Seychelles",it:"creolo delle Seychelles",ja:"セーシェル・クレオール語",nb_NO:"seychellisk kreol",nl:"Seychellencreools",pl:"Język kreolski seszelski",pt:"Crioulo de Seychelles",ru:"сейшельский креольский язык",sv:"seychellisk kreol",_meta:{dir:["left-to-right"]}},Xu={ca:"txec",cs:"čeština",da:"tjekkisk",de:"Tschechisch",en:"Czech",eo:"ĉeĥa lingvo",es:"checo",eu:"txekiera",fi:"tšekki",fr:"tchèque",gl:"lingua checa",he:"צ'כית",hu:"cseh",id:"Bahasa Ceska",it:"ceco",ja:"チェコ語",nb_NO:"tsjekkisk",nl:"Tsjechisch",pl:"język czeski",pt:"checo",pt_BR:"língua tcheca",ru:"чешский язык",sl:"češčina",sv:"tjeckiska",zh_Hans:"捷克语",zh_Hant:"捷克語",_meta:{countries:["CZ"],dir:["left-to-right"]}},Qu={ca:"caixubi",cs:"kašubština",da:"Kasjubisk",de:"Kaschubisch",en:"Kashubian",eo:"kaŝuba lingvo",es:"casubio",eu:"Kaxubiera",fi:"kašubi",fr:"cachoube",gl:"Lingua caxubia",he:"קשובית",hu:"kasub",id:"Kashubia",it:"casciubo",ja:"カシューブ語",nb_NO:"kasjubisk",nl:"Kasjoebisch",pl:"język kaszubski",pt:"cassúbio",pt_BR:"Língua cassúbia",ru:"кашубский язык",sl:"kašubščina",sv:"kasjubiska",_meta:{dir:["left-to-right"]}},ed={ca:"chittagonià",de:"Chittagonisch",en:"Chittagonian",es:"Idioma chittagoniano",fi:"Chittagongin kieli",fr:"chittagonien",gl:"Lingua chittagoniana",he:"צ'יטגונית",id:"Bahasa Chittagonia",it:"lingua chittagonian",ja:"チッタゴン語",pl:"Język chatgaya",pt:"Língua chittagong",pt_BR:"Língua chittagong",sv:"chittagoniska",_meta:{dir:["left-to-right"]}},ad={ca:"txuvaix",cs:"čuvaština",da:"tjuvasjisk",de:"Tschuwaschisch",en:"Chuvash",eo:"ĉuvaŝa lingvo",es:"chuvasio",eu:"txuvaxera",fi:"tšuvassi",fr:"tchouvache",gl:"Lingua chuvash",he:"צ'ובשית",hu:"csuvas",id:"Bahasa Chuvash",it:"ciuvascio",ja:"チュヴァシ語",nb_NO:"tsjuvasjisk",nl:"Tsjoevasjisch",pl:"język czuwaski",pt:"tchuvache",pt_BR:"Língua tchuvache",ru:"чувашский язык",sl:"čuvaščina",sv:"tjuvasjiska",zh_Hans:"楚瓦什语",zh_Hant:"楚瓦什語",_meta:{dir:["left-to-right"]}},td={ca:"gal·lès",cs:"velština",da:"walisisk",de:"Walisisch",en:"Welsh",eo:"kimra lingvo",es:"galés",eu:"gales",fi:"kymri",fr:"gallois",gl:"lingua galesa",he:"ולשית",hu:"walesi",id:"bahasa Wales",it:"gallese",ja:"ウェールズ語",nb_NO:"walisisk",nl:"Welsh",pl:"język walijski",pt:"galês",pt_BR:"galês",ru:"валлийский язык",sl:"velščina",sv:"kymriska",zh_Hans:"威尔士语",zh_Hant:"威爾士語",_meta:{dir:["left-to-right"]}},id={ca:"danès",cs:"dánština",da:"dansk",de:"Dänisch",en:"Danish",eo:"dana lingvo",es:"danés",eu:"daniera",fi:"tanska",fr:"danois",gl:"lingua dinamarquesa",he:"דנית",hu:"dán",id:"bahasa Denmark",it:"danese",ja:"デンマーク語",nb_NO:"dansk",nl:"Deens",pl:"język duński",pt:"dinamarquês",pt_BR:"dinamarquês",ru:"датский язык",sl:"danščina",sv:"danska",zh_Hans:"丹麦语",zh_Hant:"丹麥語",_meta:{countries:["DK"],dir:["left-to-right"]}},nd={ca:"dagbani",cs:"dagbani",da:"dagbani",de:"Dagbani",en:"Dagbani",eo:"Dagbania lingvo",es:"dagbani",eu:"Dagbani",fi:"Dagbanin kieli",fr:"dagbani",gl:"Lingua dagbani",it:"Dagbani",ja:"ダバニ語",nb_NO:"dagbani",nl:"Dagbani",pl:"język dagbani",pt:"Língua dagbani",pt_BR:"Língua dagbani",ru:"дагбани",sv:"dagbani",_meta:{dir:["left-to-right"]}},rd={ca:"alemany",cs:"němčina",da:"tysk",de:"Deutsch",en:"German",eo:"germana lingvo",es:"alemán",eu:"aleman",fi:"saksa",fr:"allemand",gl:"lingua alemá",he:"גרמנית",hu:"német",id:"bahasa Jerman",it:"tedesco",ja:"ドイツ語",nb_NO:"tysk",nl:"Duits",pl:"język niemiecki",pt:"alemão",pt_BR:"alemão",ru:"немецкий язык",sl:"nemščina",sv:"tyska",zh_Hans:"德语",zh_Hant:"德語",_meta:{countries:["AT","BE","CH","DE","LI","LU"],dir:["left-to-right"]}},sd={ca:"dinka",cs:"Dinka",da:"Dinka",de:"Dinka",en:"Dinka",es:"idioma dinka",eu:"dinka",fi:"dinka",fr:"dinka",gl:"Lingua dinka",id:"Bahasa Dinka",it:"lingua dinka",ja:"ディンカ語",nl:"Dinka",pl:"język dinka",pt:"Língua dinka",ru:"Динка",sv:"dinka",_meta:{dir:["left-to-right"]}},od={ca:"zazaqui",cs:"Zazaki",da:"Zazaki",de:"Zaza-Sprache",en:"Zazaki",eo:"zazaa",es:"zazaki",eu:"Zazaki",fi:"zaza",fr:"zazaki",gl:"Lingua zazaki",he:"זאזאקי",hu:"zazaki",id:"bahasa Zazaki",it:"zazaki",ja:"ザザキ語",nb_NO:"zazaisk",nl:"Zazaki",pl:"język zazaki",pt:"Zazaki",pt_BR:"Zazaki",ru:"зазаки",sv:"zazaiska",zh_Hans:"扎扎其语",zh_Hant:"扎扎其語",_meta:{dir:["right-to-left","left-to-right"]}},ld={ca:"rukai",en:"Rukai",es:"rukai",fi:"Rukai",fr:"rukai",gl:"Lingua rukai",he:"רוקאי",id:"Bahasa Rukai",it:"rukai",ja:"ルカイ語",nl:"Rukai",pl:"Rukai",pt:"Língua rukai",sv:"rukai",zh_Hans:"鲁凯语",zh_Hant:"魯凱語",_meta:{dir:["left-to-right"]}},cd={ca:"baix sòrab",cs:"dolnolužická srbština",de:"Niedersorbisch",en:"Lower Sorbian",eo:"malsuprasoraba lingvo",es:"bajo sorabo",eu:"Behe sorabiera",fr:"bas-sorabe",gl:"Baixo sorabo",he:"סורבית תחתית",hu:"alsó szorb",id:"Bahasa Sorbia Hilir",it:"sorabo inferiore",ja:"低地ソルブ語",nl:"Nedersorbisch",pl:"język dolnołużycki",pt:"baixo sorábio",pt_BR:"Baixo sorábio",ru:"нижнелужицкий язык",sl:"Dolnjesrbščina",sv:"lågsorbiska",_meta:{dir:["left-to-right"]}},ud={de:"Dusun",en:"Kadazandusun",fr:"dusun",id:"Bahasa Kadazandusun",ja:"中央ドゥスン語",nl:"Dusun",pl:"język dusun",pt:"Língua dusun",ru:"дусунский язык",sv:"kadazandusun",_meta:{dir:["left-to-right"]}},dd={ca:"doteli",de:"Doteli",en:"Doteli",eo:"Doteli",es:"Doteli",fr:"dotyali",gl:"Lingua doteli",ja:"ドテリ語",nl:"Doteli",pl:"Język doteli",pt:"Doteli",ru:"дотели",sv:"doteli",_meta:{dir:["left-to-right"]}},fd={ca:"duala",de:"Duala",en:"Duala",eo:"dualaa lingvo",es:"duala",fi:"Duala",fr:"douala",he:"דואלה",it:"lingua duala",ja:"ドゥアラ語",nl:"Duala",pl:"język duala",pt:"Língua duala",pt_BR:"Língua duala",ru:"Дуала",sv:"douala",zh_Hans:"杜阿拉语",zh_Hant:"杜阿拉語",_meta:{dir:["left-to-right"]}},hd={ca:"divehi",cs:"Divehi",da:"Dhivehi",de:"Dhivehi",en:"Maldivian",eo:"maldiva lingvo",es:"maldivo",eu:"Maldivera",fi:"Divehin kieli",fr:"maldivien",gl:"lingua maldivana",he:"דיבהי",hu:"maldív",id:"Divehi",it:"maldiviano",ja:"ディベヒ語",nb_NO:"dhivehi",nl:"Maldivisch",pl:"język malediwski",pt:"Língua divehi",pt_BR:"Língua divehi",ru:"мальдивский язык",sl:"maldivščina",sv:"divehi",zh_Hans:"迪维希语",zh_Hant:"迪維希語",_meta:{countries:["MV"],dir:["right-to-left"]}},pd={ca:"dzongkha",cs:"Dzongkä",da:"dzongkha",de:"Dzongkha",en:"Dzongkha",eo:"dzonka lingvo",es:"dzongkha",eu:"Dzongkha",fi:"dzongkha",fr:"dzongkha",gl:"Lingua dzongkha",he:"דזונגקה",hu:"dzongkha",id:"Dzongkha",it:"dzongkha",ja:"ゾンカ語",nb_NO:"dzongkha",nl:"Dzongkha",pl:"Dzongkha",pt:"língua butanesa",pt_BR:"Língua butanesa",ru:"дзонг-кэ",sl:"Dzongkha",sv:"dzongkha",zh_Hans:"宗卡语",zh_Hant:"宗喀語",_meta:{countries:["BT"],dir:["left-to-right"]}},gd={ca:"ewe",cs:"eveština",da:"ewe",de:"Ewe",en:"Ewe",eo:"evea lingvo",es:"ewé",eu:"eweera",fi:"ewen kieli",fr:"ewé",gl:"Lingua ewe",he:"אבגבה",hu:"eve",id:"Bahasa Ewe",it:"ewe",ja:"エウェ語",nb_NO:"ewe",nl:"Ewe",pl:"Język ewe",pt:"ewe",ru:"эве",sl:"eveščina",sv:"ewe",_meta:{dir:["left-to-right"]}},md={ca:"efik",de:"Efik",en:"Ibibio",eo:"efika lingvo",es:"Idioma efik",fi:"Efik",fr:"efik",gl:"Lingua efik",id:"Bahasa Efik",it:"lingua Efik",ja:"エフィク語",nb_NO:"Efik",nl:"Efik",pt:"Língua efik",sv:"efik",zh_Hant:"艾菲克語",_meta:{dir:["left-to-right"]}},bd={ca:"emilià",de:"Emilianisch",en:"Emilian",eo:"emiliaj lingvoj",es:"emiliano",fi:"Emilian kieli",fr:"émilien",hu:"emilián",id:"bahasa Emilia",it:"emiliano",ja:"エミリア語",nl:"Emiliaans",pt:"dialeto emiliano",ru:"эмилианский",sv:"emilianska",zh_Hant:"艾米利亞語",_meta:{dir:["left-to-right"]}},vd={ca:"grec modern",cs:"novořečtina",da:"nygræsk",de:"Neugriechisch",en:"Modern Greek",eo:"moderna greka lingvo",es:"griego",eu:"greziera modernoa",fi:"nykykreikka",fr:"grec moderne",gl:"lingua grega moderna",he:"יוונית מודרנית",hu:"újgörög",id:"Yunani Modern",it:"greco moderno",ja:"現代ギリシア語",nb_NO:"nygresk",nl:"Nieuwgrieks",pl:"język nowogrecki",pt:"grego moderno",pt_BR:"língua grega",ru:"новогреческий язык",sl:"novogrščina",sv:"nygrekiska",zh_Hans:"希腊语",zh_Hant:"希臘語",_meta:{countries:["CY","GR"],dir:["left-to-right"]}},kd={ca:"anglès",cs:"angličtina",da:"engelsk",de:"Englisch",en:"English",eo:"angla lingvo",es:"inglés",eu:"ingeles",fi:"englanti",fr:"anglais",gl:"lingua inglesa",he:"אנגלית",hu:"angol",id:"bahasa Inggris",it:"inglese",ja:"英語",nb_NO:"engelsk",nl:"Engels",pl:"język angielski",pt:"inglês",pt_BR:"inglês",ru:"английский язык",sl:"angleščina",sv:"engelska",zh_Hans:"英语",zh_Hant:"英語",_meta:{countries:["AG","BB","BI","BS","BW","BZ","CA","CM","DM","ER","FJ","FM","GB","GD","GH","GI","GM","GY","IE","IN","JM","KE","KI","KN","LC","LR","LS","MH","MT","MU","MW","NA","NG","NR","NZ","PG","PH","PK","PW","RW","SB","SC","SD","SG","SL","SS","SZ","TO","TT","TV","TZ","UG","US","VC","VU","WS","ZA","ZM","ZW"],dir:["left-to-right"]}},yd={ca:"esperanto",cs:"esperanto",da:"esperanto",de:"Esperanto",en:"Esperanto",eo:"Esperanto",es:"esperanto",eu:"esperanto",fi:"esperanto",fr:"espéranto",gl:"esperanto",he:"אספרנטו",hu:"eszperantó",id:"Esperanto",it:"esperanto",ja:"エスペラント",nb_NO:"esperanto",nl:"Esperanto",pl:"esperanto",pt:"esperanto",pt_BR:"esperanto",ru:"эсперанто",sl:"esperanto",sv:"esperanto",zh_Hans:"世界语",zh_Hant:"世界語",_meta:{dir:["left-to-right"]}},_d={ca:"castellà",cs:"španělština",da:"spansk",de:"Spanisch",en:"Spanish",eo:"hispana lingvo",es:"español",eu:"gaztelania",fi:"espanja",fr:"espagnol",gl:"lingua castelá",he:"ספרדית",hu:"spanyol",id:"bahasa Spanyol",it:"spagnolo",ja:"スペイン語",nb_NO:"spansk",nl:"Spaans",pl:"język hiszpański",pt:"espanhol",pt_BR:"espanhol",ru:"испанский язык",sl:"španščina",sv:"spanska",zh_Hans:"西班牙语",zh_Hant:"西班牙語",_meta:{countries:["AR","BO","CL","CO","CR","CU","DO","EC","ES","GQ","GT","HN","MX","NI","PA","PE","PY","SV","UY","VE"],dir:["left-to-right"]}},wd={ca:"yupik de l'Alaska central",de:"Yup'ik",en:"Central Alaskan Yup'ik",es:"Yupik alaskeño central",fi:"alaskanjupik",fr:"yupik de l'Alaska central",gl:"Lingua iupik de Alasca central",it:"lingua yupik centrale",ja:"中央アラスカ・ユピック語",nb_NO:"Alaskayupik",nl:"Joepik",pl:"Język yupik środkowy",ru:"Центрально-юпикский язык",sv:"centraljupik",zh_Hans:"中阿拉斯加尤皮克语",_meta:{dir:["left-to-right"]}},zd={ca:"estonià",cs:"estonština",da:"estisk",de:"Estnisch",en:"Estonian",eo:"estona lingvo",es:"estonio",eu:"Estoniera",fi:"viro",fr:"estonien",gl:"lingua estoniana",he:"אסטונית",hu:"észt",id:"Esti",it:"estone",ja:"エストニア語",nb_NO:"estisk",nl:"Estisch",pl:"język estoński",pt:"estónio",pt_BR:"língua estônia",ru:"эстонский язык",sl:"estonščina",sv:"estniska",zh_Hant:"愛沙尼亞語",_meta:{countries:["EE"],dir:["left-to-right"]}},Sd={ca:"basc",cs:"baskičtina",da:"baskisk",de:"Baskisch",en:"Basque",eo:"eŭska lingvo",es:"euskera",eu:"euskara",fi:"baski",fr:"basque",gl:"lingua éuscara",he:"בסקית",hu:"baszk",id:"Bahasa Basque",it:"basco",ja:"バスク語",nb_NO:"baskisk",nl:"Baskisch",pl:"język baskijski",pt:"basco",pt_BR:"basco",ru:"баскский язык",sl:"baskovščina",sv:"baskiska",zh_Hans:"巴斯克语",zh_Hant:"巴斯克語",_meta:{dir:["left-to-right"]}},jd={ca:"extremeny",de:"Extremadurisch",en:"Extremaduran",eo:"ekstremadura lingvo",es:"extremeño",eu:"Extremadurera",fi:"extremadura",fr:"estrémègne",gl:"lingua estremeña",id:"bahasa Extremadura",it:"estremegno",ja:"エストレマドゥーラ語",nb_NO:"ekstremaduransk",nl:"Extremeens",pl:"język estremadurski",pt:"Língua estremenha",ru:"Эстремадурский язык",sl:"ekstremadurščina",sv:"extremaduriska",_meta:{dir:["left-to-right"]}},Ad={ca:"persa",cs:"perština",da:"persisk",de:"Persisch",en:"Persian",eo:"persa lingvo",es:"persa",eu:"persiera",fi:"persia",fr:"persan",gl:"lingua persa",he:"פרסית",hu:"perzsa",id:"bahasa Persia",it:"persiano",ja:"ペルシア語",nb_NO:"persisk",nl:"Perzisch",pl:"język perski",pt:"persa",pt_BR:"persa",ru:"персидский язык",sl:"perzijščina",sv:"persiska",zh_Hant:"波斯語",_meta:{countries:["IR"],dir:["right-to-left"]}},xd={ca:"ful",cs:"fulbština",da:"fula",de:"Fulfulde",en:"Fula",eo:"fula lingvo",es:"fula",eu:"fula",fi:"Fulani",fr:"peul",gl:"Lingua fula",he:"שפת הפולה",hu:"ful",id:"Bahasa Fula",it:"fula",ja:"フラニ語",nb_NO:"Fulfulde",nl:"Fulah",pl:"Język ful",pt:"Língua fula",ru:"фула",sl:"fulščina",sv:"fula",zh_Hans:"富拉语",zh_Hant:"富拉語",_meta:{countries:["ML"],dir:["left-to-right","right-to-left"]}},Bd={ca:"finès",cs:"finština",da:"finsk",de:"Finnisch",en:"Finnish",eo:"finna lingvo",es:"finés",eu:"finlandiera",fi:"suomi",fr:"finnois",gl:"finés",he:"פינית",hu:"finn",id:"Suomi",it:"finlandese",ja:"フィンランド語",nb_NO:"finsk",nl:"Fins",pl:"język fiński",pt:"finlandês",pt_BR:"língua finlandesa",ru:"финский язык",sl:"finščina",sv:"finska",zh_Hans:"芬兰语",zh_Hant:"芬蘭語",_meta:{countries:["FI"],dir:["left-to-right"]}},Ed={ca:"filipí",cs:"filipínština",da:"Filippinsk",de:"Filipino",en:"Filipino",eo:"filipina lingvo",es:"idioma filipino",eu:"filipinera",fi:"filipino",fr:"philippin",gl:"Lingua filipina",he:"פיליפינית",hu:"filippínó",id:"bahasa Filipino",it:"filippino",ja:"フィリピン語",nb_NO:"filippinsk",nl:"Filipijns",pl:"Język filipiński",pt:"Língua filipina",pt_BR:"Língua filipina",ru:"филиппинский язык",sl:"filipinščina",sv:"filippinska",zh_Hant:"菲律賓語",_meta:{dir:["left-to-right"]}},Md={ca:"meänkieli",cs:"Meänkieli",da:"Tornedalsfinsk",de:"Tornedalfinnisch",en:"Meänkieli",eo:"tornival-finna lingvo",es:"meänkieli",eu:"Meänkieli",fi:"meänkieli",fr:"meänkieli",gl:"meänkieli",he:"מאנקיילי",hu:"meänkieli",it:"lingua meänkieli",ja:"メアンキエリ",nb_NO:"tornedalsfinsk",nl:"Meänkieli",pl:"Meänkieli",pt:"Língua meänkieli",pt_BR:"Língua meänkieli",ru:"Меянкиели",sv:"meänkieli",zh_Hans:"梅安语",zh_Hant:"梅安語",_meta:{dir:["left-to-right"]}},Ld={ca:"fijià",cs:"fidžijština",da:"fijiansk",de:"Fidschi",en:"Fijian",eo:"fiĝia lingvo",es:"fiyiano",eu:"Fijiera",fi:"Fidžin kieli",fr:"fidjien",gl:"Lingua fidxiana",he:"פיג'ית",hu:"fidzsi",id:"Bahasa Fiji",it:"figiano",ja:"フィジー語",nb_NO:"fijiansk",nl:"Fijisch",pl:"Język fidżyjski",pt:"Língua fidjiana",pt_BR:"Língua fijiana",ru:"фиджийский язык",sv:"fijianska",_meta:{countries:["FJ"],dir:["left-to-right"]}},Rd={ca:"kven",cs:"kvenština",da:"kvensk",de:"Kvenisch",en:"Kven",eo:"kvena lingvo",es:"kven",eu:"kvenera",fi:"kveeni",fr:"kvène",gl:"Lingua kven",he:"קוון",hu:"kven",id:"Bahasa Kven",it:"kven",ja:"クヴェン語",nb_NO:"kvensk",nl:"Kveens",pl:"Język kweński",pt:"kven",pt_BR:"língua kven",ru:"квенский язык",sv:"kvänska",zh_Hant:"克文語",_meta:{dir:["left-to-right"]}},Hd={ca:"feroès",cs:"faerština",da:"færøsk",de:"Färöisch",en:"Faroese",eo:"feroa lingvo",es:"feroés",eu:"Faroera",fi:"fäärin kieli",fr:"féroïen",gl:"lingua feroesa",he:"פארואזית",hu:"feröeri",id:"bahasa Faroe",it:"faroese",ja:"フェロー語",nb_NO:"færøysk",nl:"Faeröers",pl:"język farerski",pt:"Língua feroesa",ru:"фарерский язык",sl:"ferščina",sv:"färöiska",zh_Hans:"法罗语",_meta:{dir:["left-to-right"]}},Cd={ca:"fon",de:"Fon",en:"Fon",eo:"fonua lingvo",es:"idioma fon",eu:"Fonera",fi:"Fonin kieli",fr:"fon-gbe",gl:"Lingua fon",he:"פון",id:"Bahasa Fon",it:"fon",ja:"フォン語",nb_NO:"fon",nl:"Fon",pl:"język fon",pt:"Língua fon",ru:"фон",sv:"fon",zh_Hant:"豐語",_meta:{dir:["left-to-right"]}},Od={ca:"francès",cs:"francouzština",da:"fransk",de:"Französisch",en:"French",eo:"franca lingvo",es:"francés",eu:"frantses",fi:"ranska",fr:"français",gl:"lingua francesa",he:"צרפתית",hu:"francia",id:"bahasa Prancis",it:"francese",ja:"フランス語",nb_NO:"fransk",nl:"Frans",pl:"język francuski",pt:"francês",pt_BR:"francês",ru:"французский язык",sl:"francoščina",sv:"franska",zh_Hans:"法语",zh_Hant:"法語",_meta:{countries:["BE","BI","BJ","CA","CD","CF","CG","CH","CI","CM","DJ","FR","GA","GN","GQ","HT","KM","LU","MC","MG","MU","NE","RW","SC","SN","TD","TG","VA","VU"],dir:["left-to-right"]}},Nd={ca:"francès cajun",de:"Cajun",en:"Louisiana French",eo:"luiziana franca dialekto",es:"francés cajún",eu:"Louisianako frantses",fr:"français de Louisiane",id:"Bahasa Prancis Louisiana",it:"francese cajun",ja:"ケイジャン・フランス語",nl:"Cajun-Frans",pt:"francês cajun",ru:"Кажунский диалект французского языка",sv:"louisianafranska",_meta:{dir:["left-to-right"]}},Id={ca:"francoprovençal",cs:"franko-provensálština",da:"frankoprovençalsk",de:"Frankoprovenzalisch",en:"Franco-Provençal",eo:"arpitana lingvo",es:"franco-provenzal",eu:"Frankoprovenzera",fi:"Arpitaani",fr:"francoprovençal",gl:"Lingua francoprovenzal",he:"פרנקו-פרובנסאלית",hu:"frankoprovanszál",id:"Bahasa Arpitan",it:"francoprovenzale",ja:"アルピタン語",nb_NO:"frankoprovençalsk",nl:"Arpitaans",pl:"język franko-prowansalski",pt:"franco-provençal",pt_BR:"Língua franco-provençal",ru:"франкопровансальский язык",sl:"frankoprovansalščina",sv:"frankoprovensalska",_meta:{dir:["left-to-right"]}},Pd={ca:"frisó septentrional",da:"Nordfrisisk",de:"Nordfriesisch",en:"North Frisian",eo:"nordfrisa lingvo",es:"frisón septentrional",eu:"Iparraldeko frisiera",fi:"Pohjoisfriisi",fr:"frison septentrional",gl:"Lingua frisoa setentrional",he:"פריזית צפונית",hu:"északi fríz",id:"Bahasa Frisia Utara",it:"frisone settentrionale",ja:"北フリジア語",nb_NO:"nordfrisisk",nl:"Noord-Fries",pl:"język północnofryzyjski",pt:"frisão setentrional",ru:"севернофризский язык",sl:"severna frizijščina",sv:"nordfrisiska",zh_Hans:"北弗里斯兰语",zh_Hant:"北菲士蘭語",_meta:{dir:["left-to-right"]}},Td={ca:"furlà",cs:"furlanština",da:"friulisk",de:"Furlanisch",en:"Friulian",eo:"friula lingvo",es:"friulano",eu:"Friuliera",fi:"Friulin kieli",fr:"frioulan",gl:"Lingua friulana",he:"פורלן",hu:"friuli",id:"Bahasa Friuli",it:"friulano",ja:"フリウリ語",nb_NO:"friulisk",nl:"Friulisch",pl:"język friulski",pt:"friulano",ru:"фриульский язык",sl:"furlanščina",sv:"friuliska",_meta:{dir:["left-to-right"]}},Kd={ca:"frisó occidental",cs:"západofríština",da:"Westerlauwersfrisisk",de:"Westfriesisch",en:"West Frisian",eo:"okcidentfrisa lingvo",es:"frisón occidental",eu:"Mendebaldeko frisiera",fi:"länsifriisin kieli",fr:"frison occidental",gl:"Lingua frisoa occidental",he:"פריזית מערבית",hu:"nyugati fríz",id:"Bahasa Frisia Barat",it:"frisone occidentale",ja:"西フリジア語",nb_NO:"vestfrisisk",nl:"Westerlauwers Fries",pl:"język zachodniofryzyjski",pt:"frísio ocidental",pt_BR:"frísio ocidental",ru:"западнофризский язык",sv:"västfrisiska",zh_Hans:"西弗里斯兰语",zh_Hant:"西菲士蘭語",_meta:{dir:["left-to-right"]}},Dd={ca:"gaèlic irlandès",cs:"irština",da:"irsk",de:"Irisch",en:"Irish",eo:"irlanda lingvo",es:"irlandés",eu:"Irlandako gaelera",fi:"iiri",fr:"irlandais",gl:"lingua irlandesa",he:"אירית",hu:"ír",id:"Bahasa Irlandia",it:"irlandese",ja:"アイルランド語",nb_NO:"irsk",nl:"Iers",pl:"język irlandzki",pt:"irlandês",pt_BR:"língua irlandesa",ru:"ирландский язык",sl:"irščina",sv:"iriska",zh_Hans:"爱尔兰语",zh_Hant:"愛爾蘭語",_meta:{countries:["IE"],dir:["left-to-right","bottom-to-top"]}},Ud={ca:"ga",de:"Ga",en:"Ga",eo:"gaa lingvo",es:"Idioma ga",fi:"Gan kieli",fr:"ga",he:"גה",it:"lingua ga",ja:"ガ語",nl:"Ga",pl:"Język ga",ru:"Га",sv:"ga",zh_Hant:"加語",_meta:{dir:["left-to-right"]}},Jd={ca:"gagaús",cs:"gagauzština",de:"Gagausisch",en:"Gagauz",eo:"gagauza lingvo",es:"gagaúzo",eu:"Gagauzera",fi:"gagauzi",fr:"gagaouze",gl:"Lingua gagauza",he:"גגאוזית",hu:"gagauz",id:"Bahasa Gagauz",it:"gagauzo",ja:"ガガウズ語",nb_NO:"gagausisk",nl:"Gagaoezisch",pl:"Język gagauski",pt:"Língua gagaúza",ru:"Гагаузский язык",sl:"gagavščina",sv:"gagauziska",zh_Hans:"加告兹语",zh_Hant:"加告茲語",_meta:{dir:["left-to-right"]}},qd={ca:"gan",da:"Gan",de:"Gan",en:"Gan Chinese",eo:"gana lingvo",es:"chino gan",fi:"Gan-kiina",fr:"gan",gl:"Gan",he:"סינית גאן",id:"Bahasa Gan",it:"gan",ja:"贛語",nb_NO:"gan",nl:"Gan",pl:"język gan",pt:"Chinês gan",ru:"Гань",sl:"gan",sv:"gan",zh_Hant:"贛語",_meta:{dir:["top-to-bottom"]}},Fd={ca:"crioll guaianès",en:"Guianan Creole",eo:"franc-gujana kreola lingvo",es:"Criollo de Guayana Francesa",fi:"Ranskan Guayanan kreoli",fr:"créole guyanais",gl:"Crioulo da Güiana Francesa",it:"lingua creola della Guyana francese",ja:"仏領ギアナのクレオール語",nl:"Guianaans-Creools",pl:"język kreolski Gujany Francuskiej",pt:"Crioulo da Guiana Francesa",ru:"Гвианский креольский язык",sl:"gvajanska kreolščina",sv:"guyanansk kreol",zh_Hant:"圭亞那克里奧爾法語",_meta:{dir:["left-to-right"]}},Wd={ca:"gaèlic escocès",cs:"skotská gaelština",da:"skotsk gælisk",de:"Schottisch-Gälisch",en:"Scottish Gaelic",eo:"skotgaela lingvo",es:"gaélico escocés",eu:"Eskoziako gaelera",fi:"Gaeli",fr:"gaélique écossais",gl:"Lingua gaélica escocesa",he:"גאלית סקוטית",hu:"skót gael",id:"Bahasa Gaelik Skotlandia",it:"gaelico scozzese",ja:"スコットランド・ゲール語",nb_NO:"skotsk-gælisk",nl:"Schots-Gaelisch",pl:"język gaelicki szkocki",pt:"Língua gaélica escocesa",pt_BR:"Língua gaélica escocesa",ru:"шотландский гэльский язык",sl:"škotska gelščina",sv:"skotsk gaeliska",_meta:{dir:["left-to-right"]}},Gd={ca:"gilbertès",cs:"kiribatština",da:"gilbertesisk",de:"Kiribatisch",en:"Gilbertese",eo:"kiribata lingvo",es:"gilbertino",eu:"kiribatiera",fi:"Kiribatin kieli",fr:"gilbertin",gl:"Lingua kiribatiana",he:"גילברטית",hu:"gilberti",id:"Bahasa Kiribati",it:"gilbertese",ja:"キリバス語",nb_NO:"Kiribatisk",nl:"Kiribatisch",pl:"Język kiribati",pt:"Gilbertês",ru:"кирибати",sl:"kiribatščina",sv:"kiribatiska",_meta:{dir:["left-to-right"]}},$d={ca:"gallec",cs:"galicijština",da:"galicisk",de:"Galicisch",en:"Galician",eo:"galega lingvo",es:"gallego",eu:"galiziera",fi:"galicia",fr:"galicien",gl:"lingua galega",he:"גליסית",hu:"galiciai",id:"bahasa Galisia",it:"gallego",ja:"ガリシア語",nb_NO:"galisisk",nl:"Galicisch",pl:"język galicyjski",pt:"galego",pt_BR:"língua galega",ru:"галисийский язык",sl:"galicijščina",sv:"galiciska",zh_Hant:"加利西亞語",_meta:{dir:["left-to-right"]}},Vd={ca:"gilaki",de:"Gilaki",en:"Gilaki",eo:"gila lingvo",es:"gileki",eu:"Gilaki",fi:"Gilakin kieli",fr:"gilaki",gl:"Lingua gilaki",hu:"gilaki",id:"Bahasa Gilaki",it:"gilaki",ja:"ギラキ語",nb_NO:"Gileki",nl:"Gilaki",pl:"Język giliański",pt:"Língua gilaki",ru:"гилякский язык",sv:"gilaki",_meta:{dir:["right-to-left"]}},Zd={ca:"guaraní",cs:"Guaraní",da:"Guaraní",de:"Guaraní",en:"Guarani",eo:"gvarania lingvo",es:"guaraní",eu:"Guaraniera",fi:"Guaranin kieli",fr:"guarani",gl:"lingua guaraní",he:"גוארני",hu:"guarani",id:"bahasa Guarani",it:"guaraní",ja:"グアラニー語",nb_NO:"guaraní",nl:"Guarani",pl:"język guarani",pt:"língua guarani",pt_BR:"língua guarani",ru:"гуарани",sl:"Gvaranščina",sv:"guaraní",zh_Hans:"瓜纳尼语",zh_Hant:"瓜拉尼語",_meta:{countries:["BO","PY"],dir:["left-to-right"]}},Yd={de:"Goa-Konkani",en:"Goan Konkani",fr:"konkani de Goa",he:"קונקנית של גואה",ja:"ゴア・コンカニ語",nl:"Goa-Konkani",sv:"goakonkani",_meta:{dir:["left-to-right"]}},Xd={ca:"gorontalo",cs:"Gorontalo",da:"Gorontalo",de:"Gorontalo",en:"Gorontalo",eo:"gorontala lingvo",es:"Idioma gorontalo",eu:"Gorontalo",fi:"Gorontalon kieli",fr:"gorontalo",gl:"Gorontalo",id:"Gorontalo",it:"lingua gorontalo",ja:"ゴロンタロ語",nb_NO:"Gorontalo",nl:"Gorontalo",pl:"język gorontalo",pt:"Gorontalo",pt_BR:"Gorontalo",ru:"Горонтало",sl:"Gorontalo",sv:"gorontalo",zh_Hans:"哥伦打洛语",zh_Hant:"哥倫打洛語",_meta:{dir:["left-to-right"]}},Qd={en:"Ghanaian Pidgin English",eo:"ganaa piĝino",es:"pidgin inglés de Ghana",gl:"Pidgin ghanés",nl:"Ghanees-Pidgin",ru:"ганский пиджин английского",sv:"ghanansk pidginengelska",_meta:{dir:["left-to-right"]}},ef={ca:"llengua de signes alemanya",da:"Tysk tegnsprog",de:"Deutsche Gebärdensprache",en:"German Sign Language",eo:"germana signolingvo",es:"lengua de señas alemana",fi:"saksalainen viittomakieli",fr:"Langue des signes allemande - DGS",hu:"német jelnyelv",id:"Bahasa Isyarat Jerman",it:"lingua dei segni tedesca",ja:"ドイツ手話",nb_NO:"tysk tegnspråk",nl:"Duitse gebarentaal",pl:"niemiecki język migowy",pt:"língua gestual alemã",pt_BR:"língua de sinais alemã",ru:"германский жестовый язык",sv:"tyskt teckenspråk",zh_Hans:"德国手语",zh_Hant:"德國手語",_meta:{dir:["vertical left-to-right"]}},af={ca:"gujarati",cs:"gudžarátština",da:"gujarati",de:"Gujarati",en:"Gujarati",eo:"guĝarata lingvo",es:"guyaratí",eu:"gujaratera",fi:"gudžarati",fr:"gujarati",gl:"lingua guxaratí",he:"גוג'ראטית",hu:"gudzsaráti",id:"Bahasa Gujarati",it:"gujarati",ja:"グジャラート語",nb_NO:"gujarati",nl:"Gujarati",pl:"język gudźarati",pt:"gujarate",pt_BR:"Língua gujarati",ru:"гуджарати",sl:"gudžaratščina",sv:"gujarati",_meta:{dir:["left-to-right"]}},tf={ca:"wayuunaiki",de:"Wayuu",en:"Wayuu",eo:"vajua lingvo",es:"Idioma wayú",eu:"Wayuu hizkuntza",fr:"wayuu",gl:"Lingua wayuu",it:"lingua wayuu",ja:"ワユ語",nb_NO:"wayuu",nl:"Wayuu",pl:"Język wayuu",pt:"Língua wayuu",ru:"Гуахиро",sv:"wayuunaiki",_meta:{dir:["left-to-right"]}},nf={ca:"gun",de:"Gun",en:"Gun",es:"Idioma Gungbe",fr:"gun-gbe",gl:"Lingua gun",he:"גון",ja:"グン語",nb_NO:"gun",ru:"гун",sv:"gun",_meta:{dir:["left-to-right"]}},rf={ca:"gaèlic manx",cs:"manština",da:"Manx",de:"Manx",en:"Manx",eo:"manksa lingvo",es:"manés",eu:"Manxera",fi:"manksi",fr:"mannois",gl:"Lingua manx",he:"מאנית",hu:"manx",id:"Bahasa Manx",it:"mannese",ja:"マン島語",nb_NO:"mansk",nl:"Manx",pl:"język manx",pt:"Língua manesa",pt_BR:"manês",ru:"мэнский язык",sl:"Manska gelščina",sv:"manx",_meta:{dir:["left-to-right"]}},sf={ca:"haussa",cs:"hauština",da:"hausa",de:"Hausa",en:"Hausa",eo:"haŭsa lingvo",es:"hausa",eu:"Hausa",fi:"hausan kieli",fr:"haoussa",gl:"Lingua hausa",he:"האוסה",hu:"hausza",id:"Bahasa Hausa",it:"hausa",ja:"ハウサ語",nb_NO:"hausa",nl:"Hausa",pl:"język hausa",pt:"Língua haúça",pt_BR:"língua hauçá",ru:"хауса",sv:"hausa",zh_Hant:"豪薩語",_meta:{dir:["right-to-left","left-to-right"]}},of={ca:"haida",de:"Haida",en:"Haida",eo:"Ĥajda lingvo",es:"idioma haida",eu:"Haida hizkuntza",fi:"Haida",fr:"haïda",gl:"Lingua haida",id:"Bahasa Haida",it:"haida",ja:"ハイダ語",nb_NO:"Haida (språk)",nl:"Haida",pl:"Język haida",pt:"Língua haida",ru:"Хайда",sv:"haida",zh_Hans:"海达语",zh_Hant:"海達語",_meta:{dir:["left-to-right"]}},lf={ca:"hakka",cs:"Hakka",de:"Hakka",en:"Hakka Chinese",eo:"hakaa lingvo",es:"chino hakka",fi:"Hakka-kiina",fr:"hakka",gl:"Lingua hakka",he:"האקה",hu:"hakka",id:"Hakka",it:"hakka",ja:"客家語",nb_NO:"hakka",nl:"Hakka",pl:"język hakka",pt:"Língua hakka",ru:"хакка",sl:"hakka",sv:"hakka",zh_Hans:"客家语",zh_Hant:"客家話",_meta:{dir:["top-to-bottom"]}},cf={ca:"hawaià",cs:"havajština",da:"Hawaiiansk",de:"Hawaiisch",en:"Hawaiian",eo:"havaja lingvo",es:"hawaiano",eu:"hawaiiera",fi:"havaijin kieli",fr:"hawaïen",gl:"Lingua hawaiana",he:"הוואית",hu:"hawaii",id:"Bahasa Hawaii",it:"hawaiano",ja:"ハワイ語",nb_NO:"hawaiisk",nl:"Hawaïaans",pl:"język hawajski",pt:"havaiano",pt_BR:"língua havaiana",ru:"гавайский язык",sl:"havajščina",sv:"hawaiiska",zh_Hant:"夏威夷語",_meta:{dir:["left-to-right"]}},uf={ca:"hebreu",cs:"hebrejština",da:"hebraisk",de:"Hebräisch",en:"Hebrew",eo:"hebrea lingvo",es:"hebreo",eu:"hebreera",fi:"heprea",fr:"hébreu",gl:"lingua hebrea",he:"עברית",hu:"héber",id:"Ibrani",it:"ebraico",ja:"ヘブライ語",nb_NO:"hebraisk",nl:"Hebreeuws",pl:"język hebrajski",pt:"hebraico",pt_BR:"hebraico",ru:"иврит",sl:"hebrejščina",sv:"hebreiska",zh_Hans:"希伯来语",zh_Hant:"希伯來語",_meta:{countries:["IL"],dir:["right-to-left"]}},df={ca:"hindi de Fiji",cs:"fidžijská hindština",da:"Fiji Hindi",de:"Fidschi-Hindi",en:"Fiji Hindi",eo:"Fiĝia hindia lingvo",es:"hindi de Fiyi",eu:"Fijiko hindi",fi:"Fidžinhindi",fr:"hindi des Fidji",gl:"Hindi de Fidxi",he:"הינדוסטני",id:"Bahasa Fiji Hindi",it:"hindi figiano",ja:"フィジー・ヒンディー語",nb_NO:"Fijiansk hindi",nl:"Fijisch-Hindoestani",pl:"hindi fidżyjskie",pt:"Hindi fijiano",ru:"фиджийский хинди",sv:"fijiansk hindi",_meta:{dir:["left-to-right"]}},ff={ca:"ilongo",da:"hiligajisk",de:"Hiligaynon",en:"Hiligaynon",eo:"hiligajna lingvo",es:"hiligueino",fi:"Hiligainon kieli",fr:"hiligaïnon",hu:"ilongo",id:"Bahasa Hiligaynon",it:"lingua hiligaynon",ja:"ヒリガイノン語",nl:"Hiligaynon",pl:"Język hiligaynon",pt:"Língua hiligaynon",ru:"Хилигайнон",sl:"hiligajnonščina",sv:"hiligaynon",_meta:{dir:["left-to-right"]}},hf={ca:"hindko",da:"hindko",de:"Hindko",en:"Hindko",fi:"Hindko",fr:"hindko",id:"Bahasa Hindko",it:"Hindko",ja:"ヒンドコ語",nb_NO:"hindko",nl:"Hindko",pt:"Língua hindko",ru:"хиндко",sl:"hindščina",sv:"hindko",zh_Hans:"印德科语",zh_Hant:"印德科語",_meta:{dir:["right-to-left"]}},pf={ca:"Hiri Motu",cs:"Hiri motu",da:"Hiri motu",de:"Hiri Motu",en:"Hiri Motu",eo:"hirimotua lingvo",es:"Hiri motu",eu:"Hiri Motu",fi:"Hiri motu",fr:"hiri motou",gl:"Hiri Motu",he:"הארי מוטו",hu:"hiri motu",id:"Bahasa Hiri Motu",it:"hiri motu",ja:"ヒリモツ語",nb_NO:"hiri motu",nl:"Hiri Motu",pl:"Hiri motu",pt:"Língua hiri motu",ru:"хири-моту",sl:"hiri motu",sv:"hiri motu",_meta:{countries:["PG"],dir:["left-to-right"]}},gf={ca:"ho",da:"Ho",de:"Ho",en:"Ho",eo:"hoa lingvo",eu:"Hoera",fi:"Hon kieli",fr:"ho",it:"lingua ho",ja:"ホー語",pl:"Język ho",pt:"Língua ho",ru:"Хо",sv:"ho",_meta:{dir:["left-to-right"]}},mf={de:"Riograndenser Hunsrückisch",en:"Hunsrik",eo:"Sudriogranda germana dialekto",es:"Riograndenser Hunsrückisch",eu:"Riograndenser hunsrückisch",fr:"hunsrik",gl:"Hunsrik",it:"lingua hunsrik",ja:"フンスリュック方言",nl:"Riograndenser Hunsrückisch",pl:"Riograndenser Hunsrückisch",pt:"hunsriqueano riograndense",pt_BR:"hunsriqueano riograndense",ru:"хунсрик",sv:"hunsrik",_meta:{dir:["left-to-right"]}},bf={ca:"alt sòrab",cs:"hornolužická srbština",de:"Obersorbisch",en:"Upper Sorbian",eo:"suprasoraba lingvo",es:"alto sorabo",eu:"Goi-sorabiera",fi:"yläsorbi",fr:"haut-sorabe",gl:"Alto sorabo",he:"סורבית עילית",hu:"felsőszorb",id:"Bahasa Sorbia Hulu",it:"alto sorabo",ja:"高地ソルブ語",nl:"Oppersorbisch",pl:"język górnołużycki",pt:"alto sorábio",pt_BR:"Alto sorábio",ru:"верхнелужицкий язык",sl:"Zgornjelužiščina",sv:"högsorbiska",zh_Hans:"上索布语",zh_Hant:"上索布语",_meta:{dir:["left-to-right"]}},vf={ca:"crioll haitià",cs:"haitská kreolština",da:"haitisk",de:"Haitianisch",en:"Haitian Creole",eo:"haitia kreola lingvo",es:"criollo haitiano",eu:"Haitiko kreolera",fi:"haiti",fr:"créole haïtien",gl:"Crioulo haitiano",he:"קריאולית האיטית",hu:"haiti kreol",id:"Bahasa Kreol Haiti",it:"creolo haitiano",ja:"ハイチ語",nb_NO:"haitisk",nl:"Haïtiaans-Creools",pl:"język kreolski haitański",pt:"crioulo haitiano",pt_BR:"Língua crioula haitiana",ru:"гаитянский креольский язык",sl:"haitijska kreolščina",sv:"haitisk kreol",zh_Hans:"海地克里奥尔语",zh_Hant:"海地克里奧爾語",_meta:{countries:["HT"],dir:["left-to-right"]}},kf={ca:"hongarès",cs:"maďarština",da:"ungarsk",de:"Ungarisch",en:"Hungarian",eo:"hungara lingvo",es:"húngaro",eu:"hungariera",fi:"unkari",fr:"hongrois",gl:"lingua húngara",he:"הונגרית",hu:"magyar",id:"bahasa Hungaria",it:"ungherese",ja:"ハンガリー語",nb_NO:"ungarsk",nl:"Hongaars",pl:"język węgierski",pt:"húngaro",pt_BR:"língua húngara",ru:"венгерский язык",sl:"madžarščina",sv:"ungerska",zh_Hans:"匈牙利语",zh_Hant:"匈牙利語",_meta:{countries:["HU"],dir:["left-to-right","right-to-left"]}},yf={ca:"armeni",cs:"arménština",da:"armensk",de:"Armenisch",en:"Armenian",eo:"armena lingvo",es:"armenio",eu:"armeniera",fi:"armenia",fr:"arménien",gl:"lingua armenia",he:"ארמנית",hu:"örmény",id:"Bahasa Armenia",it:"armeno",ja:"アルメニア語",nb_NO:"armensk",nl:"Armeens",pl:"język ormiański",pt:"língua arménia",pt_BR:"língua armênia",ru:"армянский язык",sl:"armenščina",sv:"armeniska",zh_Hant:"亞美尼亞語",_meta:{countries:["AM"],dir:["left-to-right"]}},_f={ca:"armeni occidental",de:"Westarmenisch",en:"Western Armenian",eo:"okcident-armena lingvo",es:"armenio occidental",fr:"arménien occidental",gl:"Armenio occidental",he:"ארמנית מערבית",id:"Armenia Barat",it:"dialetto armeno occidentale",ja:"西アルメニア語",nb_NO:"vestarmensk",nl:"West-Armeens",pl:"język zachodnioormiański",ru:"западноармянский язык",sl:"zahodna armenščina",sv:"västarmeniska",zh_Hans:"西部亚美尼亚语",zh_Hant:"西部亞美尼亞語",_meta:{dir:["left-to-right"]}},wf={ca:"herero",cs:"Herero",de:"Otjiherero",en:"Herero",eo:"herera lingvo",es:"herero",eu:"Hereroera",fi:"Hereron kieli",fr:"héréro",gl:"Lingua herero",hu:"herero",id:"Bahasa Herero",it:"herero",ja:"ヘレロ語",nb_NO:"herero",nl:"Herero",pl:"Język herero",pt:"hereró",pt_BR:"Língua hereró",ru:"Гереро",sv:"herero",_meta:{dir:["left-to-right"]}},zf={ca:"indonesi",cs:"indonéština",da:"indonesisk",de:"Indonesisch",en:"Indonesian",eo:"indonezia lingvo",es:"indonesio",eu:"Indonesiera",fi:"indonesia",fr:"indonésien",gl:"lingua indonesia",he:"אינדונזית",hu:"indonéz",id:"bahasa Indonesia",it:"indonesiano",ja:"インドネシア語",nb_NO:"indonesisk",nl:"Indonesisch",pl:"język indonezyjski",pt:"língua indonésia",pt_BR:"língua indonésia",ru:"индонезийский язык",sl:"indonezijščina",sv:"indonesiska",zh_Hans:"印度尼西亚语",zh_Hant:"印尼語",_meta:{countries:["ID"],dir:["left-to-right"]}},Sf={ca:"nuosu",de:"Nuosu-Sprache",en:"Nuosu",eo:"Siĉuana jia lingvo",es:"Idioma nuosu",eu:"nuosu",fi:"Sichuanin-yi",fr:"nuosu",gl:"Lingua nuosu",he:"שפת נווסוו",hu:"szecsuani ji",it:"lingua Nuosu",ja:"四川彝語",nl:"Yi",pl:"język nuosu",pt:"Língua Nuosu",ru:"носу",sv:"nuosu",_meta:{dir:["left-to-right"]}},jf={ca:"inupiaq",cs:"Inupiaq",de:"Inupiaq",en:"Inupiaq",eo:"inupiaka lingvo",es:"Idioma iñupiaq",eu:"inupiaq",fi:"Inupiatun",fr:"inupiaq",gl:"Lingua inupiaq",he:"אינופיאק",hu:"inupiak",id:"Bahasa Inupiaq",it:"inupiaq",ja:"イヌピアック語",nb_NO:"Inupiak",nl:"Inupiak",pl:"Język inupiak",pt:"Língua inupiat",ru:"аляскинско-инуитские языки",sv:"iñupiaq",_meta:{dir:["left-to-right"]}},Af={ca:"ilocano",cs:"ilokánština",da:"ilokansk",de:"Ilokano",en:"Ilocano",eo:"iloka lingvo",es:"ilocano",fi:"Iloko",fr:"ilocano",gl:"Lingua ilocana",hu:"ilokano",id:"Bahasa Iloko",it:"ilocano",ja:"イロカノ語",nb_NO:"ilokano",nl:"Ilokano",pl:"język iloko",pt:"Ilocano",ru:"Илоканский язык",sl:"ilokanščina",sv:"ilokano",_meta:{dir:["left-to-right"]}},xf={ca:"ingúix",cs:"inguština",da:"Ingusjisk",de:"Inguschisch",en:"Ingush",eo:"inguŝa lingvo",es:"ingusetio",eu:"Inguxera",fi:"Inguušin kieli",fr:"ingouche",gl:"Lingua ingusetia",he:"אינגושית",hu:"ingus",id:"Bahasa Ingush",it:"lingua inguscia",ja:"イングーシ語",nb_NO:"ingusjisk",nl:"Ingoesjetisch",pl:"Język inguski",pt:"Língua inguche",ru:"ингушский язык",sl:"inguščina",sv:"ingusjiska",_meta:{dir:["left-to-right"]}},Bf={ca:"islandès",cs:"islandština",da:"islandsk",de:"Isländisch",en:"Icelandic",eo:"islanda lingvo",es:"islandés",eu:"islandiera",fi:"islanti",fr:"islandais",gl:"lingua islandesa",he:"איסלנדית",hu:"izlandi",id:"bahasa Islandia",it:"islandese",ja:"アイスランド語",nb_NO:"islandsk",nl:"IJslands",pl:"język islandzki",pt:"islandês",pt_BR:"língua islandesa",ru:"исландский язык",sl:"islandščina",sv:"isländska",zh_Hans:"冰岛语",zh_Hant:"冰島語",_meta:{countries:["IS"],dir:["left-to-right"]}},Ef={ca:"italià",cs:"italština",da:"italiensk",de:"Italienisch",en:"Italian",eo:"itala lingvo",es:"italiano",eu:"italiera",fi:"italia",fr:"italien",gl:"lingua italiana",he:"איטלקית",hu:"olasz",id:"bahasa Italia",it:"italiano",ja:"イタリア語",nb_NO:"italiensk",nl:"Italiaans",pl:"język włoski",pt:"italiano",pt_BR:"língua italiana",ru:"итальянский язык",sl:"italijanščina",sv:"italienska",zh_Hans:"意大利语",zh_Hant:"義大利語",_meta:{countries:["CH","IT","SM","VA"],dir:["left-to-right"]}},Mf={ca:"inuktitut",cs:"inuktitutština",da:"Inuktitut",de:"Inuktitut",en:"Inuktitut",eo:"inuktituta lingvo",es:"lenguas inuit",eu:"Inuitera",fi:"Inuktitut",fr:"inuktitut",gl:"Lingua inuktitut",he:"אינוקטיטוט",hu:"inuktitut",id:"Bahasa Inuktitut",it:"inuktitut",ja:"イヌクティトゥット語",nb_NO:"inuktitut",nl:"Inuktitut",pl:"inuktitut",pt:"Língua inuktitut",pt_BR:"Língua inuktitut",ru:"инуктитут",sl:"inuktitutščina",sv:"inuktitut",zh_Hans:"伊努克提图特语",zh_Hant:"伊努克提圖特語",_meta:{dir:["left-to-right"]}},Lf={ca:"japonès",cs:"japonština",da:"japansk",de:"Japanisch",en:"Japanese",eo:"japana lingvo",es:"japonés",eu:"japoniera",fi:"japani",fr:"japonais",gl:"lingua xaponesa",he:"יפנית",hu:"japán",id:"bahasa Jepang",it:"giapponese",ja:"日本語",nb_NO:"japansk",nl:"Japans",pl:"język japoński",pt:"japonês",pt_BR:"língua japonesa",ru:"японский язык",sl:"japonščina",sv:"japanska",zh_Hans:"日语",zh_Hant:"日語",_meta:{countries:["JP","PW"],dir:["left-to-right","vertical right-to-left"]}},Rf={ca:"jamaican",cs:"Jamajský patois",da:"Patois",de:"Jamaika-Kreolisch",en:"Jamaican Patois",eo:"jamajka-kreola lingvo",es:"Criollo jamaicano",eu:"Jamaikako kreolera",fi:"Jamaikankreoli",fr:"créole jamaïcain",gl:"Patois xamaicano",he:"ג'מייקנית קריאולית",hu:"jamaicai angol",id:"Patwa Jamaika",it:"lingua creola giamaicana",ja:"ジャマイカ・クレオール語",nl:"Jamaicaans-Patois",pl:"język jamajski",pt:"Patoá jamaicano",pt_BR:"Patoá jamaicano",ru:"ямайский креольский язык",sv:"patwa",zh_Hans:"牙买加土语",zh_Hant:"牙買加土語",_meta:{dir:["left-to-right"]}},Hf={en:"Jambi Malay",fr:"malais jambi",id:"Bahasa Melayu Jambi",ja:"ジャンビ・マレー語",pl:"Język jambi",ru:"Джамби",sv:"jambimalajiska",_meta:{dir:["left-to-right"]}},Cf={ca:"javanès",cs:"javánština",da:"javanesisk",de:"Javanisch",en:"Javanese",eo:"java lingvo",es:"javanés",eu:"Javera",fi:"jaavan kieli",fr:"javanais",gl:"Lingua xavanesa",he:"ג'אווה",hu:"jávai",id:"bahasa Jawa",it:"giavanese",ja:"ジャワ語",nb_NO:"javanesisk",nl:"Javaans",pl:"język jawajski",pt:"Língua javanesa",pt_BR:"Língua javanesa",ru:"яванский язык",sl:"javanščina",sv:"javanesiska",zh_Hans:"爪哇语",zh_Hant:"爪哇語",_meta:{dir:["left-to-right","right-to-left"]}},Of={ca:"georgià",cs:"gruzínština",da:"georgisk",de:"Georgisch",en:"Georgian",eo:"kartvela lingvo",es:"georgiano",eu:"georgiera",fi:"georgia",fr:"géorgien",gl:"lingua xeorxiana",he:"גאורגית",hu:"grúz",id:"Bahasa Georgia",it:"georgiano",ja:"ジョージア語",nb_NO:"georgisk",nl:"Georgisch",pl:"język gruziński",pt:"língua georgiana",pt_BR:"língua georgiana",ru:"грузинский язык",sl:"gruzinščina",sv:"georgiska",zh_Hans:"格鲁吉亚语",zh_Hant:"喬治亞語",_meta:{countries:["GE"],dir:["left-to-right"]}},Nf={ca:"karakalpak",cs:"karakalpačtina",de:"Karakalpakisch",en:"Karakalpak",eo:"karakalpaka lingvo",es:"Idioma karakalpako",eu:"Karakalpakera",fi:"karapalkki",fr:"karakalpak",gl:"Lingua karakalpak",he:"קראקלפקית",hu:"karakalpak",id:"Bahasa Karakalpak",it:"karakalpako",ja:"カラカルパク語",nl:"Karakalpaks",pl:"Język karakałpacki",pt:"Língua caracalpaque",ru:"каракалпакский язык",sl:"karakalpakščina",sv:"karakalpakiska",zh_Hant:"卡拉卡爾帕克語",_meta:{dir:["left-to-right"]}},If={ca:"cabil",da:"Kabylsk",de:"Kabylisch",en:"Kabyle",eo:"kabila lingvo",es:"cabilio",eu:"kabiliera",fi:"Kabyyli",fr:"kabyle",gl:"Lingua cabilia",he:"קבילית",hu:"kabil",it:"cabilo",ja:"カビル語",nb_NO:"Kabylsk",nl:"Kabylisch",pl:"Język kabylski",pt:"Língua cabila",pt_BR:"Língua cabila",ru:"кабильский язык",sl:"kabilščina",sv:"kabyliska",zh_Hant:"卡拜爾語",_meta:{dir:["left-to-right"]}},Pf={ca:"kabardí",cs:"kabardo-čerkeština",de:"Kabardinisch",en:"Kabardian",eo:"kabarda lingvo",es:"cabardino",eu:"Kabardera",fi:"Kabardin kieli",fr:"kabarde",gl:"Lingua kabardina",he:"קברדינית",hu:"kabard",it:"cabardo",ja:"カバルド語",nb_NO:"kabardisk",nl:"Kabardijns",pl:"Język kabardyjski",pt:"Língua cabardiana",ru:"кабардино-черкесский язык",sv:"kabardinska",zh_Hans:"卡巴尔达语",zh_Hant:"卡巴爾達語",_meta:{dir:["left-to-right","right-to-left"]}},Tf={ca:"kabiye",cs:"Kabiye",da:"Kabiye",de:"Kabiyé",en:"Kabiye",eo:"Kabijea",es:"kabiyé",fr:"kabiyé",gl:"Lingua kabiye",he:"קאביה",id:"Bahasa Kabiye",ja:"カビエ語",nb_NO:"kabiye",nl:"Kabiye",pl:"język kabre",pt:"Língua kabiyé",ru:"Кабийе",sv:"kabiye",_meta:{dir:["left-to-right"]}},Kf={ca:"katab",de:"Tjap",en:"Tyap",es:"Katab",fi:"Tyap",fr:"tyap",gl:"Lingua tyap",ja:"カタブ語",nl:"Tyap",sv:"katab",_meta:{dir:["left-to-right"]}},Df={ca:"crioll capverdià",cs:"Kapverdská kreolština",da:"Kap Verde-kreol",de:"Kapverdisches Kreol",en:"Cape Verdean Creole",eo:"Kabo-Verda kreolo",es:"criollo caboverdiano",fi:"Kapverdenkreoli",fr:"créole du Cap-Vert",gl:"Crioulo caboverdiano",he:"קריאולית כף ורדה",it:"creolo capoverdiano",ja:"カーボベルデ・クレオール語",nb_NO:"kappverdisk kreol",nl:"Kaapverdisch-Creools",pl:"Język kreolski Wysp Zielonego Przylądka",pt:"crioulo cabo-verdiano",ru:"кабувердьяну",sl:"zelenortska kreolščina",sv:"krioli",_meta:{dir:["left-to-right"]}},Uf={ca:"llengües kongo",cs:"konžština",da:"Kikongo",de:"Kikongo",en:"Kongo",eo:"konga lingvo",es:"kikongo",eu:"Kikongo",fi:"kongon kieli",fr:"kikongo",gl:"Lingua congo",he:"קונגו",hu:"kikongo",id:"Bahasa Kongo",it:"kongo",ja:"コンゴ語",nb_NO:"kongo",nl:"Kongo",pl:"Język kongo",pt:"Kikongo",ru:"конго",sv:"kikongo",_meta:{dir:["left-to-right"]}},Jf={de:"Kaingang",en:"Kaingang",eo:"kainganga lingvo",es:"Lengua kaingang",fr:"kaingang",it:"lingue kaingang",ja:"カインガング語",nb_NO:"Kaingang",nl:"Kaingang",pt:"Língua caingangue",pt_BR:"Língua kaingáng",ru:"Каинганг",_meta:{dir:["left-to-right"]}},qf={ca:"khasi",cs:"khasiština",de:"Khasi",en:"Khasi",eo:"kasia lingvo",eu:"khasiera",fi:"Khasi",fr:"khasi",he:"קהאסי",it:"lingua khasi",ja:"カシ語",nl:"Khasi",pl:"Język khasi",pt:"Língua khasi",ru:"Кхаси",sv:"khasi",zh_Hans:"卡西语",zh_Hant:"卡西語",_meta:{dir:["left-to-right"]}},Ff={en:"Khams Tibetan",fr:"tibétain khamké",hu:"khami tibeti",ja:"カム・チベット語",pl:"Język kham",pt:"Tibetano khams",ru:"камский тибетский язык",sv:"khamtibetanska",_meta:{dir:["left-to-right"]}},Wf={de:"Khowar",en:"Khowar",fi:"Khowarin kieli",fr:"khowar",id:"Bahasa Khowar",it:"khawar",ja:"コワール語",nb_NO:"Khowar",nl:"Khowar",pl:"język khowar",pt:"Língua khovar",ru:"кховар",sv:"khowar",_meta:{dir:["right-to-left"]}},Gf={ca:"gikuyu",cs:"kikujština",de:"Kikuyu",en:"Gikuyu",eo:"kikuja lingvo",es:"kikuyu",eu:"kikuyuera",fi:"Kikujun kieli",fr:"kikuyu",gl:"Lingua kikuyu",he:"קיקויו",hu:"kikuju",id:"Bahasa Kikuyu",it:"gikuyu",ja:"キクユ語",nb_NO:"kikuyu",nl:"Gikuyu",pl:"język kikuju",pt:"Língua kikuyu",pt_BR:"Língua kikuyu",ru:"кикуйю",sv:"kikuyu",zh_Hans:"基库尤语",zh_Hant:"基庫尤語",_meta:{dir:["left-to-right"]}},$f={ca:"kwanyama",cs:"kuanyama",de:"Kwanyama",en:"Kwanyama",eo:"kuanjama lingvo",es:"idioma kuanyama",fr:"kwanyama",gl:"Lingua kwanyama",hu:"kvanyama",it:"kwanyama",ja:"クワニャマ語",nl:"Kwanyama",pl:"Język kwanyama",pt:"Língua cuanhama",ru:"кваньяма",sv:"kwanyama",zh_Hans:"夸摩马语",zh_Hant:"誇摩馬語",_meta:{dir:["left-to-right"]}},Vf={de:"Khmu",en:"Khmu",es:"Idioma khmu",fr:"khmu",ja:"クム語",pl:"Język khmu",pt:"Língua Khmu",ru:"Кхму (язык)",sv:"kammu",_meta:{dir:["left-to-right"]}},Zf={en:"Eastern Pwo",fr:"pwo de l'Est",ja:"東ポー語",nb_NO:"østpwo",nl:"Oostelijk Pwo",pt:"Língua pwo leste",ru:"Восточный пво",sv:"östlig pwo",_meta:{dir:["left-to-right"]}},Yf={ca:"kazakh",cs:"kazaština",da:"kasakhisk",de:"Kasachisch",en:"Kazakh",eo:"kazaĥa lingvo",es:"kazajo",eu:"kazakhera",fi:"kazakki",fr:"kazakh",gl:"Lingua casaca",he:"קזחית",hu:"kazak",id:"bahasa Kazakh",it:"kazako",ja:"カザフ語",nb_NO:"kasakhisk",nl:"Kazachs",pl:"język kazachski",pt:"língua cazaque",pt_BR:"língua cazaque",ru:"казахский язык",sl:"kazaščina",sv:"kazakiska",zh_Hans:"哈萨克语",zh_Hant:"哈薩克語",_meta:{countries:["KZ"],dir:["right-to-left","left-to-right"]}},Xf={ca:"Groenlandès",cs:"grónština",da:"grønlandsk",de:"Grönländisch",en:"Greenlandic",eo:"gronlanda lingvo",es:"groenlandés",eu:"groenlandiera",fi:"grönlannin kieli",fr:"groenlandais",gl:"Lingua grenlandesa",he:"גרינלנדית",hu:"grönlandi",id:"bahasa Greenland",it:"groenlandese",ja:"グリーンランド語",nb_NO:"grønlandsk",nl:"Groenlands",pl:"język grenlandzki",pt:"gronelandês",ru:"гренландский язык",sl:"grenlandščina",sv:"grönländska",zh_Hans:"格陵兰语",zh_Hant:"格陵蘭語",_meta:{dir:["left-to-right"]}},Qf={ca:"khmer",cs:"khmerština",da:"Khmer",de:"Khmer",en:"Khmer",eo:"kmera lingvo",es:"camboyano",eu:"khmerera",fi:"khmer",fr:"khmer",gl:"Lingua khmer",he:"קמרית",hu:"khmer",id:"bahasa Khmer",it:"khmer",ja:"クメール語",nb_NO:"khmer",nl:"Khmer",pl:"język khmerski",pt:"Língua khmer",pt_BR:"Língua khmer",ru:"кхмерский язык",sl:"kmerščina",sv:"khmer",zh_Hant:"高棉語",_meta:{countries:["KH"],dir:["left-to-right"]}},eh={ca:"kannada",cs:"kannadština",da:"kannada",de:"Kannada",en:"Kannada",eo:"kanara lingvo",es:"canarés",eu:"kannada",fi:"kannada",fr:"kannada",gl:"Lingua kanaresa",he:"קאנדה",hu:"kannada",id:"Kannada",it:"kannada",ja:"カンナダ語",nb_NO:"kannada",nl:"Kannada",pl:"język kannada",pt:"Língua canaresa",ru:"каннада",sl:"kanareščina",sv:"kannada",zh_Hans:"卡纳达语",zh_Hant:"康納達語",_meta:{dir:["left-to-right"]}},ah={ca:"coreà",cs:"korejština",da:"koreansk",de:"Koreanisch",en:"Korean",eo:"korea lingvo",es:"coreano",eu:"koreera",fi:"korea",fr:"coréen",gl:"lingua coreana",he:"קוריאנית",hu:"koreai",id:"Korea",it:"coreano",ja:"朝鮮語",nb_NO:"koreansk",nl:"Koreaans",pl:"język koreański",pt:"coreano",pt_BR:"coreano",ru:"корейский язык",sl:"korejščina",sv:"koreanska",zh_Hans:"朝鲜语",zh_Hant:"韓語",_meta:{countries:["KP","KR"],dir:["vertical right-to-left","left-to-right"]}},th={ca:"komi-permià",cs:"komi-permjačtina",da:"Komipermjakisk",de:"Permjakisch",en:"Permyak",eo:"komipermjaka lingvo",es:"komi permio",eu:"komi-permyak",fi:"komipermjakin kieli",fr:"komi-permiak",gl:"Lingua komi-permyac",hu:"permják",it:"permiaco",ja:"コミ・ペルミャク語",nb_NO:"komipermjakisk",nl:"Komi-Permjaaks",pl:"język komi-permiacki",pt:"Língua komi-permyak",ru:"коми-пермяцкий язык",sv:"komi-permjakiska",zh_Hans:"彼尔姆科米语",zh_Hant:"彼爾姆科米語",_meta:{dir:["left-to-right"]}},ih={ca:"kanuri",cs:"kanurijština",de:"Kanuri",en:"Kanuri",eo:"kanura lingvo",es:"kanuri",eu:"Kanuri hizkuntza",fi:"Kanurin kieli",fr:"kanouri",gl:"Lingua kanuri",he:"קאנורי",hu:"kanuri",id:"Bahasa Kanuri",it:"kanuri",ja:"カヌリ語",nl:"Kanuri",pl:"Język kanuri",pt:"Língua kanuri",ru:"Канури",sv:"kanuri",_meta:{dir:["right-to-left","left-to-right"]}},nh={ca:"karatxai-balkar",de:"Karatschai-Balkarisch",en:"Karachay-Balkar",eo:"karaĉaja-balkara lingvo",es:"idioma karachái-bálkaro",eu:"Karatxaiera-balkarera",fi:"Karatšai-balkaarin kieli",fr:"karatchaï-balkar",gl:"Lingua carachaio-bálcara",he:"קראצ׳י-בלקר",hu:"karacsáj-balkár",id:"Bahasa Karachai-Balkar",it:"caraciai-balcaro",ja:"カラチャイ・バルカル語",nb_NO:"karatsjajbalkarsk",nl:"Karatsjai-Balkarisch",pl:"Język karaczajsko-bałkarski",pt:"Língua carachaio-bálcara",ru:"карачаево-балкарский язык",sv:"karatjajbalkariska",zh_Hans:"卡拉恰伊－巴尔卡尔语",zh_Hant:"卡拉恰伊－巴爾卡爾語",_meta:{dir:["left-to-right"]}},rh={ca:"crioll de Sierra Leone",cs:"Krio",de:"Krio",en:"Krio",eo:"Krio",es:"Criollo sierraleonés",fi:"Krion kieli",fr:"krio",gl:"Lingua krio",id:"Bahasa Krio",it:"lingua krio",ja:"クリオ語",nl:"Krio",pl:"Język krio",pt:"Língua krio",ru:"Крио",sv:"krio",zh_Hans:"克里奥语",zh_Hant:"克里奧語",_meta:{dir:["left-to-right"]}},sh={da:"harajansk",de:"Kinaray-a",en:"Karay-a",eo:"karaja lingvo",es:"harayo",fi:"Kinaray-a",fr:"harayen",he:"קריאית",id:"bahasa Karaik’a",it:"caraio",ja:"キナライア語",nb_NO:"Kinaray-a",nl:"Kinaray-a",pl:"język Karaya",pt:"língua Karai-a",ru:"Карайский язык",sl:"kinarajščina",sv:"harajanska",_meta:{dir:["left-to-right"]}},oh={ca:"carelià",cs:"karelština",da:"karelsk",de:"Karelisch",en:"Karelian",eo:"karela lingvo",es:"carelio",eu:"Kareliera",fi:"karjalan kieli",fr:"carélien",gl:"Lingua carelia",he:"קרלית",hu:"karjalai",id:"bahasa Karelia",it:"careliano",ja:"カレリア語",nb_NO:"karelsk",nl:"Karelisch",pl:"język karelski",pt:"Língua carélia",pt_BR:"Língua carélia",ru:"карельский язык",sl:"karelščina",sv:"karelska",zh_Hans:"卡累利阿语",zh_Hant:"卡累利阿語",_meta:{dir:["left-to-right"]}},lh={ca:"caixmiri",cs:"kašmírština",da:"Kashmirisk",de:"Kashmiri",en:"Kashmiri",eo:"kaŝmira lingvo",es:"cachemir",eu:"kaxmirera",fi:"Kašmirin kieli",fr:"cachemiri",gl:"Lingua caxemiresa",he:"קשמירית",hu:"kasmíri",id:"Bahasa Kashmiri",it:"kashmiri",ja:"カシミール語",nb_NO:"kasjmiri",nl:"Kasjmiri",pl:"język kaszmirski",pt:"língua caxemira",pt_BR:"Língua caxemira",ru:"кашмирский язык",sl:"Kašmirščina",sv:"kashmiri",zh_Hans:"克什米尔语",zh_Hant:"喀什米爾語",_meta:{dir:["left-to-right","right-to-left"]}},ch={ca:"ripuarisch",cs:"Ripuarština",de:"Ripuarisch",en:"Ripuarian",eo:"ripuara dialektaro",es:"fráncico ripuario",eu:"ripuariera",fr:"francique ripuaire",gl:"Fráncico ripuario",he:"הניב הריפוארי",it:"lingua ripuaria",ja:"リプアーリ語",nl:"Ripuarisch",pl:"gwary rypuaryjskie",pt:"Língua ripuária",ru:"рипуарские диалекты",sv:"ripuariska",_meta:{dir:["left-to-right"]}},uh={ca:"kurd del nord",cs:"kurmándží",da:"Kurmanji",de:"Kurmandschi",en:"Kurmanji",eo:"kurmanĝa lingvo",es:"kurmanji",eu:"Kurmanji",fi:"Kurmandži",fr:"kurmandji",gl:"lingua kurda",he:"כורמנג'ית",hu:"kurmandzsi",id:"Kurmanji",it:"kurmanji",ja:"クルマンジー",nb_NO:"kurdisk",nl:"Kurmançi",pl:"język kurmandżi",pt:"curmânji",pt_BR:"Curmânji",ru:"курманджи",sl:"kurmandži",sv:"nordkurdiska",zh_Hans:"库尔德语",zh_Hant:"北庫德語",_meta:{countries:["IQ"],dir:["right-to-left","left-to-right"]}},dh={ca:"kumyk",de:"Kumykisch",en:"Kumyk",eo:"kumika lingvo",es:"Idioma cumuco",eu:"kumikera",fi:"Kumykin kieli",fr:"koumyk",he:"קומיקית",hu:"kumik",id:"Bahasa Kumyk",it:"cumucco",ja:"クムク語",nb_NO:"kumykisk",nl:"Koemuks",pl:"język kumycki",pt:"Língua kumyk",pt_BR:"Língua kumyk",ru:"кумыкский язык",sv:"kumykiska",_meta:{dir:["left-to-right","right-to-left"]}},fh={ca:"kootenai",de:"Kutanaha",en:"Kutenai",es:"Idioma kutenai",fi:"Kutenai",fr:"kutenai",gl:"Lingua kutenai",he:"קוטנאי",it:"lingua kutenai",ja:"クテナイ語",nl:"Kutenai",pl:"Język kutenai",pt:"Língua kutenai",ru:"Кутенай",sv:"kootenai",zh_Hans:"库特奈语",zh_Hant:"庫特奈語",_meta:{dir:["left-to-right"]}},hh={ca:"komi",cs:"komi",da:"komi",de:"Komi",en:"Komi",eo:"komia lingvo",es:"komi",eu:"komiera",fi:"komin kieli",fr:"komi",gl:"lingua komi",he:"קומי",hu:"komi",id:"Bahasa Komi",it:"comi",ja:"コミ語",nb_NO:"syrjensk",nl:"Zurjeens",pl:"język komi",pt:"língua komi",ru:"коми язык",sv:"komi",_meta:{dir:["left-to-right"]}},ph={ca:"kerinci",cs:"Kerinci",da:"Kerinci",de:"Kerinci",en:"Kerinci",eo:"Kerinci",es:"Kerinci",eu:"Kerinci",fi:"Kerinci",fr:"kerinci",gl:"Kerinci",hu:"Kerinci",id:"Bahasa Kerinci",it:"kerinci",ja:"クリンチ語",nb_NO:"Kerinci",nl:"Kerinci",pl:"język kerinci",pt:"Kerinci",pt_BR:"Kerinci",sl:"Kerinci",sv:"kerinci",_meta:{dir:["left-to-right"]}},gh={ca:"còrnic",cs:"kornština",da:"Kornisk",de:"Kornisch",en:"Cornish",eo:"kornvala lingvo",es:"córnico",eu:"Kornubiera",fi:"Korni",fr:"cornique",gl:"Lingua córnica",he:"קורנית",hu:"korni",id:"Bahasa Kernowek",it:"cornico",ja:"コーンウォール語",nb_NO:"kornisk",nl:"Cornisch",pl:"język kornijski",pt:"córnico",ru:"корнский язык",sl:"kornijščina",sv:"korniska",zh_Hans:"康沃尔语",zh_Hant:"康瓦爾語",_meta:{dir:["left-to-right"]}},mh={ca:"kirguís",cs:"kyrgyzština",da:"kirgisisk",de:"Kirgisisch",en:"Kyrgyz",eo:"kirgiza lingvo",es:"kirguís",eu:"kirgizera",fi:"kirgiisi",fr:"kirghize",gl:"kirguiz",he:"קירגיזית",hu:"kirgiz",id:"bahasa Kirgiz",it:"kirghiso",ja:"キルギス語",nb_NO:"kirgisisk",nl:"Kirgizisch",pl:"język kirgiski",pt:"quirguiz",pt_BR:"Língua quirguiz",ru:"киргизский язык",sl:"Kirgiščina",sv:"kirgiziska",zh_Hans:"柯尔克孜语",zh_Hant:"吉爾吉斯語",_meta:{countries:["KG"],dir:["right-to-left","left-to-right"]}},bh={ca:"judeocastellà",cs:"ladino",da:"Ladino",de:"Sephardisch",en:"Judaeo-Spanish",eo:"judhispana lingvo",es:"judeoespañol",eu:"Ladino",fi:"ladino",fr:"judéo-espagnol",gl:"Lingua xudeu-española",he:"לאדינו",hu:"ladino",id:"Bahasa Ladino",it:"giudeo-spagnolo",ja:"ラディーノ語",nb_NO:"jødespansk",nl:"Ladino",pl:"ladino",pt:"judeu-espanhol",pt_BR:"Judeu-espanhol",ru:"сефардский язык",sl:"sefardščina",sv:"ladino",_meta:{dir:["left-to-right","right-to-left"]}},vh={de:"Langi",en:"Rangi",eo:"rangia lingvo",fi:"Lango",fr:"Langi (langue de Tanzanie)",ja:"ランギ語",nb_NO:"Rangi",nl:"Langi",pl:"Język langi",sv:"rangi",_meta:{dir:["left-to-right"]}},kh={ca:"luxemburguès",cs:"lucemburština",da:"Letzeburgsk",de:"Luxemburgisch",en:"Luxembourgish",eo:"leceburga lingvo",es:"luxemburgués",eu:"Luxenburgera",fi:"luxemburg",fr:"luxembourgeois",gl:"Lingua luxemburguesa",he:"לוקסמבורגית",hu:"luxemburgi",id:"bahasa Luksemburg",it:"lussemburghese",ja:"ルクセンブルク語",nb_NO:"luxembourgsk",nl:"Luxemburgs",pl:"język luksemburski",pt:"língua luxemburguesa",pt_BR:"língua luxemburguesa",ru:"люксембургский язык",sl:"luksemburščina",sv:"luxemburgiska",zh_Hant:"盧森堡語",_meta:{countries:["LU"],dir:["left-to-right"]}},yh={ca:"lesguià",cs:"lezginština",de:"Lesgisch",en:"Lezgian",eo:"lezga lingvo",es:"Idioma lezgui",eu:"lezgiera",fi:"lezgi",fr:"lezghien",gl:"Lingua lezguia",he:"לזגית",hu:"lezg",id:"Bahasa Lezgia",it:"lesgo",ja:"レズギ語",nb_NO:"lezgisk",nl:"Lezgisch",pl:"język lezgiński",pt:"Língua lezgui",pt_BR:"Língua lezgui",ru:"лезгинский язык",sl:"Lezginščina",sv:"lezginska",zh_Hans:"列兹金语",zh_Hant:"列茲金語",_meta:{dir:["left-to-right"]}},_h={ca:"ganda",cs:"gandština",da:"Luganda",de:"Luganda",en:"Luganda",eo:"ganda lingvo",es:"luganda",eu:"luganda",fi:"Gandan kieli",fr:"luganda",gl:"Lingua luganda",he:"לוגנדה",hu:"ganda",id:"Bahasa Luganda",it:"luganda",ja:"ルガンダ語",nb_NO:"Luganda",nl:"Luganda",pl:"Język luganda",pt:"Língua luganda",ru:"Луганда",sv:"luganda",zh_Hant:"烏干達語",_meta:{dir:["left-to-right"]}},wh={ca:"limburguès",cs:"limburština",de:"Limburgisch",en:"Limburgish",eo:"limburga lingvo",es:"limburgués",eu:"limburgera",fi:"limburgin kieli",fr:"limbourgeois",gl:"Lingua limburguesa",he:"לימבורגית",hu:"limburgi nyelv",id:"Bahasa Limburgish",it:"limburghese",ja:"リンブルフ語",nb_NO:"limburgsk",nl:"Limburgs",pl:"język limburski",pt:"língua limburguesa",ru:"лимбургский язык",sl:"limburščina",sv:"limburgiska",zh_Hans:"林堡语",zh_Hant:"林堡語",_meta:{dir:["left-to-right"]}},zh={ca:"lígur",cs:"ligurština",da:"ligurisk",de:"Ligurisch",en:"Ligurian",eo:"ligura lingvo",es:"ligur",eu:"liguriera",fi:"liguuri",fr:"ligure",gl:"Lingua lígur",he:"ליגורית",hu:"ligur",id:"Bahasa Liguria",it:"lingua ligure",ja:"リグリア語",nb_NO:"ligurisk",nl:"Ligurisch",pl:"język liguryjski",pt:"Língua lígure",ru:"лигурский язык",sl:"ligurščina",sv:"liguriska",_meta:{dir:["left-to-right"]}},Sh={ca:"dialecte laki",da:"Laki",de:"Leki",en:"Laki",eo:"Laki",fi:"laki",fr:"laki",gl:"Lingua laki",id:"Bahasa Laki",ja:"ラーク語",nl:"Laki",pt:"Laki",ru:"лаки",sv:"lekî",_meta:{dir:["left-to-right","right-to-left"]}},jh={ca:"lakota",cs:"lakotština",da:"Lakota",de:"Lakota",en:"Lakota",eo:"lakota lingvo",es:"lakota",fi:"lakota",fr:"lakota",gl:"Lingua lakota",he:"לקוטה",id:"Bahasa Lakota",it:"lakota",ja:"ラコタ語",nb_NO:"lakota",nl:"Lakota",pl:"Język lakota",pt:"Língua dacota",pt_BR:"Língua dacota",ru:"лакота",sv:"lakota",zh_Hans:"拉科塔语",_meta:{dir:["left-to-right"]}},Ah={ca:"ladí",cs:"ladinština",da:"Ladin",de:"Ladinisch",en:"Ladin",eo:"ladina lingvo",es:"ladino",eu:"Ladino",fi:"Ladinin kieli",fr:"ladin",gl:"Lingua ladina",he:"לדינית",hu:"ladin",id:"bahasa Ladin",it:"ladino",ja:"ラディン語",nb_NO:"ladinsk",nl:"Ladinisch",pl:"Język ladyński",pt:"língua ladino-dolomítica",ru:"ладинский язык",sv:"ladinska",zh_Hans:"拉迪恩语",zh_Hant:"拉迪恩語",_meta:{dir:["left-to-right"]}},xh={ca:"llombard",cs:"lombardština",da:"Lombardisk",de:"Lombardisch",en:"Lombard",eo:"lombarda lingvo",es:"lombardo",eu:"Lombardiera",fi:"lombardin kieli",fr:"lombard",gl:"Lingua lombarda",he:"לומברד (שפה)",hu:"lombard",id:"bahasa Lombard",it:"lingua lombarda",ja:"ロンバルド語",nb_NO:"lombardisk",nl:"Lombardisch",pl:"Język lombardzki",pt:"língua lombarda",ru:"ломбардский язык",sl:"lombardščina",sv:"lombardiska",_meta:{dir:["left-to-right"]}},Bh={ca:"lingala",cs:"ngalština",da:"lingala",de:"Lingala",en:"Lingala",eo:"lingala lingvo",es:"lingala",eu:"Lingala",fi:"lingala",fr:"lingala",gl:"Lingua lingala",he:"לינגלה",hu:"lingala",id:"Bahasa Lingala",it:"lingala",ja:"リンガラ語",nb_NO:"lingala",nl:"Lingala",pl:"język lingala",pt:"Língua lingala",ru:"лингала",sv:"lingala",zh_Hant:"林格拉語",_meta:{dir:["left-to-right"]}},Eh={ca:"laosià",cs:"laoština",da:"Lao",de:"Laotisch",en:"Lao",eo:"laŭa lingvo",es:"lao",eu:"Laosera",fi:"lao",fr:"lao",gl:"Lingua laosiana",he:"לאית",hu:"lao",id:"bahasa Lao",it:"lao",ja:"ラーオ語",nb_NO:"laotisk",nl:"Laotiaans",pl:"Język laotański",pt:"Língua laociana",pt_BR:"Língua laociana",ru:"лаосский язык",sl:"laoščina",sv:"lao",zh_Hans:"老挝语",zh_Hant:"老撾語",_meta:{countries:["LA"],dir:["left-to-right"]}},Mh={ca:"lozi",da:"Lozi",de:"Lozi",en:"Lozi",eo:"lozia lingvo",es:"Idioma lozi",fi:"Lozi",fr:"lozi",gl:"Lingua lozi",it:"lingua lozi",ja:"ロジ語",nb_NO:"Lozi",nl:"Lozi",pl:"Język lozi",pt:"Língua lozi",ru:"Лози (язык)",sv:"lozi",zh_Hans:"洛兹语",zh_Hant:"洛茲語",_meta:{dir:["left-to-right"]}},Lh={de:"Nördliches Luri",en:"Northern Luri",es:"luri septentrional",fr:"lori du Nord",gl:"lingua luri setentrional",it:"luri del nord",ja:"北ロル語",nl:"Noordelijk Luri",pt:"luri setentrional",sv:"nordluriska",_meta:{dir:["right-to-left"]}},Rh={ca:"lituà",cs:"litevština",da:"litauisk",de:"Litauisch",en:"Lithuanian",eo:"litova lingvo",es:"lituano",eu:"lituaniera",fi:"liettua",fr:"lituanien",gl:"lingua lituana",he:"ליטאית",hu:"litván",id:"bahasa Lituavi",it:"lituano",ja:"リトアニア語",nb_NO:"litauisk",nl:"Litouws",pl:"język litewski",pt:"língua lituana",pt_BR:"língua lituana",ru:"литовский язык",sl:"litovščina",sv:"litauiska",zh_Hans:"立陶宛语",zh_Hant:"立陶宛語",_meta:{countries:["LT"],dir:["left-to-right"]}},Hh={ca:"latgalià",cs:"latgalština",da:"Letgallisk",de:"Lettgallisch",en:"Latgalian",eo:"latgala lingvo",es:"Idioma latgaliano",eu:"Latgaliera",fi:"latgallin kieli",fr:"latgalien",gl:"Lingua latgaliá",he:"לטגלית",hu:"latgal",id:"Bahasa Latgalia",it:"letgallo",ja:"ラトガリア語",nl:"Letgaals",pl:"język łatgalski",pt:"Língua latgália",ru:"латгальский язык",sv:"lettgalliska",_meta:{dir:["left-to-right"]}},Ch={ca:"mizo",de:"Mizo",en:"Mizo",es:"mizo",eu:"Mizo hizkuntza",fi:"Lusai",fr:"mizo",id:"Bahasa Mizo",it:"lingua Mizo",ja:"ミゾ語",nl:"Mizo",pl:"Język mizo",pt:"Língua mizo",ru:"Мизо",sv:"mizo",zh_Hant:"米佐語",_meta:{dir:["left-to-right"]}},Oh={de:"Südliches Lori",en:"Southern Luri",fr:"luri du Sud",ja:"南ロル語",nl:"Zuid-Luri",ru:"южнолурский язык",sv:"sydluriska",_meta:{dir:["right-to-left"]}},Nh={ca:"letó",cs:"lotyština",da:"lettisk",de:"Lettisch",en:"Latvian",eo:"latva lingvo",es:"letón",eu:"letoniera",fi:"latvia",fr:"letton",gl:"lingua letona",he:"לטבית",hu:"lett",id:"Latvi",it:"lettone",ja:"ラトビア語",nb_NO:"latvisk",nl:"Lets",pl:"język łotewski",pt:"língua letã",pt_BR:"língua letã",ru:"латышский язык",sl:"latvijščina",sv:"lettiska",zh_Hant:"拉脫維亞語",_meta:{countries:["LV"],dir:["left-to-right"]}},Ih={cs:"Lavukaleve",de:"Lavukaleve",en:"Lavukaleve",es:"lavukaleve",fr:"lavukaleve",it:"lavukaleve",ja:"ラヴカルヴェ語",pl:"język lavukaleve",pt:"lavukaleve",ru:"Лавукалеве",sv:"lavukaleve",_meta:{dir:["left-to-right"]}},Ph={ca:"laz",cs:"lazština",de:"Lasisch",en:"Laz",eo:"laza lingvo",es:"laz",fi:"Lazin kieli",fr:"laze",gl:"Lingua laz",he:"לאזית",hu:"láz",id:"bahasa Laz",it:"laz",ja:"ラズ語",nb_NO:"Lazisk",nl:"Lazisch",pl:"Język lazyjski",pt:"laz",ru:"лазский язык",sv:"laziska",zh_Hans:"拉兹語",zh_Hant:"拉茲語",_meta:{dir:["left-to-right"]}},Th={ca:"madurès",cs:"madurština",de:"Madura",en:"Madurese",eo:"madura lingvo",es:"madurés",fi:"Maduran kieli",fr:"madurais",gl:"Lingua maduresa",he:"מאדורית",id:"Madura",it:"madurese",ja:"マドゥラ語",nl:"Madurees",pl:"język madurski",pt:"Língua maduresa",ru:"Мадурский язык",sl:"madureščina",sv:"maduresiska",_meta:{dir:["left-to-right"]}},Kh={ca:"maithili",da:"Maithili",de:"Maithili",en:"Maithili",eo:"maitila lingvo",es:"Maithili",eu:"mahitiliera",fi:"Maithilin kieli",fr:"maïthili",gl:"Lingua maithili",he:"מאיטהילית",hu:"maithili",id:"Bahasa Maithili",it:"maithili",ja:"マイティリー語",nb_NO:"Maithili",nl:"Maithili",pl:"język maithili",pt:"Língua maithili",pt_BR:"Língua maithili",ru:"майтхили",sv:"maithili",zh_Hans:"迈蒂利语",_meta:{dir:["left-to-right"]}},Dh={ca:"mokxa",cs:"mokša",de:"Mokschanisch",en:"Moksha",eo:"mokŝa lingvo",es:"moksha",eu:"Mokxera",fi:"mokša",fr:"moksa",gl:"Lingua moksha",he:"מוקשה",hu:"moksa",id:"Bahasa Moksha",it:"mokša",ja:"モクシャ語",nb_NO:"moksja",nl:"Moksja",pl:"Język moksza",pt:"Língua moksha",pt_BR:"Língua moksha",ru:"мокшанский язык",sv:"moksja",_meta:{dir:["left-to-right"]}},Uh={cs:"mauricijština",de:"Morisyen",en:"Mauritian Creole",eo:"maŭricia kreola lingvo",es:"criollo mauriciano",eu:"Mauritaniako kreolera",fi:"Morisyen",fr:"créole mauricien",hu:"mauritiusi kreol",it:"creolo mauriziano",ja:"モーリシャス・クレオール語",nl:"Mauritiaans-Creools",pl:"język kreolski Mauritiusa",pt:"crioulo de Maurício",ru:"Маврикийский креольский язык",sv:"Mauritiuskreol",_meta:{dir:["left-to-right"]}},Jh={ca:"malgaix",cs:"malgaština",da:"Malagassisk",de:"Malagasy",en:"Malagasy",eo:"malagasa lingvo",es:"malgache",eu:"Malgaxe",fi:"malagassi",fr:"malgache",gl:"Lingua malgaxe",he:"מלגשית",hu:"malgas",id:"Bahasa Malagasi",it:"malgascio",ja:"マダガスカル語",nb_NO:"gassisk",nl:"Malagasi",pl:"język malgaski",pt:"Língua malgaxe",pt_BR:"Língua malgaxe",ru:"малагасийский язык",sv:"malagassiska",zh_Hans:"马达加斯加语",zh_Hant:"馬達加斯加語",_meta:{countries:["MG"],dir:["left-to-right"]}},qh={ca:"marshallès",cs:"maršálština",da:"marshallesisk",de:"Marshallesisch",en:"Marshallese",eo:"marŝala lingvo",es:"marshalés",eu:"Marshallera",fi:"Marshallin kieli",fr:"marshallais",gl:"Lingua marshalesa",he:"מרשלית",hu:"Marshall-szigeteki",id:"Bahasa Marshall",it:"marshallese",ja:"マーシャル語",nb_NO:"marshallesisk",nl:"Marshallees",pl:"Język marszalski",pt:"Língua marshalesa",pt_BR:"Língua marshalesa",ru:"маршалльский язык",sl:"maršalščina",sv:"marshallesiska",zh_Hant:"馬紹爾語",_meta:{countries:["MH"],dir:["left-to-right"]}},Fh={ca:"txeremís oriental",de:"Wiesenmari",en:"Meadow Mari",es:"mari de las praderas",eu:"ekialdeko mari",fi:"niittymarin kieli",fr:"mari des prairies",gl:"Lingua mari das pradeiras",hu:"mezei mari",it:"mari orientale",ja:"牧地マリ語",nb_NO:"østmarisk",nl:"Oost-Tsjeremissisch",pl:"maryjski łąkowy",pt:"Língua mari das campinas",ru:"луговомарийский язык",sv:"östmariska",_meta:{dir:["left-to-right"]}},Wh={ca:"maori",cs:"maorština",da:"maori",de:"Māori",en:"Māori",eo:"maoria lingvo",es:"maorí",eu:"maoriera",fi:"Maorin kieli",fr:"māori",gl:"Lingua maorí",he:"מאורית",hu:"maori",id:"Bahasa Maori",it:"māori",ja:"マオリ語",nb_NO:"maorisk",nl:"Maori",pl:"język maori",pt:"língua maori",pt_BR:"língua maori",ru:"маори",sl:"maorščina",sv:"maori",zh_Hans:"毛利语",zh_Hant:"毛利語",_meta:{countries:["NZ"],dir:["left-to-right"]}},Gh={ca:"micmac",cs:"mikmačtina",de:"Micmac-Sprache",en:"Mi'kmaq",eo:"mikmaka lingvo",es:"micmac",eu:"Mikmakera",fi:"Micmacin kieli",fr:"micmac",gl:"Lingua micmac",id:"Bahasa Mi'kmaq",it:"lingua micmac",ja:"ミクマク語",nl:"Mi'kmaq",pl:"Język mikmak",ru:"микмак",sv:"micmac",_meta:{dir:["left-to-right"]}},$h={ca:"minangkabau",cs:"Minangkabauština",de:"Minangkabauisch",en:"Minangkabau",eo:"minankabaŭa lingvo",es:"minangkabau",eu:"Minangkabauera",fi:"Minangkabaun kieli",fr:"minangkabau",gl:"Lingua minangkabau",he:"מינאנגקבאו",id:"Bahasa Minangkabau",it:"minangkabau",ja:"ミナンカバウ語",nb_NO:"Minangkabau",nl:"Minangkabaus",pl:"Język minangkabau",pt:"Língua minangkabau",pt_BR:"Língua minangkabau",ru:"минангкабау",sl:"minangkabavščina",sv:"minangkabau",zh_Hans:"米南佳保语",zh_Hant:"米南佳保語",_meta:{dir:["left-to-right","right-to-left"]}},Vh={ca:"macedònic",cs:"makedonština",da:"makedonsk",de:"Mazedonisch",en:"Macedonian",eo:"makedona lingvo",es:"macedonio",eu:"mazedoniera",fi:"makedonia",fr:"macédonien",gl:"Lingua macedonia",he:"מקדונית",hu:"macedón",id:"bahasa Makedonia",it:"macedone",ja:"マケドニア語",nb_NO:"makedonsk",nl:"Macedonisch",pl:"język macedoński",pt:"língua macedônia",pt_BR:"Língua macedônia",ru:"македонский язык",sl:"makedonščina",sv:"makedonska",zh_Hans:"马其顿语",zh_Hant:"馬其頓語",_meta:{countries:["MK"],dir:["left-to-right"]}},Zh={ca:"malaiàlam",cs:"malajálamština",da:"Malayalam",de:"Malayalam",en:"Malayalam",eo:"malajala lingvo",es:"malabar",eu:"Malabarera",fi:"malajalam",fr:"malayalam",gl:"lingua malayalam",he:"מלאיאלאם",hu:"malajálam",id:"Malayalam",it:"malayalam",ja:"マラヤーラム語",nb_NO:"malayalam",nl:"Malayalam",pl:"język malajalam",pt:"malaiala",pt_BR:"Língua malaiala",ru:"малаялам",sl:"malajalamščina",sv:"malayalam",zh_Hant:"馬拉雅拉姆語",_meta:{dir:["left-to-right"]}},Yh={ca:"mongol",cs:"mongolština",da:"Mongolsk",de:"Mongolisch",en:"Mongolian",eo:"mongola lingvo",es:"mongol",eu:"Mongoliera",fi:"mongoli",fr:"mongol",gl:"Lingua mongol",he:"מונגולית",hu:"mongol",id:"bahasa Mongol",it:"mongolo",ja:"モンゴル語",nb_NO:"mongolsk",nl:"Mongools",pl:"język mongolski",pt:"Língua mongol",pt_BR:"Língua mongol",ru:"монгольский язык",sl:"mongolščina",sv:"mongoliska",zh_Hans:"蒙古语",zh_Hant:"蒙古語",_meta:{countries:["MN"],dir:["left-to-right","vertical left-to-right"]}},Xh={ca:"manxú",cs:"mandžuština",de:"Mandschurisch",en:"Manchu",eo:"manĉura lingvo",es:"idioma manchú",eu:"mantxuera",fi:"Mantšun kieli",fr:"mandchou",gl:"Lingua manchú",he:"מנצ'ורית",hu:"mandzsu",id:"bahasa Manchu",it:"lingua mancese",ja:"満洲語",nb_NO:"Mandsjuisk",nl:"Mantsjoe",pl:"język mandżurski",pt:"Língua manchu",ru:"маньчжурский язык",sv:"manchuiska",zh_Hans:"满语",zh_Hant:"滿語",_meta:{dir:["vertical left-to-right"]}},Qh={ca:"manipuri",cs:"manipurština",de:"Meitei",en:"Meitei",eo:"manipura lingvo",es:"meitei",eu:"Manipurera",fi:"Manipurin kieli",fr:"meitei",gl:"Lingua meitei",id:"Bahasa Manipuri",it:"manipuri",ja:"マニプリ語",nb_NO:"Meitei-lon",nl:"Meitei",pl:"Język manipuri",pt:"Língua manipuri",ru:"манипури",sv:"meitei",zh_Hans:"曼尼普尔语",zh_Hant:"曼尼普爾語",_meta:{dir:["left-to-right"]}},ep={ca:"mon",de:"Mon",en:"Mon",eo:"Mon",es:"Mon",fr:"môn",gl:"lingua mon",id:"Bahasa Mon",it:"lingua mon",ja:"モン語",nb_NO:"mon",nl:"Mon",pl:"język mon",pt:"língua mon",ru:"монский язык",sv:"mon",zh_Hans:"孟语",zh_Hant:"孟語",_meta:{dir:["left-to-right"]}},ap={ca:"moldau",cs:"moldavština",de:"Moldauisch",en:"Moldovan",eo:"moldava lingvo",es:"moldavo",eu:"Moldaviera",fi:"Moldavian kieli",fr:"moldave",gl:"lingua moldova",he:"מולדובנית",hu:"moldáv",id:"bahasa Moldova",it:"moldavo",ja:"モルドバ語",nb_NO:"moldovsk",nl:"Moldavisch",pl:"Język mołdawski",pt:"Língua moldávia",pt_BR:"língua moldávia",ru:"молдавский язык",sl:"moldavščina",sv:"moldaviska",zh_Hant:"摩爾多瓦語",_meta:{dir:["left-to-right"]}},tp={de:"Innu-Sprache",en:"Innu-aimun",eo:"inua lingvo",es:"innu",eu:"Innuera",fr:"innu-aimun",id:"Bahasa Innu",it:"innu-aimun",ja:"モンタニェ語",nl:"Innu",ru:"Монтанье-наскапи",sv:"innu-aimun",_meta:{dir:["left-to-right"]}},ip={ca:"marathi",cs:"maráthština",da:"marathi",de:"Marathi",en:"Marathi",eo:"marata lingvo",es:"maratí",eu:"marathera",fi:"marathi",fr:"marathi",gl:"Lingua marathi",he:"מראטהית",hu:"maráthi",id:"Bahasa Marathi",it:"marathi",ja:"マラーティー語",nb_NO:"marathi",nl:"Marathi",pl:"język marathi",pt:"marata",pt_BR:"Língua marata",ru:"маратхи",sl:"maratščina",sv:"marathi",zh_Hans:"马拉地语",zh_Hant:"馬拉地語",_meta:{dir:["left-to-right"]}},np={ca:"Lakher",en:"Mara",fr:"Mara",ja:"マラ語",nl:"Mara",ru:"Мара",sv:"mara",_meta:{dir:["left-to-right"]}},rp={ca:"txeremís occidental",de:"Bergmari",en:"Hill Mari",es:"mari de las colinas",eu:"mendebaldeko mari",fi:"vuorimarin kieli",fr:"mari des montagnes",gl:"Lingua mari das montañas",hu:"hegyi mari",it:"lingua mari occidentale",ja:"山地マリ語",nb_NO:"vestmarisk",nl:"West-Tsjeremissisch",pl:"maryjski górski",pt:"mari ocidental",ru:"горномарийский язык",sv:"västmariska",_meta:{dir:["left-to-right"]}},sp={ca:"malai",cs:"malajština",da:"malajisk",de:"Malaiisch",en:"Malay",eo:"malaja lingvo",es:"malayo",eu:"Malaysiera",fi:"malaji",fr:"malais",gl:"lingua malaia",he:"מלאית",hu:"maláj",id:"bahasa Melayu",it:"malese",ja:"マレー語",nb_NO:"malayisk",nl:"Maleis",pl:"język malajski",pt:"malaio",pt_BR:"língua malaia",ru:"малайский язык",sl:"malajščina",sv:"malajiska",zh_Hans:"马来语",zh_Hant:"馬來語",_meta:{countries:["BN","MY","SG"],dir:["left-to-right","right-to-left"]}},op={ca:"maltès",cs:"maltština",da:"maltesisk",de:"Maltesisch",en:"Maltese",eo:"malta lingvo",es:"maltés",eu:"maltera",fi:"malta",fr:"maltais",gl:"Lingua maltesa",he:"מלטית",hu:"máltai",id:"bahasa Malta",it:"maltese",ja:"マルタ語",nb_NO:"maltesisk",nl:"Maltees",pl:"język maltański",pt:"Maltês",pt_BR:"língua maltesa",ru:"мальтийский язык",sl:"malteščina",sv:"maltesiska",_meta:{countries:["MT"],dir:["left-to-right"]}},lp={de:"Musi",en:"Musi",fi:"Musi",fr:"musi",id:"Musi",ja:"ムシ語",nb_NO:"Musi (språk)",nl:"Moesi",pl:"język musi",pt:"Musi",ru:"Муси",sl:"musijščina",sv:"musi",_meta:{dir:["left-to-right"]}},cp={ca:"muskogi",cs:"kríkština",de:"Maskoki",en:"Muscogee",eo:"krika lingvo",es:"idioma maskoki",fi:"Creekin kieli",fr:"creek",gl:"Lingua muscogee",hu:"muszkogi",id:"Bahasa Muskogee",it:"lingua creek",ja:"マスコギ語",nl:"Muskogi",pl:"Język krik",pt:"Língua creek",pt_BR:"Língua creek",ru:"Крикский язык",sv:"muskogi",_meta:{dir:["left-to-right"]}},up={ca:"mirandès",de:"Mirandés",en:"Mirandese",eo:"miranda lingvo",es:"mirandés",eu:"Mirandes",fi:"Mirandeesi",fr:"mirandais",gl:"lingua mirandesa",he:"מירנדזית",hu:"mirandai",id:"Bahasa Miranda",it:"mirandese",ja:"ミランダ語",nb_NO:"mirandesisk",nl:"Mirandees",pl:"język mirandyjski",pt:"mirandês",pt_BR:"mirandês",ru:"мирандский язык",sl:"mirandeščina",sv:"mirandesiska",_meta:{dir:["left-to-right"]}},dp={ca:"mentawai",cs:"Mentawai",da:"Mentawai",de:"Mentawaisprache",en:"Mentawai",eo:"Mentawai",es:"mentawai",eu:"Mentawaiera",fi:"Mentawain kieli",fr:"mentawai",gl:"Lingua mentawai",hu:"Mentawai",id:"Mentawai",it:"lingua mentawai",ja:"メンタワイ語",nb_NO:"Mentawai",nl:"Mentawai",pl:"język mentawai",pt:"Mentawai",pt_BR:"Mentawai",ru:"ментавай",sl:"Mentawai",sv:"mentawai",_meta:{dir:["left-to-right"]}},fp={ca:"birmà",cs:"barmština",da:"burmesisk",de:"Birmanisch",en:"Burmese",eo:"birma lingvo",es:"birmano",eu:"Birmaniera",fi:"burma",fr:"birman",gl:"birmano",he:"בורמזית",hu:"burmai",id:"bahasa Burma",it:"birmano",ja:"ビルマ語",nb_NO:"burmesisk",nl:"Birmaans",pl:"język birmański",pt:"birmanês",pt_BR:"Língua birmanesa",ru:"бирманский язык",sl:"burmanščina",sv:"burmesiska",_meta:{countries:["MM"],dir:["left-to-right"]}},hp={ca:"erzya",cs:"erzja",de:"Ersjanisch",en:"Erzya",eo:"erzja lingvo",es:"erzya",eu:"erziera",fi:"ersä",fr:"erzya",gl:"Lingua erzya",he:"ארזיה",hu:"erza",id:"Bahasa Erzya",it:"erza",ja:"エルジャ語",nb_NO:"erzia",nl:"Erzja",pl:"język erzja",pt:"Língua erzya",pt_BR:"Língua erzya",ru:"эрзянский язык",sl:"Erzjanščina",sv:"erzya",_meta:{dir:["left-to-right"]}},pp={ca:"mazanderani",da:"Mazenisk",de:"Masanderanisch",en:"Mazanderani",eo:"mazandarana lingvo",es:"mazandaraní",eu:"Mazandarandera",fi:"Mazandaranin kieli",fr:"mazandarani",gl:"Lingua mazanderani",he:"מאזנדראנית",hu:"mázandaráni",id:"Bahasa Mazandaran",it:"mazanderani",ja:"マーザンダラーン語",nb_NO:"Mazandarani",nl:"Mazanderani",pl:"język mazanderański",pt:"Língua mazandarani",pt_BR:"Língua mazandarani",ru:"мазандеранский язык",sv:"mazenderani",_meta:{dir:["right-to-left"]}},gp={ca:"nauruà",cs:"nauruština",de:"Nauruisch",en:"Nauruan",eo:"naura lingvo",es:"nauruano",eu:"Nauruera",fi:"Naurun kieli",fr:"nauruan",gl:"Lingua nauruana",he:"נאורית",hu:"naurui",id:"Bahasa Nauru",it:"nauruano",ja:"ナウル語",nb_NO:"naurisk",nl:"Nauruaans",pl:"język naurański",pt:"Língua nauruana",pt_BR:"Língua nauruana",ru:"науруанский язык",sl:"naurujščina",sv:"nauruanska",_meta:{countries:["NR"],dir:["left-to-right"]}},mp={ca:"min nan",cs:"minnanština",da:"Minnan",de:"Min Nan",en:"Southern Min",eo:"minnana lingvo",es:"chino min nan",eu:"hegoaldeko min",fi:"Minnan",fr:"minnan",gl:"lingua min nam",he:"מין דרומי",hu:"minnan",id:"Min Selatan",it:"min nan",ja:"閩南語",nb_NO:"minnan",nl:"Minnanyu",pl:"język minnański",pt:"Min Nan",pt_BR:"Min nan",ru:"южноминьский язык",sl:"južna minščina",sv:"minnan",zh_Hans:"闽南语",zh_Hant:"閩南語",_meta:{dir:["top-to-bottom"]}},bp={ca:"napolità",cs:"neapolština",da:"napolitansk",de:"Neapolitanisch",en:"Neapolitan",eo:"napola lingvo",es:"napolitano",eu:"Napoliera",fi:"napoli",fr:"napolitain",gl:"Lingua napolitana",he:"נפוליטנית",hu:"nápolyi",id:"Bahasa Napolitan",it:"lingua napoletana",ja:"ナポリ語",nb_NO:"napolitansk",nl:"Napolitaans",pl:"język neapolitański",pt:"napolitano",ru:"неаполитанский язык",sl:"neapeljščina",sv:"neapolitanska",zh_Hans:"那不勒斯语",zh_Hant:"那不勒斯語",_meta:{dir:["left-to-right"]}},vp={ca:"bokmål",cs:"bokmål",da:"bokmål",de:"Bokmål",en:"Bokmål",eo:"Bokmål",es:"bokmål",eu:"bokmål",fi:"kirjanorja",fr:"bokmål",gl:"bokmål",he:"נורווגית ספרותית",hu:"bokmål norvég",id:"Bokmål",it:"bokmål",ja:"ブークモール",nb_NO:"bokmål",nl:"Bokmål",pl:"norweski (bokmål)",pt:"bokmål",pt_BR:"Bokmål",ru:"букмол",sl:"bokmål",sv:"bokmål",_meta:{dir:["left-to-right"]}},kp={ca:"baix alemany",cs:"dolnoněmčina",da:"plattysk",de:"Niederdeutsch",en:"Low German",eo:"platgermana lingvo",es:"bajo alemán",eu:"behe-aleman",fi:"alasaksa",fr:"bas allemand",gl:"Lingua baixo alemá",he:"גרמנית תחתית",hu:"alnémet",id:"Bahasa Sachsen Hilir",it:"lingue basso-tedesche",ja:"低地ドイツ語",nb_NO:"nedertysk",nl:"Nederduits",pl:"język dolnoniemiecki",pt:"Baixo-alemão",ru:"нижненемецкий язык",sl:"nizka nemščina",sv:"lågtyska",zh_Hant:"低地德語",_meta:{dir:["left-to-right"]}},yp={ca:"nepalès",cs:"nepálština",da:"nepalesisk",de:"Nepali",en:"Nepali",eo:"nepala lingvo",es:"nepalí",eu:"nepalera",fi:"nepalin kieli",fr:"népalais",gl:"Lingua nepalesa",he:"נפאלית",hu:"nepáli",id:"Bahasa Nepali",it:"nepalese",ja:"ネパール語",nb_NO:"nepali",nl:"Nepalees",pl:"język nepalski",pt:"língua nepali",ru:"непальский язык",sl:"nepalščina",sv:"nepali",zh_Hant:"尼泊爾語",_meta:{countries:["NP"],dir:["left-to-right"]}},_p={cs:"ndondština",de:"Ndonga",en:"Ndonga",eo:"ndonga lingvo",es:"ndonga",eu:"Ndonga",fi:"Ndonga",fr:"ndonga",gl:"Lingua ndonga",hu:"ndonga",it:"ndonga",ja:"ンドンガ語",nl:"Ndonga",pl:"Język ndonga",pt:"Ndonga",ru:"Ндонга",sv:"ndonga",_meta:{dir:["left-to-right"]}},wp={de:"Nias",en:"Nias",eo:"niasa lingvo",fi:"Niasin kieli",fr:"niha",gl:"Lingua nias",id:"Bahasa Nias",it:"lingua nias",ja:"ニアス語",nl:"Nias",pl:"Język nias",pt:"Língua nias",ru:"Ниасский язык",sv:"nias",zh_Hans:"尼亚斯语",zh_Hant:"尼亞斯語",_meta:{dir:["left-to-right"]}},zp={ca:"Niueà",cs:"Niueština",de:"Niueanisch",en:"Niuean",eo:"niua lingvo",es:"Idioma niuano",eu:"Niuera",fi:"Niuen kieli",fr:"niuéen",he:"ניואית",hu:"niuei",id:"Bahasa Niue",it:"lingua niueana",ja:"ニウエ語",nb_NO:"Niuisk",nl:"Niueaans",pl:"Język niue",pt:"Língua niueana",ru:"ниуэ",sv:"niueanska",_meta:{dir:["left-to-right"]}},Sp={ca:"neerlandès",cs:"nizozemština",da:"nederlandsk",de:"Niederländisch",en:"Dutch",eo:"nederlanda lingvo",es:"neerlandés",eu:"nederlandera",fi:"hollanti",fr:"néerlandais",gl:"lingua neerlandesa",he:"הולנדית",hu:"holland",id:"bahasa Belanda",it:"olandese",ja:"オランダ語",nb_NO:"nederlandsk",nl:"Nederlands",pl:"język niderlandzki",pt:"neerlandês",pt_BR:"neerlandês",ru:"нидерландский язык",sl:"nizozemščina",sv:"nederländska",zh_Hans:"荷兰语",zh_Hant:"荷蘭語",_meta:{countries:["BE","NL","SR"],dir:["left-to-right"]}},jp={ca:"nynorsk",cs:"nynorsk",da:"nynorsk",de:"Nynorsk",en:"Nynorsk",eo:"Nynorsk",es:"nynorsk",eu:"nynorsk",fi:"uusnorja",fr:"nynorsk",gl:"nynorsk",he:"נורווגית חדשה",hu:"nynorsk norvég",id:"Nynorsk",it:"nynorsk",ja:"ニーノシュク",nb_NO:"nynorsk",nl:"Nynorsk",pl:"norweski (nynorsk)",pt:"novo norueguês",pt_BR:"novo norueguês",ru:"нюнорск",sl:"nynorsk",sv:"nynorska",zh_Hant:"新挪威語",_meta:{countries:["NO"],dir:["left-to-right"]}},Ap={ca:"noruec",cs:"norština",da:"norsk",de:"Norwegisch",en:"Norwegian",eo:"norvega lingvo",es:"noruego",eu:"norvegiera",fi:"norja",fr:"norvégien",gl:"lingua norueguesa",he:"נורווגית",hu:"norvég",id:"bahasa Norwegia",it:"norvegese",ja:"ノルウェー語",nb_NO:"norsk",nl:"Noors",pl:"język norweski",pt:"língua norueguesa",pt_BR:"língua norueguesa",ru:"норвежский язык",sl:"norveščina",sv:"norska",zh_Hans:"挪威语",zh_Hant:"挪威語",_meta:{countries:["NO"],dir:["left-to-right"]}},xp={ca:"tailandès septentrional",de:"Lanna",en:"Northern Thai",eo:"nord-taja lingvo",es:"idioma tailandés septentrional",fr:"thaï du Nord",he:"תאית צפונית",id:"bahasa Thai Utara",it:"thailandese settentrionale",ja:"北タイ語",nl:"Noordelijk Thai",pl:"Język północnotajski",pt:"Língua tai norte",ru:"Юан (язык)",sl:"severna tajščina",sv:"nordthai",zh_Hans:"北部泰语",zh_Hant:"北部泰語",_meta:{dir:["left-to-right"]}},Bp={ca:"nogai",cs:"nogajština",de:"Nogaisch",en:"Nogai",eo:"nogaja lingvo",es:"nogai",eu:"nogaiera",fi:"Nogain kieli",fr:"nogaï",he:"נוגאי",id:"bahasa Nogai",it:"lingua nogai",ja:"ノガイ語",nb_NO:"nogaisk",nl:"Nogais",pl:"Język nogajski",pt:"Língua nogai",ru:"ногайский язык",sv:"nogai",_meta:{dir:["left-to-right"]}},Ep={en:"N'Ko",fr:"n'ko",gl:"Lingua n'ko",ja:"ンコ語",nl:"N’Ko",pl:"Język n’ko",ru:"Нко",sv:"n'ko",zh_Hans:"康柏语",zh_Hant:"康柏語",_meta:{dir:["right-to-left"]}},Mp={ca:"ndebele meridional",de:"Süd-Ndebele",en:"Southern Ndebele",eo:"Suda Ndebela lingvo",es:"ndebele del Sur",eu:"hegoaldeko ndebelera",fi:"etelä-ndebelen kieli",fr:"nrebele",gl:"Lingua ndebele",he:"נדבלה דרומית",hu:"déli ndebele",id:"Bahasa Ndebele Selatan",it:"ndebele del sud",ja:"南ンデベレ語",nb_NO:"sørndebele",nl:"Zuid-Ndebele",pl:"język ndebele południowy",pt:"língua ndebele",pt_BR:"língua ndebele",ru:"южный ндебеле",sv:"sydndebele",zh_Hans:"南恩德贝莱语",zh_Hant:"南恩德貝萊語",_meta:{countries:["ZA"],dir:["left-to-right"]}},Lp={ca:"pedi",cs:"severní sotho",de:"Nord-Sotho",en:"Northern Sotho",eo:"peda lingvo",es:"Sesotho sa leboa",eu:"pediera",fi:"Pohjoissothon kieli",fr:"sotho du Nord",gl:"Lingua sotho do norte",he:"סוטו צפונית",hu:"északi szoto",id:"Bahasa Sepedi",it:"sotho del nord",ja:"北ソト語",nb_NO:"nordsotho",nl:"Noord-Sotho",pl:"język północny sotho",pt:"língua soto do norte",pt_BR:"língua soto do norte",ru:"северный сото",sl:"severna sotojščina",sv:"nordsotho",zh_Hant:"北索托語",_meta:{dir:["left-to-right"]}},Rp={ca:"navajo",cs:"navažština",da:"navajo",de:"Navajo",en:"Navajo",eo:"navaha lingvo",es:"navajo",eu:"Navajoera",fi:"navajo",fr:"navajo",gl:"Lingua navajo",he:"נאוואחו",hu:"navahó",id:"Bahasa Navajo",it:"lingua navajo",ja:"ナバホ語",nb_NO:"navajo",nl:"Navajo",pl:"język nawaho",pt:"Língua navaja",pt_BR:"Língua navaja",ru:"навахо",sv:"navajo",_meta:{dir:["left-to-right"]}},Hp={ca:"nyanja",cs:"čičevština",da:"nyanja",de:"Chichewa",en:"Chewa",eo:"njanĝa lingvo",es:"chichewa",eu:"txewera",fi:"njandžan kieli",fr:"chewa",gl:"lingua chichewa",he:"צ'ואה",hu:"cseva",id:"Bahasa Chichewa",it:"chewa",ja:"チェワ語",nb_NO:"chewa",nl:"Nyanja",pl:"język cziczewa",pt:"língua nianja",ru:"ньянджа",sl:"čičevščina",sv:"chichewa",_meta:{countries:["MW","ZW"],dir:["left-to-right"]}},Cp={de:"Noongar",en:"Noongar",eu:"nyungar",fr:"nyungan",gl:"Lngua noongar",ja:"ニュンガル語",nl:"Nyunga",sv:"nyunga",_meta:{dir:["left-to-right"]}},Op={ca:"occità",cs:"okcitánština",da:"occitansk",de:"Okzitanisch",en:"Occitan",eo:"okcitana lingvo",es:"occitano",eu:"okzitaniera",fi:"oksitaani",fr:"occitan",gl:"lingua occitana",he:"אוקסיטנית",hu:"okcitán",id:"Oksitan",it:"occitano",ja:"オック語",nb_NO:"oksitansk",nl:"Occitaans",pl:"język oksytański",pt:"língua occitana",pt_BR:"Língua occitana",ru:"окситанский язык",sl:"okcitanščina",sv:"occitanska",_meta:{dir:["left-to-right"]}},Np={ca:"idioma ojibwa",cs:"odžibvejština",da:"Ojibwa",de:"Ojibwe",en:"Ojibwe",eo:"aniŝinabeka lingvo",es:"Idioma ojibwa",eu:"Ojibwera",fi:"Odžibwan kieli",fr:"ojibwé",gl:"Lingua ojibwa",he:"שפת אוג'יבווה",hu:"odzsibva",id:"Bahasa Ojibwe",it:"lingua ojibwe",ja:"オジブウェー語",nb_NO:"Ojibwa",nl:"Ojibwe",pl:"Język odżibwe",pt:"Língua ojíbua",ru:"Оджибве",sl:"očipvejščina",sv:"ojibwa",_meta:{dir:["left-to-right"]}},Ip={ca:"livià",de:"Olonetzisch",en:"Livvi-Karelian",eo:"olonec-karela lingvo",fi:"livvinkarjala",fr:"olonetsien",gl:"Lingua livvi",it:"lingua livvi",ja:"リッヴィ語",nb_NO:"livvisk",nl:"Olonetsisch",pl:"Dialekt ołoniecki",ru:"ливвиковское наречие",sv:"livvi",zh_Hant:"利維卡累利阿語",_meta:{dir:["left-to-right"]}},Pp={ca:"oromo",cs:"oromština",da:"Oromo",de:"Oromo",en:"Oromo",eo:"oroma lingvo",es:"oromo",eu:"Oromoera",fi:"oromon kieli",fr:"oromo",gl:"Lingua oromo",he:"אורומו",hu:"oromó",id:"Bahasa Oromo",it:"lingua oromonica",ja:"オロモ語",nb_NO:"oromo",nl:"Oromo",pl:"Język oromo",pt:"Língua oromo",ru:"оромо",sv:"oromo",_meta:{dir:["left-to-right"]}},Tp={ca:"o'odham",en:"O'odham",es:"o'odham",fr:"o'odham",gl:"Lingua o'odham",it:"lingua o'odham",ja:"パパゴ語",nb_NO:"O'odham",nl:"O'odham",pl:"Język o'odham",pt:"Língua o'odham",ru:"оодхам",sv:"o'odham",_meta:{dir:["left-to-right"]}},Kp={ca:"oriya",cs:"urijština",da:"odia",de:"Oriya",en:"Odia",eo:"odia lingvo",es:"oriya",eu:"Odia",fi:"orija",fr:"oriya",gl:"Lingua oriya",he:"אורייה",hu:"orija",id:"Oriya",it:"oriya",ja:"オリヤー語",nb_NO:"oriya",nl:"Odia",pl:"język orija",pt:"língua oriá",ru:"ория",sl:"orijščina",sv:"oriya",zh_Hans:"奥里亚语",zh_Hant:"奧里亞語",_meta:{dir:["left-to-right"]}},Dp={ca:"osseta",cs:"osetština",da:"Ossetisk",de:"Ossetisch",en:"Ossetian",eo:"oseta lingvo",es:"osetio",eu:"Osetiera",fi:"osseetti",fr:"ossète",gl:"Lingua oseta",he:"אוסטית",hu:"oszét",id:"bahasa Ossetia",it:"osseto",ja:"オセット語",nb_NO:"ossetisk",nl:"Ossetisch",pl:"język osetyjski",pt:"Língua osseta",ru:"осетинский язык",sl:"osetščina",sv:"ossetiska",zh_Hans:"奥塞梯语",zh_Hant:"奧塞提亞語",_meta:{dir:["left-to-right"]}},Up={ca:"osage",cs:"osadžština",en:"Osage",fi:"Osagen kieli",fr:"osage",it:"lingua osage",ja:"オセージ語",nb_NO:"Osage",nl:"Osage",ru:"Оседжи",sv:"osage",_meta:{dir:["left-to-right"]}},Jp={ca:"dialecte dalecarlià",cs:"elvdalština",da:"elvdalsk",de:"Älvdalisch",en:"Elfdalian",eo:"Elfdalia lingvo",es:"idioma dalecarliano",fi:"älvdalska",fr:"dalécarlien",gl:"Lingua dalecarliana",he:"אלוודאלית",it:"övdaliano",ja:"エルヴダーレン語",nb_NO:"älvdalsk",nl:"Elfdaals",pl:"Elfdalski",pt:"Älvdalsmål",ru:"эльвдальский диалект",sv:"älvdalska",_meta:{dir:["left-to-right"]}},qp={ca:"panjabi (Shahmukhi)",cs:"paňdžábština (šáhmukhí)",da:"Punjabi (Shahmukhi)",de:"Panjabi (Shahmukhi)",en:"Punjabi (Shahmukhi)",eo:"panĝaba lingvo (Ŝahmuĥi-ortografio)",es:"panyabí (Shahmuji)",eu:"Punjabera (Shahmukhi)",fi:"punjabin kieli (Shahmukhi)",fr:"pendjabi (shahmukhi)",gl:"lingua punjabi (Shahmukhi)",he:"פנג'אבי (אלפבית שאהמוקי)",hu:"pandzsábi (Shahmukhi)",id:"Bahasa Punjab (Abjad Shahmukhi)",it:"punjabi (Shahmukhī)",ja:"パンジャーブ語 (シャームキー文字)",nb_NO:"panjabi (Shahmukhi)",nl:"Punjabi (Shahmukhi)",pl:"język pendżabski (szachmukhi)",pt:"Língua panjabi (Shahmukhi)",ru:"панджаби (Шахмукхи)",sl:"pandžabščina (šahmuki)",sv:"punjabi (Shahmukhi)",zh_Hans:"旁遮普语 (Shahmukhi)",zh_Hant:"旁遮普語 (Shahmukhi)",_meta:{dir:["right-to-left","left-to-right"]}},Fp={ca:"pangasinan",cs:"pangasinan",da:"pangasinansk",de:"Pangasinensisch",en:"Pangasinan",eo:"pangasina lingvo",es:"pangasinense",eu:"pagasinanera",fi:"Pangasinanin kieli",fr:"pangassinais",gl:"Lingua pangasinesa",hu:"pangasinan",id:"Pangasinan",it:"pangasinan",ja:"パンガシナン語",nb_NO:"pangasinansk",nl:"Pangasinan",pl:"Język pangasinan",pt:"Língua pangasinesa",ru:"Пангасинанский язык",sv:"pangasinan",zh_Hans:"邦阿西楠语",_meta:{dir:["left-to-right"]}},Wp={ca:"papiament",cs:"Papiamento",da:"papiamento",de:"Papiamentu",en:"Papiamento",eo:"Papiamento",es:"papiamento",eu:"Papiamento",fi:"Papiamentu",fr:"papiamento",gl:"Papiamento",he:"פאפיאמנטו",hu:"papiamentu",id:"Bahasa Papiamento",it:"lingua papiamento",ja:"パピアメント語",nb_NO:"papiamento",nl:"Papiaments",pl:"Język papiamento",pt:"Papiamento",ru:"папьяменто",sl:"Papiamento",sv:"papiamento",zh_Hans:"帕皮阿门托语",zh_Hant:"帕皮阿門托語",_meta:{dir:["left-to-right"]}},Gp={ca:"picard",da:"Pikardisk",de:"Picardisch",en:"Picard",eo:"pikarda franca dialekto",es:"picardo",eu:"Pikardiera",fi:"Picardin kieli",fr:"picard",gl:"Lingua picarda",he:"פיקארד",hu:"pikárd",id:"Bahasa Picard",it:"piccardo",ja:"ピカルディ語",nb_NO:"pikardisk",nl:"Picardisch",pl:"język pikardyjski",pt:"picardo",ru:"пикардский язык",sl:"pikardščina",sv:"pikardiska",_meta:{dir:["left-to-right"]}},$p={ca:"alemany pennsilvanià",cs:"pensylvánská němčina",de:"Pennsylvania Dutch",en:"Pennsylvania German",eo:"pensilvangermana dialekto",es:"alemán de Pensilvania",eu:"Pennsylvaniako aleman",fi:"Pennsylvaniansaksa",fr:"allemand de Pennsylvanie",gl:"Alemán de Pensilvania",hu:"pennsylvaniai német",id:"Bahasa Jerman Pennsylvania",it:"tedesco della Pennsylvania",ja:"ペンシルベニアドイツ語",nb_NO:"pennsylvaniatysk",nl:"Pennsylvania-Duits",pl:"język niemiecki w Pensylwanii",pt:"Alemão da Pensilvânia",ru:"пенсильванско-немецкий диалект",sl:"Pensilvanska nemščina",sv:"pennsylvaniatyska",_meta:{dir:["left-to-right"]}},Vp={ca:"plautdietsch",cs:"Plautdietsch",de:"Plautdietsch",en:"Plautdietsch",eo:"plaŭtdiĉa lingvo",es:"Plautdietsch",fr:"bas allemand mennonite",he:"פלאוטדיץ'",id:"Bahasa Plautdietsch",it:"lingua plautdietsch",ja:"メノナイト低地ドイツ語",nb_NO:"plautdietsch",nl:"Plautdietsch",pl:"plautdietsch",pt:"Plautdietsch",ru:"Немецко-платский диалект",sv:"plautdietsch",_meta:{dir:["left-to-right"]}},Zp={ca:"Pfälzisch",cs:"falčtina",de:"Pfälzisch",en:"Palatinate German",eo:"Palatinata germana dialektaro",es:"alemán palatino",eu:"Palatinatuko alemana",fi:"pfaltsi",fr:"palatin",gl:"Alemán do Palatinado",hu:"pfalzi",it:"tedesco palatino",ja:"プファルツ語",nl:"Paltsisch",pl:"Gwary palatynackie",ru:"Пфальцский диалект",sv:"pfalziska",_meta:{dir:["left-to-right"]}},Yp={ca:"pitcairnès",cs:"Pitcairnština",da:"Pitkairnsk",de:"Pitcairn-Englisch",en:"Pitkern",eo:"pitkarna lingvo",es:"pitcairnés",fi:"Pitcairnin kieli",fr:"pitcairnais",gl:"Pitcairnés",he:"פיטקרנית",hu:"pitcairni",it:"pitcairnese",ja:"ピトケアン語",nb_NO:"pitkairnsk",nl:"Pitcairnees",pl:"Język pitkarnyjski",pt:"pitcairnes",pt_BR:"Língua pitcairnesa",ru:"питкэрнский язык",sv:"pitcairnesiska",_meta:{dir:["left-to-right"]}},Xp={de:"Pijin",en:"Pijin",eo:"piĵina lingvo",es:"Pidgin salomonense",fi:"Pijin",fr:"pijin",it:"lingua pijin",ja:"ピジン語",pl:"Język neosalomoński",pt:"Língua pijin",ru:"Пиджин Соломоновых Островов",sv:"pijin",_meta:{dir:["left-to-right"]}},Qp={de:"Pitjantjatjara Sprache",en:"Pitjantjatjara",eo:"pitjantjatjara lingvo",es:"Pitjantjatjara",fr:"pitjantjatjara",gl:"Lingua pitjantjatjara",it:"lingua pitjantjatjara",ja:"ピッチャンチャジャーラ語",nl:"Pitjantjatjara",pl:"Język pitjantjatjara",ru:"питянтятяра",sv:"pitjantjatjara",_meta:{dir:["left-to-right"]}},eg={ca:"polonès",cs:"polština",da:"polsk",de:"Polnisch",en:"Polish",eo:"pola lingvo",es:"polaco",eu:"poloniera",fi:"puola",fr:"polonais",gl:"lingua polaca",he:"פולנית",hu:"lengyel",id:"bahasa Polski",it:"polacco",ja:"ポーランド語",nb_NO:"polsk",nl:"Pools",pl:"język polski",pt:"polaco",pt_BR:"língua polonesa",ru:"польский язык",sl:"poljščina",sv:"polska",zh_Hans:"波兰语",zh_Hant:"波蘭語",_meta:{countries:["PL"],dir:["left-to-right"]}},ag={ca:"piemontès",de:"Piemontesisch",en:"Piedmontese",eo:"piemonta lingvo",es:"piamontés",eu:"Piemontera",fi:"Piemonten kieli",fr:"piémontais",gl:"Lingua piemontesa",he:"פיימונטית",hu:"piemonti",id:"Bahasa Piemonte",it:"lingua piemontese",ja:"ピエモンテ語",nb_NO:"piemontesisk",nl:"Piëmontees",pl:"język piemoncki",pt:"Língua piemontesa",pt_BR:"Língua piemontesa",ru:"пьемонтский язык",sv:"piemontesiska",zh_Hans:"皮埃蒙特语",zh_Hant:"皮埃蒙特語",_meta:{dir:["left-to-right"]}},tg={ca:"pòntic",cs:"Pontština",de:"Pontisch",en:"Pontic Greek",eo:"Ponta greka lingvo",es:"griego póntico",fr:"grec pontique",gl:"Grego póntico",hu:"pontoszi görög",id:"Bahasa Yunani Pontus",it:"pontico",ja:"ギリシア語ポントス方言",nb_NO:"pontisk gresk",nl:"Pontisch",pl:"język pontyjski",pt:"Grego do Ponto",ru:"понтийский язык",sv:"pontisk grekiska",zh_Hant:"旁狄希臘語",_meta:{dir:["left-to-right"]}},ig={ca:"prussià",cs:"pruština",de:"Altpreußisch",en:"Old Prussian",eo:"antikva prusa lingvo",es:"prusiano antiguo",eu:"Prusiera zahar",fi:"muinaispreussin kieli",fr:"vieux-prussien",gl:"Lingua prusiana antiga",he:"פרוסית עתיקה",hu:"óporosz",id:"Bahasa Prusia Kuno",it:"antico prussiano",ja:"プロシア語",nb_NO:"gammelprøyssisk",nl:"Oudpruisisch",pl:"język pruski",pt:"prussiano antigo",pt_BR:"Prussiano antigo",ru:"прусский язык",sv:"prusiska",_meta:{dir:["left-to-right"]}},ng={ca:"paixtu",cs:"paštština",da:"Pashto",de:"Paschtu",en:"Pashto",eo:"paŝtuna lingvo",es:"pastún",eu:"paxtuera",fi:"paštun kieli",fr:"pachto",gl:"Lingua paxta",he:"פשטו",hu:"pastu",id:"bahasa Pashtun",it:"pashtu",ja:"パシュトー語",nb_NO:"pashto",nl:"Pasjtoe",pl:"język paszto",pt:"pastó",pt_BR:"pastó",ru:"пушту",sl:"paštunščina",sv:"pashto",zh_Hans:"普什图语",zh_Hant:"普什圖語",_meta:{countries:["AF"],dir:["right-to-left"]}},rg={ca:"portuguès",cs:"portugalština",da:"portugisisk",de:"Portugiesisch",en:"Portuguese",eo:"portugala lingvo",es:"portugués",eu:"portugesa",fi:"portugali",fr:"portugais",gl:"lingua portuguesa",he:"פורטוגזית",hu:"portugál",id:"bahasa Portugis",it:"portoghese",ja:"ポルトガル語",nb_NO:"portugisisk",nl:"Portugees",pl:"język portugalski",pt:"português",pt_BR:"português",ru:"португальский язык",sl:"portugalščina",sv:"portugisiska",zh_Hans:"葡萄牙语",zh_Hant:"葡萄牙語",_meta:{countries:["AO","BR","CV","GQ","GW","MZ","PT","ST","TL"],dir:["left-to-right"]}},sg={ca:"portuguès brasiler",cs:"brazilská portugalština",da:"brasiliansk portugisisk",de:"brasilianisches Portugiesisch",en:"Brazilian Portuguese",eo:"brazilportugala lingvo",es:"portugués brasileño",eu:"Brasilgo portuges",fi:"brasilianportugali",fr:"portugais brésilien",gl:"portugués do Brasil",he:"פורטוגזית ברזילאית",hu:"brazíliai portugál",id:"Portugis Brasil",it:"portoghese brasiliano",ja:"ブラジルポルトガル語",nb_NO:"brasiliansk portugisisk",nl:"Braziliaans-Portugees",pl:"brazylijska odmiana języka portugalskiego",pt:"português brasileiro",pt_BR:"português brasileiro",ru:"бразильский вариант португальского языка",sl:"brazilska portugalščina",sv:"brasiliansk portugisiska",zh_Hans:"巴西葡萄牙语",zh_Hant:"巴西葡萄牙語",_meta:{dir:["left-to-right"]}},og={ca:"quítxua",cs:"kečuánština",da:"quechua",de:"Quechua",en:"Quechua",eo:"keĉua lingvaro",es:"lenguas quechuas",eu:"kitxua",fi:"ketšua",fr:"quechua",gl:"linguas quechuas",he:"קצ'ואה",hu:"kecsua",id:"Bahasa Quechua",it:"quechua",ja:"ケチュア語",nb_NO:"quechua",nl:"Quechua",pl:"język keczua",pt:"quíchua",pt_BR:"quíchua",ru:"кечуа",sl:"kečuanščina",sv:"quechua",zh_Hans:"克丘亚语",zh_Hant:"奇楚瓦語",_meta:{countries:["BO","PE"],dir:["left-to-right"]}},lg={ca:"quitxé",de:"Quiché-Sprache",en:"K’iche’",es:"Idioma quiché",eu:"K'iche'era",fi:"k'iche'n kieli",fr:"quiché",gl:"Lingua kʼicheʼ",he:"קאיצ'ה",id:"Bahasa K'iche'",it:"lingua k'iche'",ja:"キチェ語",nb_NO:"Quiché",nl:"K'iche'",pl:"Język kicze",pt:"Língua quiché",ru:"киче",sv:"quiché",_meta:{dir:["left-to-right"]}},cg={ca:"maori de les Illes Cook",da:"rarotongansk",de:"Rarotonganisch",en:"Cook Islands Maori",eo:"Kuk-insulara maoria lingvo",es:"Idioma rarotongano",eu:"Cook uharteetako māoriera",fi:"Rarotongan kieli",fr:"maori des îles Cook",gl:"Lingua maorí das Illas Cook",hu:"Cook-szigeteki maori",ja:"ラロトンガ語",nb_NO:"rarotongesisk",nl:"Cookeilandmaori",pl:"język maoryski Wysp Cooka",pt:"Maori das Ilhas Cook",ru:"кукский язык",sv:"rarotongesiska",zh_Hant:"庫克羣島毛利人",_meta:{dir:["left-to-right"]}},ug={ca:"romanyol",de:"Romagnol",en:"Romagnol",eo:"romanja lingvo",es:"romañol",fi:"romagnolin kieli",fr:"romagnol",hu:"romagnai nyelv",id:"bahasa Romagnol",it:"romagnolo",ja:"ロマーニャ語",nl:"Romagnools",pt:"romagnol",ru:"Романьольский язык",sl:"romanjolščina",sv:"romagnol",zh_Hans:"罗马涅语",zh_Hant:"羅馬涅語",_meta:{dir:["left-to-right"]}},dg={ca:"rifeny",de:"Tarifit",en:"Tarifit",es:"rifeño",eu:"Tmaziɣt",fi:"Tarifit",fr:"rifain",gl:"Lingua rifeña",he:"ריפית",it:"tarifit",ja:"リーフ語",nl:"Riffijns",pl:"Język tarifit",pt:"Língua rifenha",ru:"Рифский язык",sl:"tarifit",sv:"rif",zh_Hans:"里夫语",zh_Hant:"里夫語",_meta:{dir:["right-to-left","left-to-right","top-to-bottom","bottom-to-top"]}},fg={ca:"arakanès",en:"Rakhine",fr:"arakanais",gl:"Lingua arakanesa",id:"bahasa Rakhine",ja:"ラカイン語",nl:"Arakanees",pl:"Język arakański",pt:"Língua arracanesa",ru:"Араканский язык",sv:"arakanesiska",zh_Hans:"若开语",zh_Hant:"若開語",_meta:{dir:["left-to-right"]}},hg={ca:"romanx",cs:"rétorománština",da:"Rætoromansk",de:"Bündnerromanisch",en:"Romansh",eo:"romanĉa lingvo",es:"romanche",eu:"erromantxe",fi:"retoromaani",fr:"romanche",gl:"lingua romanche",he:"רומאנש",hu:"romans",id:"bahasa Romansh",it:"romancio",ja:"ロマンシュ語",nb_NO:"retoromansk",nl:"Reto-Romaans",pl:"Język romansz",pt:"romanche",pt_BR:"língua romanche",ru:"романшский язык",sl:"retoromanščina",sv:"rätoromanska",_meta:{countries:["CH"],dir:["left-to-right"]}},pg={de:"Karpathen-Romani",en:"Carpathian Romani",fr:"romani central",gl:"Romaní dos Cárpatos",it:"lingua carpato-romanì",ja:"カルパティア・ロマ語",nl:"Karpathisch-Romani",ru:"Карпатские диалекты цыганского языка",sv:"centralromani",_meta:{dir:["left-to-right"]}},gg={ca:"romaní",cs:"romština",da:"Romani",de:"Romani",en:"Romani",eo:"cigana lingvo",es:"romaní",eu:"erromaniera",fi:"romanikieli",fr:"romani",gl:"lingua romaní",he:"רומאני",hu:"cigány nyelv",id:"Bahasa Romani",it:"romaní",ja:"ロマ語",nb_NO:"romanés",nl:"Romani",pl:"język romski",pt:"Romani",pt_BR:"Romani",ru:"цыганский язык",sl:"romščina",sv:"romani",_meta:{dir:["left-to-right"]}},mg={ca:"rundi",cs:"kirundi",de:"Kirundi",en:"Kirundi",eo:"burunda lingvo",es:"kirundi",eu:"kirundi",fi:"Kirundi",fr:"kirundi",gl:"Lingua kirundi",he:"קירונדי",hu:"kirundi",id:"Bahasa Kirundi",it:"kirundi",ja:"ルンディ語",nb_NO:"kirundi",nl:"Kirundi",pl:"język rundi",pt:"Língua kirundi",ru:"рунди",sv:"kirundi",_meta:{countries:["BI"],dir:["left-to-right"]}},bg={ca:"romanès",cs:"rumunština",da:"rumænsk",de:"Rumänisch",en:"Romanian",eo:"rumana lingvo",es:"rumano",eu:"errumaniera",fi:"romania",fr:"roumain",gl:"lingua romanesa",he:"רומנית",hu:"román",id:"Rumania",it:"romeno",ja:"ルーマニア語",nb_NO:"rumensk",nl:"Roemeens",pl:"język rumuński",pt:"língua romena",pt_BR:"língua romena",ru:"румынский язык",sl:"romunščina",sv:"rumänska",zh_Hant:"羅馬尼亞語",_meta:{countries:["MD","RO"],dir:["left-to-right"]}},vg={ca:"rus",cs:"ruština",da:"russisk",de:"Russisch",en:"Russian",eo:"rusa lingvo",es:"ruso",eu:"errusiera",fi:"venäjä",fr:"russe",gl:"lingua rusa",he:"רוסית",hu:"orosz",id:"bahasa Rusia",it:"russo",ja:"ロシア語",nb_NO:"russisk",nl:"Russisch",pl:"język rosyjski",pt:"russo",pt_BR:"russo",ru:"русский язык",sl:"ruščina",sv:"ryska",zh_Hans:"俄语",zh_Hant:"俄語",_meta:{countries:["BY","KG","KZ","RU","TJ"],dir:["left-to-right"]}},kg={ca:"rutè modern",cs:"rusínština",da:"Rusinsk",de:"Russinisch",en:"Rusyn",eo:"rusina lingvo",es:"rusino",eu:"Rusinera",fi:"ruteeni",fr:"rusyn",gl:"Lingua rutena",he:"רוסינית",hu:"ruszin",id:"bahasa Rusyn",it:"ruteno",ja:"ルシン語",nb_NO:"rusinsk",nl:"Roetheens",pl:"Język rusiński",pt:"Língua rusyn",pt_BR:"Língua rusyn",ru:"русинский язык",sl:"rusinščina",sv:"rusinska",_meta:{dir:["left-to-right"]}},yg={ca:"aromanès",cs:"arumunština",da:"Aromunsk",de:"Aromunisch",en:"Aromanian",eo:"arumana lingvo",es:"arumano",eu:"arumaniera",fi:"aromania",fr:"aroumain",gl:"Lingua arromanesa",he:"ארומנית",hu:"aromán",id:"Bahasa Arumania",it:"arumeno",ja:"アルーマニア語",nb_NO:"arumensk",nl:"Aroemeens",pl:"Język arumuński",pt:"língua arromena",ru:"арумынский язык",sl:"aromunščina",sv:"arumänska",_meta:{dir:["left-to-right"]}},_g={ca:"ruandès",cs:"rwandština",da:"Kinyarwanda",de:"Kinyarwanda",en:"Kinyarwanda",eo:"ruanda lingvo",es:"kiñaruanda",eu:"kinyaruanda",fi:"ruandan kieli",fr:"kinyarwanda",gl:"Lingua ruanda",he:"קינירואנדה",hu:"kinyarvanda",id:"Bahasa Kinyarwanda",it:"kinyarwanda",ja:"ルワンダ語",nb_NO:"kinyarwanda",nl:"Kinyarwanda",pl:"język ruanda",pt:"Língua kinyarwanda",ru:"руанда",sv:"rwanda",zh_Hant:"盧安達語",_meta:{countries:["RW"],dir:["left-to-right"]}},wg={ca:"llengua d'Okinawa",cs:"okinawština",en:"Okinawan",eo:"okinava lingvo",es:"okinawense",eu:"okinawera",fi:"Okinawan kieli",fr:"okinawaïen",gl:"Lingua okinawana",he:"השפה האוקינאווית",hu:"okinavai nyelv",id:"Bahasa Okinawa",it:"lingua di Okinawa",ja:"沖縄語",nb_NO:"Okinawa",nl:"Okinawaans",pl:"Język okinawski",pt:"okinawano",ru:"Окинавский язык",sv:"okinawianska",zh_Hans:"冲绳语",zh_Hant:"沖繩語",_meta:{dir:["left-to-right","vertical right-to-left"]}},zg={ca:"iacut",cs:"jakutština",da:"jakutisk",de:"Jakutisch",en:"Yakut",eo:"jakuta lingvo",es:"Idioma yakuto",eu:"Sakhera",fi:"jakuutti",fr:"iakoute",gl:"Lingua sakha",he:"סאחה",hu:"jakut",id:"Bahasa Yakut",it:"sacha",ja:"サハ語",nb_NO:"sakha",nl:"Jakoets",pl:"Język jakucki",pt:"Língua iacuta",ru:"якутский язык",sv:"jakutiska",_meta:{dir:["left-to-right"]}},Sg={ca:"santali",cs:"santálština",da:"Santali",de:"Santali",en:"Santali",eo:"santala lingvo",es:"idioma santalí",eu:"Santali",fi:"Santalin kieli",fr:"santâlî",gl:"lingua santali",he:"סנטלית",hu:"szantáli",id:"Bahasa Santali",it:"santali",ja:"サンタル語",nb_NO:"Santali",nl:"Santali",pl:"język santali",pt:"língua santali",ru:"Сантали",sl:"santalščina",sv:"santhali",zh_Hant:"桑塔利語",_meta:{dir:["left-to-right"]}},jg={ca:"sard",cs:"sardinština",da:"Sardisk",de:"Sardisch",en:"Sardinian",eo:"sarda lingvo",es:"sardo",eu:"Sardiniera",fi:"sardi",fr:"sarde",gl:"Lingua sarda",he:"סרדו",hu:"szárd",id:"Bahasa Sardinia",it:"sardo",ja:"サルデーニャ語",nb_NO:"sardisk",nl:"Sardijns",pl:"Język sardyński",pt:"Língua sarda",ru:"сардинский язык",sl:"Sardinščina",sv:"sardiska",zh_Hans:"撒丁语",zh_Hant:"薩丁尼亞語",_meta:{dir:["left-to-right"]}},Ag={ca:"sicilià",cs:"sicilština",da:"siciliansk",de:"Sizilianisch",en:"Sicilian",eo:"sicilia lingvo",es:"siciliano",eu:"Siziliera",fi:"sisilia",fr:"sicilien",gl:"Lingua siciliana",he:"סיציליאנית",hu:"szicíliai",id:"Bahasa Sisilia",it:"siciliano",ja:"シチリア語",nb_NO:"siciliansk",nl:"Siciliaans",pl:"Język sycylijski",pt:"Língua siciliana",pt_BR:"Língua siciliana",ru:"сицилийский язык",sl:"sicilijanščina",sv:"sicilianska",_meta:{dir:["left-to-right"]}},xg={ca:"escocès",cs:"skotština",da:"skotsk",de:"Scots",en:"Scots",eo:"skota lingvo",es:"escocés",eu:"eskoziera",fi:"Skotin kieli",fr:"scots",gl:"Lingua escocesa",he:"סקוטית",hu:"scots",id:"Bahasa Scots",it:"lingua scots",ja:"スコットランド語",nb_NO:"skotsk",nl:"Schots",pl:"język scots",pt:"Scots",pt_BR:"Scots",ru:"шотландский язык",sl:"škotščina",sv:"lågskotska",zh_Hans:"低地苏格兰语",zh_Hant:"低地蘇格蘭語",_meta:{dir:["left-to-right"]}},Bg={ca:"sasserès",de:"Sassaresisch",en:"Sassarese",es:"sasarés",eu:"Sassariera",fr:"sassarais",gl:"Lingua sassaresa",he:"סאסארזה",hu:"sassari",id:"Bahasa Sassari",it:"(lingua) sassarese",ja:"サッサリ・サルデーニャ語",nl:"Sassarees",pl:"Dialekt sassarski",ru:"сассарский язык",sl:"Sasarščina",sv:"sassaresiska",zh_Hans:"萨萨里语",zh_Hant:"薩薩里語",_meta:{dir:["left-to-right"]}},Eg={ca:"kurd del sud",cs:"Jihokurdština",da:"sydkurdisk",de:"Südkurdisch",en:"Southern Kurdish",eo:"Sudaj Kurdaj dialektoj",fr:"kurde du Sud",he:"כורדית דרומית",id:"Bahasa Kurdi Selatan",it:"lingua curda meridionale",ja:"南部クルド語",nl:"Zuid-Koerdisch",pl:"język południowokurdyjski",pt:"Curdo meridional",pt_BR:"Curdo meridional",ru:"южнокурдский язык",sv:"sydkurdiska",zh_Hans:"南库尔德语",zh_Hant:"南庫德語",_meta:{dir:["right-to-left"]}},Mg={ca:"sami septentrional",cs:"severní sámština",da:"nordsamisk",de:"Nordsamisch",en:"Northern Sami",eo:"nord-samea lingvo",es:"sami septentrional",eu:"Ipar samiera",fi:"pohjoissaame",fr:"same du Nord",gl:"Lingua saami setentrional",he:"סאמי צפונית",hu:"északi számi",it:"sami settentrionale",ja:"北部サーミ語",nb_NO:"nordsamisk",nl:"Noord-Samisch",pl:"język północnosaamski",pt:"língua sami setentrional",pt_BR:"Língua lapônica setentrional",ru:"северносаамский язык",sl:"severna samijščina",sv:"nordsamiska",zh_Hans:"北萨米语",zh_Hant:"北薩米語",_meta:{dir:["left-to-right"]}},Lg={ca:"seri",de:"Seri",en:"Seri",es:"seri",fr:"seri",gl:"Lingua seri",id:"Bahasa Seri",it:"seri",ja:"セリ語",nl:"Seri",pl:"Język seri",pt:"Língua seri",ru:"Сери",sv:"seri",zh_Hant:"塞裏語",_meta:{dir:["left-to-right"]}},Rg={de:"Koyra Senni",en:"Koyraboro Senni",es:"Koyraboro senni",fi:"Koyraboro senni",fr:"koyraboro senni",ja:"コイラボロ・センニ語",nl:"Koyra Senni",sv:"koyraboro senni",_meta:{dir:["left-to-right"]}},Hg={ca:"sango",cs:"sanžština",da:"Sango",de:"Sango",en:"Sango",eo:"sangoa lingvo",es:"idioma sango",eu:"Sango",fi:"Sango",fr:"sango",gl:"Lingua sango",he:"סאנגו",hu:"szango",id:"Bahasa Sango",it:"sango",ja:"サンゴ語",nb_NO:"sango",nl:"Sango",pl:"Język sango",pt:"Língua sango",pt_BR:"Língua sango",ru:"санго",sv:"sango",zh_Hans:"桑戈语",zh_Hant:"桑戈語",_meta:{countries:["CF"],dir:["left-to-right"]}},Cg={ca:"taixelhit",cs:"tašelhit",de:"Taschelhit",en:"Shilha",eo:"ŝelha lingvo",es:"chilha",fi:"Tašelhit",fr:"chleuh",gl:"Lingua shilha",he:"תשלחית",hu:"silha",it:"tashelhit",ja:"シルハ語",nl:"Tashelhiyt",pl:"Język tashelhiyt",pt:"Tachelhit",ru:"Шильхские языки",sl:"tašelhit",sv:"tachelhit",zh_Hans:"施卢赫语",zh_Hant:"施盧赫語",_meta:{dir:["left-to-right","top-to-bottom","bottom-to-top","right-to-left"]}},Og={cs:"šanština",de:"Shan",en:"Shan",eo:"ŝana lingvo",es:"shan",fi:"Shanin kieli",fr:"shan",gl:"Lingua shan",id:"Bahasa Shan",it:"lingua shan",ja:"シャン語",nl:"Shan",pl:"język szan",pt:"língua shan",pt_BR:"Língua shan",ru:"шанский язык",sv:"shan",zh_Hans:"掸语",zh_Hant:"撣語",_meta:{dir:["left-to-right"]}},Ng={ca:"shaui",de:"Schawiya",en:"Shawiya",es:"chaoui",eu:"Xawia",fi:"Tašawit",fr:"chaoui",it:"tashawit",ja:"シャウィーア語",nl:"Shawiya",pl:"język chaouia",pt:"Língua chaouis",ru:"Шавия",sv:"shawiya",_meta:{dir:["right-to-left","left-to-right","top-to-bottom","bottom-to-top"]}},Ig={ca:"singalès",cs:"sinhálština",da:"singalesisk",de:"Singhalesisch",en:"Sinhala",eo:"sinhala lingvo",es:"cingalés",eu:"Sinhala",fi:"Sinhali",fr:"singhalais",gl:"Lingua cingalesa",he:"סינהלית",hu:"szingaléz",id:"Sinhala",it:"singalese",ja:"シンハラ語",nb_NO:"singalesisk",nl:"Singalees",pl:"język syngaleski",pt:"Língua cingalesa",pt_BR:"Língua cingalesa",ru:"сингальский язык",sl:"sinhalščina",sv:"singalesiska",zh_Hant:"僧伽羅語",_meta:{countries:["LK"],dir:["left-to-right"]}},Pg={ca:"sidamo",de:"Sidama",en:"Sidamo",es:"Idioma sidamo",eu:"Sidamo hizkuntza",fi:"Sidamo",fr:"sidama",gl:"Lingua sidamo",he:"סידאמית",hu:"sidamo",it:"lingua Sidamo",ja:"シダモ語",nl:"Sidamo",pl:"Język sidamo",ru:"Сидамо",sv:"sidamo",_meta:{dir:["left-to-right"]}},Tg={ca:"sami kildin",cs:"kildinská sámština",de:"Kildinsamisch",en:"Kildin Sami",eo:"kildin-samea lingvo",es:"sami kildin",fi:"kiltinänsaame",fr:"same de Kildin",gl:"Lingua saami de Kildin",hu:"kildini számi",it:"lingua sami di Kildin",ja:"キルディン・サーミ語",nb_NO:"kildinsamisk",nl:"Kildin-Samisch",pl:"Język kildin",pt:"Língua sami de Kildin",ru:"кильдинский саамский язык",sl:"kildinska samijščina",sv:"kildinsamiska",zh_Hans:"基尔丁萨米语",zh_Hant:"基爾丁薩米語",_meta:{dir:["left-to-right"]}},Kg={ca:"sami ter",cs:"terská sámština",de:"Tersamisch",en:"Ter Sami",eo:"ter-samea lingvo",es:"sami ter",fi:"turjansaame",fr:"same de Ter",gl:"Lingua saami de Ter",it:"sami di Ter",ja:"テル・サーミ語",nb_NO:"tersamisk",nl:"Ter-Samisch",pl:"język ter",pt:"sami de Ter",ru:"йоканьгско-саамский язык",sv:"tersamiska",_meta:{dir:["left-to-right"]}},Dg={ca:"sami d'Ume",cs:"umejská sámština",de:"Umesamisch",en:"Ume Sami",eo:"ume-samea lingvo",es:"sami del Ume",fi:"uumajansaame",fr:"same d'Ume",gl:"Lingua saami de Ume",hu:"umei számi",it:"lingua sami di Ume",ja:"ウーメ・サーミ語",nb_NO:"umesamisk",nl:"Ume-Samisch",pl:"język ume",pt:"língua sami de Ume",ru:"уме-саамский язык",sl:"umejska samijščina",sv:"umesamiska",_meta:{dir:["left-to-right"]}},Ug={ca:"eslovac",cs:"slovenština",da:"slovakisk",de:"Slowakisch",en:"Slovak",eo:"slovaka lingvo",es:"eslovaco",eu:"eslovakiera",fi:"slovakki",fr:"slovaque",gl:"lingua eslovaca",he:"סלובקית",hu:"szlovák",id:"bahasa Slowakia",it:"slovacco",ja:"スロバキア語",nb_NO:"slovakisk",nl:"Slowaaks",pl:"język słowacki",pt:"eslovaco",pt_BR:"língua eslovaca",ru:"словацкий язык",sl:"slovaščina",sv:"slovakiska",zh_Hant:"斯洛伐克語",_meta:{countries:["SK"],dir:["left-to-right"]}},Jg={ca:"eslovè",cs:"slovinština",da:"slovensk",de:"Slowenisch",en:"Slovene",eo:"slovena lingvo",es:"esloveno",eu:"esloveniera",fi:"sloveeni",fr:"slovène",gl:"lingua eslovena",he:"סלובנית",hu:"szlovén",id:"bahasa Slovenia",it:"sloveno",ja:"スロベニア語",nb_NO:"slovensk",nl:"Sloveens",pl:"język słoweński",pt:"língua eslovena",pt_BR:"língua eslovena",ru:"словенский язык",sl:"slovenščina",sv:"slovenska",zh_Hant:"斯洛維尼亞語",_meta:{countries:["SI"],dir:["left-to-right"]}},qg={ca:"alemany silesià",cs:"slezská němčina",da:"Schlesisk",de:"Schlesisch",en:"Silesian German",eo:"silezia-germana lingvo",es:"alemán silesio",fi:"sleesiansaksa",fr:"silésien",hu:"sziléziai német",it:"tedesco slesiano",ja:"低シレジア語",nb_NO:"lavschlesisk",nl:"Silezisch-Duits",pl:"dialekt śląski języka niemieckiego",ru:"силезские диалекты немецкого языка",sv:"schlesisk tyska",zh_Hans:"西里西亚语",zh_Hant:"西里西亞語",_meta:{dir:["left-to-right"]}},Fg={ca:"samoà",cs:"samojština",da:"samoansk",de:"Samoanisch",en:"Samoan",eo:"samoa lingvo",es:"samoano",eu:"Samoera",fi:"samoan kieli",fr:"samoan",gl:"Lingua samoana",he:"סמואית",hu:"szamoai",id:"Bahasa Samoa",it:"samoano",ja:"サモア語",nb_NO:"samoansk",nl:"Samoaans",pl:"język samoański",pt:"Língua samoana",ru:"самоанский язык",sv:"samoanska",_meta:{countries:["WS"],dir:["left-to-right"]}},Wg={ca:"sami meridional",cs:"jižní sámština",da:"sydsamisk",de:"Südsamisch",en:"Southern Sami",eo:"sud-samea lingvo",es:"sami meridional",fi:"eteläsaame",fr:"same du Sud",gl:"Lingua saami meridional",hu:"déli számi",id:"Bahasa Sami Selatan",it:"sami meridionale",ja:"南部サーミ語",nb_NO:"sørsamisk",nl:"Zuid-Samisch",pl:"język południowolapoński",pt:"língua sami meridional",pt_BR:"Língua sami meridional",ru:"южносаамский язык",sl:"južna samijščina",sv:"sydsamiska",zh_Hans:"南萨米语",zh_Hant:"南薩米語",_meta:{dir:["left-to-right"]}},Gg={ca:"sami de Lule",cs:"lulejská sámština",de:"Lulesamisch",en:"Lule Sami",eo:"lule-samea lingvo",es:"sami de Lule",fi:"luulajansaame",fr:"same de Lule",gl:"Lingua saami de Lule",hu:"lulei számi",it:"lingua sami di Lule",ja:"ルレ・サーミ語",nb_NO:"lulesamisk",nl:"Lule-Samisch",pl:"język lule",pt:"língua sami de Lule",pt_BR:"Língua lapônica de Lule",ru:"луле-саамский язык",sl:"lulejska samijščina",sv:"lulesamiska",zh_Hans:"吕勒萨米语",zh_Hant:"呂勒薩米語",_meta:{dir:["left-to-right"]}},$g={ca:"sami d'Inari",cs:"inarijská sámština",de:"Inarisamisch",en:"Inari Sami",eo:"anar-samea lingvo",es:"sami inari",eu:"Inariko samiera",fi:"inarinsaame",fr:"same d'Inari",gl:"Lingua saami de Inari",hu:"inari számi",it:"sami di Inari",ja:"イナリ・サーミ語",nb_NO:"enaresamisk",nl:"Inari-Samisch",pl:"Język inari",pt:"lapônico de Inari",ru:"инари-саамский язык",sl:"inarijska samijščina",sv:"enaresamiska",zh_Hans:"伊纳里萨米语",zh_Hant:"伊納里薩米語",_meta:{dir:["left-to-right"]}},Vg={ca:"sami skolt",cs:"skoltská sámština",de:"Skoltsamisch",en:"Skolt Sami",eo:"skolt-samea lingvo",es:"sami skolt",fi:"koltansaame",fr:"same skolt",gl:"Lingua saami de Skolt",hu:"kolta számi",it:"lingua sami skolt",ja:"スコルト・サーミ語",nb_NO:"skoltesamisk",nl:"Skolt-Samisch",pl:"język skolt",pt:"kíngua sami de Skolt",pt_BR:"Língua sami de Skolt",ru:"колтта-саамский язык",sl:"sokltska samijščina",sv:"skoltsamiska",zh_Hans:"斯科尔特萨米语",zh_Hant:"斯科爾特薩米語",_meta:{dir:["left-to-right"]}},Zg={ca:"xona",cs:"šonština",de:"Shona",en:"Shona",eo:"Ŝona lingvo",es:"shona",fi:"šonan kieli",fr:"shona",gl:"Lingua shona",he:"שונה",hu:"sona",id:"Bahasa Shona",it:"shona",ja:"ショナ語",nb_NO:"shona",nl:"Shona",pl:"Język shona",pt:"Língua chona",ru:"шона",sv:"shona",zh_Hant:"修納語",_meta:{countries:["ZW"],dir:["left-to-right"]}},Yg={ca:"somali",cs:"somálština",da:"somali",de:"Somali",en:"Somali",eo:"somala lingvo",es:"somalí",eu:"somaliera",fi:"somalin kieli",fr:"somali",gl:"Lingua somalí",he:"סומלית",hu:"szomáli",id:"Bahasa Somali",it:"somalo",ja:"ソマリ語",nb_NO:"somali",nl:"Somalisch",pl:"język somalijski",pt:"Língua somali",pt_BR:"Língua somali",ru:"сомалийский язык",sv:"somaliska",zh_Hans:"索马里语",zh_Hant:"索馬利亞語",_meta:{countries:["SO"],dir:["left-to-right"]}},Xg={de:"Südthailändisch",en:"Southern Thai",eo:"sud-taja lingvo",fr:"thaï du Sud",he:"תאית דרומית",id:"Bahasa Thai Selatan",ja:"南タイ語",nl:"Zuidelijk Thai",pl:"Język południowotajski",ru:"южнотайский диалект",sl:"južna tajščina",sv:"sydthai",zh_Hans:"南部泰语",zh_Hant:"南部泰語",_meta:{dir:["left-to-right"]}},Qg={ca:"albanès",cs:"albánština",da:"albansk",de:"Albanisch",en:"Albanian",eo:"albana lingvo",es:"albanés",eu:"albaniera",fi:"albania",fr:"albanais",gl:"Lingua albanesa",he:"אלבנית",hu:"albán",id:"Bahasa Albania",it:"albanese",ja:"アルバニア語",nb_NO:"albansk",nl:"Albanees",pl:"język albański",pt:"língua albanesa",pt_BR:"língua albanesa",ru:"албанский язык",sl:"albanščina",sv:"albanska",zh_Hans:"阿尔巴尼亚语",zh_Hant:"阿爾巴尼亞語",_meta:{countries:["AL","MK"],dir:["left-to-right"]}},em={ca:"sranan tongo",cs:"Sranan Tongo",da:"Sranan tongo",de:"Sranantongo",en:"Sranan Tongo",eo:"srana lingvo",es:"sranan tongo",eu:"Sranan Tongo",fi:"Sranantongo",fr:"sranan",gl:"Sranan tongo",he:"סרנן טונגו",hu:"sranan",id:"Bahasa Sranantongo",it:"sranan tongo",ja:"スラナン語",nb_NO:"sranan",nl:"Sranantongo",pl:"sranan tongo",pt:"Sranan",ru:"cранан-тонго",sl:"Surinamščina",sv:"sranan",zh_Hans:"苏里南语",zh_Hant:"蘇利南語",_meta:{dir:["left-to-right"]}},am={ca:"Sirionó",en:"Sirionó",es:"sirionó",fr:"sirionó",ja:"シリオノ語",nb_NO:"sirionó",nl:"Sirionó",pt:"Língua sirionó",ru:"сирионо",sv:"sirionó",_meta:{dir:["left-to-right"]}},tm={ca:"swazi",cs:"siswatština",de:"Siswati",en:"Swazi",eo:"svazia lingvo",es:"suazi",eu:"swaziera",fi:"swazin kieli",fr:"swati",gl:"Lingua suazi",he:"סווזי",hu:"szvázi",id:"Bahasa Swati",it:"swati",ja:"スワジ語",nb_NO:"swazi",nl:"Swazi",pl:"Język suazi",pt:"língua suázi",pt_BR:"língua suázi",ru:"свати",sv:"siswati",zh_Hans:"斯威士语",zh_Hant:"史瓦濟語",_meta:{countries:["SZ","ZA"],dir:["left-to-right"]}},im={ca:"sesotho",cs:"sotština",da:"Sesotho",de:"Sesotho",en:"Sesotho",eo:"sota lingvo",es:"sesotho",eu:"sothoera",fi:"eteläsothon kieli",fr:"sotho du Sud",gl:"Lingua sotho",he:"ססוטו",hu:"déli szoto",id:"Bahasa Sesotho",it:"sotho del sud",ja:"ソト語",nb_NO:"sotho",nl:"Zuid-Sotho",pl:"język sotho",pt:"língua soto do sul",pt_BR:"língua soto",ru:"сесото",sl:"sesotščina",sv:"sesotho",_meta:{countries:["LS","ZA","ZW"],dir:["left-to-right"]}},nm={ca:"shelta",cs:"Shelta",de:"Shelta",en:"Shelta",es:"shelta",eu:"Shelta",fi:"Shelta",fr:"shelta",gl:"Shelta",he:"שלטה",id:"bahasa Shelta",it:"lingua shelta",ja:"シェルタ語",nb_NO:"Shelta",nl:"Shelta",pl:"Język shelta",pt:"Língua shelta",ru:"шелта",sv:"shelta",_meta:{dir:["left-to-right"]}},rm={ca:"frisó oriental",cs:"sater-fríština",da:"Saterfrisisk",de:"Saterfriesisch",en:"Saterland Frisian",eo:"saterfrisa lingvo",es:"frisón del Saterland",eu:"ekialdeko frisiera",fi:"itäfriisi",fr:"frison saterlandais",gl:"Lingua frisoa oriental",id:"Bahasa Frisia Saterland",it:"lingua frisone del Saterland",ja:"東フリジア語",nb_NO:"saterfrisisk",nl:"Saterfries",pl:"Język fryzyjski saterlandzki",pt:"frisão oriental",ru:"Затерландский фризский язык",sv:"saterfrisiska",zh_Hans:"萨特弗里斯兰语",zh_Hant:"薩特菲士蘭語",_meta:{dir:["left-to-right"]}},sm={ca:"sunda",cs:"sundština",da:"Sunda",de:"Sundanesisch",en:"Sundanese",eo:"sunda lingvo",es:"sundanés",eu:"Sundera",fi:"sunda",fr:"soundanais",gl:"Sunda",he:"סונדנזית",hu:"szundai",id:"Sunda",it:"sunda",ja:"スンダ語",nb_NO:"sundanesisk",nl:"Sundanees",pl:"język sundajski",pt:"Sunda",pt_BR:"Sunda",ru:"сунданский язык",sl:"sundanščina",sv:"sunda",_meta:{dir:["left-to-right"]}},om={ca:"suec",cs:"švédština",da:"svensk",de:"Schwedisch",en:"Swedish",eo:"sveda lingvo",es:"sueco",eu:"suediera",fi:"ruotsi",fr:"suédois",gl:"lingua sueca",he:"שוודית",hu:"svéd",id:"bahasa Swedia",it:"svedese",ja:"スウェーデン語",nb_NO:"svensk",nl:"Zweeds",pl:"język szwedzki",pt:"língua sueca",pt_BR:"língua sueca",ru:"шведский язык",sl:"švedščina",sv:"svenska",zh_Hans:"瑞典语",zh_Hant:"瑞典語",_meta:{countries:["FI","SE"],dir:["left-to-right"]}},lm={ca:"suahili",cs:"svahilština",da:"Swahili",de:"Swahili",en:"Swahili",eo:"svahila lingvo",es:"suajili",eu:"swahili",fi:"swahili",fr:"swahili",gl:"Lingua suahili",he:"סוואהילי",hu:"szuahéli",id:"Bahasa Swahili",it:"swahili",ja:"スワヒリ語",nb_NO:"swahili",nl:"Swahili",pl:"suahili",pt:"Língua suaíli",pt_BR:"língua suaíli",ru:"суахили",sl:"Svahili",sv:"swahili",zh_Hant:"史瓦希利語",_meta:{countries:["KE","RW","TZ","UG"],dir:["left-to-right","right-to-left"]}},cm={de:"Sylheti",en:"Sylheti",es:"Idioma sylheti",fi:"Sylheti",fr:"sylheti",gl:"Lingua sylheti",he:"סילהטית",it:"lingua silotica",ja:"シレット語",nb_NO:"Sylhetti",nl:"Sylheti",pl:"język syloti",ru:"силхетский язык",sv:"syloti",zh_Hans:"锡尔赫特语",zh_Hant:"錫爾赫特語",_meta:{dir:["left-to-right"]}},um={ca:"silesià",cs:"slezština",da:"Schlesisk",de:"Schlesisch",en:"Silesian",eo:"silezia-pola lingvo",es:"silesio",eu:"Silesiera",fi:"sleesia",fr:"silésien",gl:"Lingua silesiana",he:"שלזית",hu:"sziléziai",id:"bahasa Silesia",it:"slesiano",ja:"シレジア語",nb_NO:"schlesisk",nl:"Silezisch",pl:"etnolekt śląski",pt:"silesiano",ru:"силезский язык",sl:"šlezijščina",sv:"schlesiska",_meta:{dir:["left-to-right"]}},dm={ca:"sakizaya",cs:"sakizayština",en:"Sakizaya",fr:"sakizaya",gl:"Lingua sakizaya",id:"Bahasa Sakizaya",ja:"サキザヤ語",nl:"Sakizaya",pt:"Língua sakisaya",sv:"sakizaya",zh_Hans:"撒奇莱雅语",zh_Hant:"撒奇萊雅語",_meta:{dir:["left-to-right"]}},fm={ca:"tàmil",cs:"tamilština",da:"Tamil",de:"Tamil",en:"Tamil",eo:"tamila lingvo",es:"tamil",eu:"Tamilera",fi:"tamil",fr:"tamoul",gl:"Lingua támil",he:"טמילית",hu:"tamil",id:"Bahasa Tamil",it:"tamil",ja:"タミル語",nb_NO:"tamilsk",nl:"Tamil",pl:"język tamilski",pt:"Língua tâmil",pt_BR:"língua tâmil",ru:"тамильский язык",sl:"tamilščina",sv:"tamil",zh_Hans:"泰米尔语",zh_Hant:"坦米爾語",_meta:{countries:["LK","SG"],dir:["left-to-right","right-to-left"]}},hm={ca:"atayal",cs:"atayalština",de:"Atayal",en:"Atayal",es:"lengua atayal",fi:"atayalin kieli",fr:"atayal",gl:"Lingua atayal",hu:"atajal",id:"Bahasa Atayal",it:"lingua atayal",ja:"タイヤル語",nl:"Atayal",pt:"Língua atayal",ru:"атаяльский язык",sv:"atayal",zh_Hans:"泰雅语",zh_Hant:"泰雅語",_meta:{dir:["left-to-right"]}},pm={ca:"tulu",da:"tulu",de:"Tulu",en:"Tulu",eo:"tulua lingvo",es:"tulu",eu:"Tulu",fi:"Tulun kieli",fr:"toulou",gl:"Lingua tulu",he:"טולו",id:"Bahasa Tulu",ja:"トゥル語",nb_NO:"Tulu",nl:"Tulu",pl:"język tulu",pt:"Língua túlu",ru:"тулу",sl:"tulujščina",sv:"tulu",_meta:{dir:["left-to-right"]}},gm={ca:"telugu",cs:"telugština",da:"telugu",de:"Telugu",en:"Telugu",eo:"telugua lingvo",es:"télugu",eu:"Telugu",fi:"telugu",fr:"télougou",gl:"Lingua telugu",he:"טלוגו",hu:"telugu",id:"Bahasa Telugu",it:"telugu",ja:"テルグ語",nb_NO:"telugu",nl:"Telugu",pl:"język telugu",pt:"língua telugu",pt_BR:"Língua telugu",ru:"телугу",sl:"teluščina",sv:"telugu",zh_Hans:"泰卢固语",zh_Hant:"泰盧固語",_meta:{dir:["left-to-right"]}},mm={ca:"tetum",cs:"Tetum",da:"Tetum",de:"Tetum",en:"Tetum",eo:"tetuna lingvo",es:"Idioma tetun",eu:"Tetum",fi:"Tetumin kieli",fr:"tétoum",gl:"Tetún",he:"טטום",hu:"tetum",id:"Tetum",it:"tetum",ja:"テトゥン語",nb_NO:"tetum",nl:"Tetun",pl:"język tetum",pt:"língua tétum",ru:"тетум",sv:"tetum",_meta:{dir:["left-to-right"]}},bm={ca:"tadjik",cs:"tádžičtina",da:"tadsjikisk",de:"Tadschikisch",en:"Tajik",eo:"taĝika lingvo",es:"tayiko",eu:"tajikera",fi:"tadžikki",fr:"tadjik",gl:"Lingua taxica",he:"טג'יקית",hu:"tádzsik",id:"Tajik",it:"tagico",ja:"タジク語",nb_NO:"tadsjikisk",nl:"Tadzjieks",pl:"język tadżycki",pt:"Língua tadjique",pt_BR:"Língua tadjique",ru:"таджикский язык",sl:"tadžiščina",sv:"tadzjikiska",_meta:{countries:["TJ"],dir:["left-to-right","right-to-left"]}},vm={ca:"tailandès",cs:"thajština",da:"thai",de:"Thailändisch",en:"Thai",eo:"taja lingvo",es:"tailandés",eu:"Thailandiera",fi:"thain kieli",fr:"thaï",gl:"lingua tailandesa",he:"תאית",hu:"thai",id:"bahasa Thai",it:"thailandese",ja:"タイ語",nb_NO:"thai",nl:"Thai",pl:"język tajski",pt:"tailandês",pt_BR:"tailandês",ru:"тайский язык",sl:"tajščina",sv:"thai",zh_Hans:"泰语",zh_Hant:"泰語",_meta:{countries:["TH"],dir:["left-to-right"]}},km={ca:"tigrinya",cs:"tigrajština",da:"Tigrinsk",de:"Tigrinya",en:"Tigrinya",eo:"tigraja lingvo",es:"idioma tigriña",eu:"Tigrinyera",fi:"tigrinja",fr:"tigrigna",gl:"Lingua tigriña",he:"תיגרינית",hu:"tigrinya",id:"Bahasa Tigrinya",it:"tigrino",ja:"ティグリニャ語",nb_NO:"tigrinja",nl:"Tigrinya",pl:"Język tigrinia",pt:"Língua tigrínia",ru:"тигринья",sl:"Tigrajščina",sv:"tigrinska",zh_Hant:"提格利尼亞語",_meta:{countries:["ER"],dir:["left-to-right"]}},ym={ca:"turcman",cs:"turkmenština",da:"turkmensk",de:"Turkmenisch",en:"Turkmen",eo:"turkmena lingvo",es:"turcomano",eu:"Turkmenera",fi:"turkmeeni",fr:"Turkmène",gl:"Lingua turcomá",he:"טורקמנית",hu:"türkmén",id:"bahasa Turkmen",it:"Turkmeno",ja:"トルクメン語",nb_NO:"turkmensk",nl:"Turkmeens",pl:"język turkmeński",pt:"Língua turcomena",pt_BR:"Língua turcomena",ru:"туркменский язык",sl:"Turkmenščina",sv:"turkmeniska",_meta:{countries:["AF","TM"],dir:["left-to-right"]}},_m={ca:"tagal",cs:"tagalog",da:"tagalisk",de:"Tagalog",en:"Tagalog",eo:"tagala lingvo",es:"tagalo",eu:"tagalo",fi:"tagalog",fr:"tagalog",gl:"lingua tagala",he:"טאגאלוג",hu:"tagalog",id:"bahasa Tagalog",it:"tagalog",ja:"タガログ語",nb_NO:"tagalog",nl:"Tagalog",pl:"język tagalski",pt:"língua tagalo",pt_BR:"língua tagalo",ru:"тагальский язык",sl:"tagaloščina",sv:"tagalog",zh_Hans:"他加禄语",zh_Hant:"他加祿語",_meta:{dir:["left-to-right"]}},wm={ca:"Tlingit",de:"Tlingit",en:"Tlingit",eo:"Tlingita",es:"tlingit",fi:"Tlingit",fr:"tlingit",hu:"tlingit",id:"Bahasa Tlingit",it:"lingua tlingit",ja:"トリンギット語",nb_NO:"Tlingit",nl:"Tlingit",pl:"Język tlingit",pt:"Língua tlingit",pt_BR:"Língua tlingit",ru:"Тлингитский язык",sv:"tlingit",_meta:{dir:["left-to-right"]}},zm={ca:"talixi",de:"Talisch",en:"Talysh",eo:"taliŝa lingvo",es:"talishi",eu:"Talyshera",fi:"Tališin kieli",fr:"talysh",gl:"Lingua talysh",he:"טליש",id:"Talish",it:"lingua taliscia",ja:"タリシュ語",nb_NO:"talysj",nl:"Talysjisch",pl:"język tałyski",pt:"Língua talish",ru:"талышский язык",sv:"talysj",_meta:{dir:["left-to-right","right-to-left"]}},Sm={ca:"tswana",cs:"Setswana",da:"Setswana",de:"Setswana",en:"Tswana",eo:"cvana lingvo",es:"setsuana",eu:"tswanera",fi:"tswanan kieli",fr:"tswana",gl:"Lingua tswana",he:"סצוואנה",hu:"csvana",id:"Bahasa Tswana",it:"tswana",ja:"ツワナ語",nb_NO:"setswana",nl:"Tswana",pl:"Język tswana",pt:"língua tswana",pt_BR:"língua tswana",ru:"тсвана",sl:"cvanščina",sv:"setswana",zh_Hant:"札那語",_meta:{countries:["ZA","ZW"],dir:["left-to-right"]}},jm={ca:"tongalès",cs:"tongánština",da:"tongansk",de:"Tongaisch",en:"Tongan",eo:"Tonga lingvo",es:"tongano",eu:"Tongera",fi:"Tongan kieli",fr:"tongien",gl:"Lingua tongana",he:"טונגאית",hu:"tongai",id:"Bahasa Tonga",it:"tongano",ja:"トンガ語",nb_NO:"Tongansk",nl:"Tongaans",pl:"Język tonga",pt:"Língua tonganesa",ru:"тонганский язык",sl:"tongovščina",sv:"tonganska",_meta:{countries:["TO"],dir:["left-to-right"]}},Am={ca:"tok pisin",cs:"Tok Pisin",da:"Tok pisin",de:"Tok Pisin",en:"Tok Pisin",eo:"Tok-Pisino",es:"tok pisin",eu:"tok pisin",fi:"tok-pisin",fr:"tok pisin",gl:"Tok pisin",he:"טוק פיסין",hu:"tok piszin",id:"Bahasa Tok Pisin",it:"tok pisin",ja:"トク・ピシン",nb_NO:"tok pisin",nl:"Tok Pisin",pl:"tok pisin",pt:"Tok Pisin",ru:"ток-писин",sl:"tok pisin",sv:"tok pisin",_meta:{dir:["left-to-right"]}},xm={ca:"turoio",de:"Turoyo",en:"Turoyo",es:"turoyo",fr:"turoyo",ja:"トゥロヨ語",nl:"Turoyo",pl:"Turoyo",pt:"Língua turoyo",ru:"Туройо",sv:"turoyo",_meta:{dir:["left-to-right","right-to-left"]}},Bm={ca:"seediq",cs:"Seediq",en:"Seediq",eo:"sedeka lingvo",fi:"Taroko",fr:"seediq",gl:"Lingua seediq",id:"Bahasa Seediq",it:"lingua seediq",ja:"セデック語",nb_NO:"Truku",nl:"Taroko",pt:"Língua seediq",sv:"seediq",zh_Hans:"赛德克语",zh_Hant:"賽德克語",_meta:{dir:["left-to-right"]}},Em={ca:"tsonga",da:"tsonga",de:"Xitsonga",en:"Tsonga",eo:"conga lingvo",es:"tsonga",eu:"tsongera",fi:"tsongan kieli",fr:"tsonga",gl:"Lingua tsonga",he:"צונגה",hu:"conga",id:"Bahasa Tsonga",it:"tsonga",ja:"ツォンガ語",nb_NO:"tsonga",nl:"Tsonga",pl:"Język tsonga",pt:"língua tsonga",pt_BR:"língua tsonga",ru:"тсонга",sv:"tsonga",zh_Hans:"聪加语",zh_Hant:"聰加語",_meta:{countries:["ZA","ZW"],dir:["left-to-right"]}},Mm={ca:"tàtar",cs:"tatarština",da:"tatarisk",de:"Tatarisch",en:"Tatar",eo:"tatara lingvo",es:"tártaro",eu:"tatarera",fi:"tataari",fr:"tatar",gl:"Lingua tártara",he:"טטרית",hu:"tatár",id:"bahasa Tatar",it:"tataro",ja:"タタール語",nb_NO:"tatarisk",nl:"Tataars",pl:"język tatarski",pt:"Língua tártara",pt_BR:"Língua tártara",ru:"татарский язык",sl:"Tatarščina",sv:"tatariska",zh_Hans:"鞑靼语",zh_Hant:"韃靼語",_meta:{dir:["left-to-right"]}},Lm={ca:"tumbuka",de:"Tumbuka",en:"Tumbuka",eo:"tumbuka lingvo",es:"Idioma tumbuka",fi:"Tumbuka",fr:"tumbuka",gl:"Lingua tumbuka",he:"שפת טומבוקה",hu:"tumbuka",it:"tumbuka",ja:"トゥンブカ語",nl:"Tumbuka",pl:"Język tumbuka",pt:"Língua tumbuka",ru:"Тумбука",sv:"tumbuka",_meta:{dir:["left-to-right"]}},Rm={ca:"tuvalià",cs:"tuvalština",de:"Tuvaluisch",en:"Tuvaluan",eo:"tuvala lingvo",es:"tuvaluano",eu:"Tuvaluera",fi:"tuvalun kieli",fr:"tuvaluan",gl:"Lingua tuvalesa",he:"טובאלית",hu:"tuvalui",id:"Bahasa Tuvalu",it:"lingua tuvaluana",ja:"ツバル語",nb_NO:"tuvalsk",nl:"Tuvaluaans",pl:"Język tuvalu",pt:"Língua tuvaluana",pt_BR:"Língua tuvaluana",ru:"тувалу",sv:"tuvaluanska",_meta:{dir:["left-to-right"]}},Hm={ca:"twi",da:"Twi",de:"Twi",en:"Twi",eo:"Tvia",es:"idioma twi",eu:"twi",fi:"twi",fr:"twi",gl:"Lingua twi",he:"טווי",hu:"tvi",id:"Bahasa Twi",it:"twi",ja:"トウィ語",nb_NO:"twi",nl:"Twi",pl:"Język twi",pt:"Língua twi",pt_BR:"Língua twi",ru:"чви",sv:"twi",_meta:{dir:["left-to-right"]}},Cm={ca:"tahitià",cs:"Tahitština",da:"tahitiansk",de:"Tahitianisch",en:"Tahitian",eo:"tahitia lingvo",es:"tahitiano",eu:"tahitiera",fi:"tahiti",fr:"tahitien",gl:"Lingua tahitiana",he:"טהיטית",hu:"tahiti",id:"Bahasa Tahiti",it:"tahitiano",ja:"タヒチ語",nb_NO:"tahitisk",nl:"Tahitiaans",pl:"język tahitański",pt:"taitiano",ru:"таитянский язык",sl:"tahitijščina",sv:"tahitiska",zh_Hans:"塔希提语",zh_Hant:"大溪地語",_meta:{dir:["left-to-right"]}},Om={ca:"tuvinià",cs:"tuvinština",de:"Tuwinisch",en:"Tuvan",eo:"tuva lingvo",es:"idioma tuvano",eu:"Tuvera",fi:"tuvan kieli",fr:"touvain",gl:"Lingua tuvaniana",he:"טובאנית",hu:"tuvai",id:"bahasa Tuva",it:"tuvano",ja:"トゥヴァ語",nb_NO:"tuvinsk",nl:"Toevaans",pl:"język tuwiński",pt:"Língua tuviniana",pt_BR:"Língua tuviniana",ru:"тувинский язык",sv:"tuvinska",_meta:{dir:["left-to-right"]}},Nm={ca:"tamazic",de:"Zentralatlas-Tamazight",en:"Central Atlas Tamazight",eo:"tamaziĥta lingvo",es:"Tamazight del Marruecos Central",fi:"Keskiatlaksentamazight",fr:"tamazight du Maroc central",he:"תמאזיגת של האטלס התיכון",it:"tamazight del Marocco centrale",ja:"中央アトラス・タマジクト語",nl:"Centraal Atlas-Tamazight",pl:"Język tamazight",ru:"Тамазигхтские языки",sv:"tamazight",zh_Hans:"中阿特拉斯柏柏尔语",zh_Hant:"中阿特拉斯柏柏語",_meta:{dir:["right-to-left","left-to-right","top-to-bottom","bottom-to-top"]}},Im={ca:"udmurt",cs:"udmurtština",da:"Udmurtisk",de:"Udmurtisch",en:"Udmurt",eo:"udmurta lingvo",es:"udmurto",eu:"Udmurtera",fi:"udmurtin kieli",fr:"oudmourte",gl:"Lingua udmurta",he:"אודמורטית",hu:"udmurt",id:"Bahasa Udmurt",it:"udmurto",ja:"ウドムルト語",nb_NO:"udmurtisk",nl:"Oedmoerts",pl:"język udmurcki",pt:"Língua udmurte",pt_BR:"Língua udmurte",ru:"удмуртский язык",sv:"udmurtiska",_meta:{dir:["left-to-right"]}},Pm={ca:"uigur",cs:"ujgurština",da:"Uygurisk (sprog)",de:"Uigurisch",en:"Uyghur",eo:"ujgura lingvo",es:"uigur",eu:"Uigurrera",fi:"uiguuri",fr:"ouïghour",gl:"Lingua uigur",he:"אויגורית",hu:"ujgur",id:"bahasa Uyghur",it:"uiguro",ja:"ウイグル語",nb_NO:"uigurisk",nl:"Oeigoers",pl:"język ujgurski",pt:"Língua uigur",pt_BR:"Língua uigur",ru:"уйгурский язык",sl:"ujgurščina",sv:"uiguriska",zh_Hans:"维吾尔语",zh_Hant:"維吾爾語",_meta:{dir:["left-to-right","right-to-left"]}},Tm={ca:"ucraïnès",cs:"ukrajinština",da:"ukrainsk",de:"Ukrainisch",en:"Ukrainian",eo:"ukraina lingvo",es:"ucraniano",eu:"ukrainera",fi:"ukraina",fr:"ukrainien",gl:"lingua ucraína",he:"אוקראינית",hu:"ukrán",id:"bahasa Ukraina",it:"ucraino",ja:"ウクライナ語",nb_NO:"ukrainsk",nl:"Oekraïens",pl:"język ukraiński",pt:"ucraniano",pt_BR:"língua ucraniana",ru:"украинский язык",sl:"ukrajinščina",sv:"ukrainska",zh_Hans:"乌克兰语",zh_Hant:"烏克蘭語",_meta:{countries:["UA"],dir:["left-to-right"]}},Km={ca:"uzbek",cs:"uzbečtina",da:"usbekisk",de:"Usbekisch",en:"Uzbek",eo:"uzbeka lingvo",es:"uzbeko",eu:"Uzbekera",fi:"uzbekki",fr:"ouzbek",gl:"Lingua usbeka",he:"אוזבקית",hu:"üzbég",id:"bahasa Uzbek",it:"uzbeco",ja:"ウズベク語",nb_NO:"usbekisk",nl:"Oezbeeks",pl:"język uzbecki",pt:"língua uzbeque",pt_BR:"língua uzbeque",ru:"узбекский язык",sl:"uzbeščina",sv:"uzbekiska",zh_Hans:"乌孜别克语",zh_Hant:"烏孜別克語",_meta:{countries:["AF","UZ"],dir:["right-to-left","left-to-right"]}},Dm={de:"Südusbekisch",en:"Southern Uzbek",eo:"sud-uzbeka lingvo",fr:"ouzbek du Sud",ru:"Южноузбекский язык",sv:"syduzbekiska",zh_Hans:"南乌兹别克语",zh_Hant:"南烏茲別克語",_meta:{dir:["right-to-left"]}},Um={ca:"venda",de:"Tshivenda",en:"Venda",eo:"venda lingvo",es:"venda",eu:"vendera",fi:"vendan kieli",fr:"venda",gl:"Lingua venda",he:"ונדה",hu:"venda",id:"Bahasa Venda",it:"venda",ja:"ヴェンダ語",nb_NO:"venda",nl:"Venda",pl:"Język venda",pt:"língua venda",pt_BR:"língua venda",ru:"венда",sv:"venda",zh_Hans:"文达语",zh_Hant:"文達語",_meta:{countries:["ZA","ZW"],dir:["left-to-right"]}},Jm={ca:"vènet",cs:"benátština",da:"venetiansk",de:"Venetisch",en:"Venetian",eo:"venecia lingvo",es:"véneto",eu:"Veneziera",fi:"venetsia",fr:"vénitien",gl:"Lingua véneta",he:"ונטית",hu:"velencei",id:"bahasa Venesia",it:"veneto",ja:"ヴェネト語",nb_NO:"venetiansk",nl:"Venetiaans",pl:"język wenecki",pt:"Língua vêneta",ru:"современный венетский язык",sl:"beneščina",sv:"venetianska",zh_Hans:"威尼斯语",zh_Hant:"威尼斯語",_meta:{dir:["left-to-right"]}},qm={ca:"vepse",cs:"vepština",da:"Vepsisk",de:"Wepsisch",en:"Veps",eo:"vepsa lingvo",es:"vepsio",eu:"vepsera",fi:"vepsä",fr:"vepse",gl:"Lingua vepsa",he:"ופס",hu:"vepsze",id:"Bahasa Veps",it:"vepso",ja:"ヴェプス語",nb_NO:"vepsisk",nl:"Wepsisch",pl:"język wepski",pt:"Língua vepes",pt_BR:"Língua vepes",ru:"вепсский язык",sv:"vepsiska",zh_Hans:"维普斯语",zh_Hant:"維普斯語",_meta:{dir:["left-to-right"]}},Fm={ca:"vietnamita",cs:"vietnamština",da:"vietnamesisk",de:"Vietnamesisch",en:"Vietnamese",eo:"vjetnama lingvo",es:"vietnamita",eu:"Vietnamera",fi:"vietnam",fr:"vietnamien",gl:"Lingua vietnamita",he:"וייטנאמית",hu:"vietnámi",id:"Vietnam",it:"vietnamita",ja:"ベトナム語",nb_NO:"vietnamesisk",nl:"Vietnamees",pl:"język wietnamski",pt:"vietnamita",pt_BR:"Língua vietnamita",ru:"вьетнамский язык",sl:"vietnamščina",sv:"vietnamesiska",zh_Hant:"越南語",_meta:{countries:["VN"],dir:["left-to-right","vertical right-to-left"]}},Wm={ca:"flamenc occidental",da:"vestflamsk",de:"Westflämisch",en:"West Flemish",eo:"okcidentflandra lingvo",es:"flamenco occidental",fi:"länsiflaami",fr:"flamand occidental",gl:"Flamengo occidental",id:"Flam Barat",it:"dialetto fiammingo occidentale",ja:"西フラマン語",nb_NO:"vestflamsk",nl:"West-Vlaams",pl:"dialekt zachodnioflamandzki",ru:"западнофламандская группа диалектов",sl:"zahodna flamščina",sv:"västflamländska",zh_Hans:"西佛兰德语",zh_Hant:"西佛蘭德語",_meta:{dir:["left-to-right"]}},Gm={de:"Mainfränkisch",en:"Main-Franconian",es:"Fráncico del Meno",fr:"franconien du Main",it:"lingua francone del Meno",ja:"マインフランク語",nl:"Mainfrankisch",ru:"Майнфранкские диалекты",sv:"Main-frankiska",_meta:{dir:["left-to-right"]}},$m={ca:"vòtic",cs:"votština",de:"Wotisch",en:"Votic",eo:"vota lingvo",es:"votio",eu:"votera",fi:"vatja",fr:"vote",he:"וודית",hu:"vót",id:"bahasa Votik",it:"votico",ja:"ヴォート語",nb_NO:"votisk",nl:"Wotisch",pl:"Język wotycki",pt:"vótico",ru:"водский язык",sv:"votiska",zh_Hans:"瓦佳语",zh_Hant:"瓦佳語",_meta:{dir:["left-to-right"]}},Vm={ca:"võro",cs:"võruština",da:"Võro",de:"Võro",en:"Võro",eo:"voroa lingvo",es:"idioma võro",fi:"võro",fr:"võro",gl:"Lingua võro",hu:"võro",id:"Bahasa Võro",it:"võro",ja:"ヴォロ語",nb_NO:"sørestisk",nl:"Võro",pl:"język võro",pt:"Língua võro",ru:"выруский диалект",sv:"võro",zh_Hans:"沃罗语",_meta:{dir:["left-to-right"]}},Zm={ca:"való",cs:"valonština",da:"vallonsk",de:"Wallonisch",en:"Walloon",eo:"valona lingvo",es:"valón",eu:"Valoniera",fi:"Valloni",fr:"wallon",gl:"Lingua valoa",he:"ולונית",hu:"vallon nyelv",id:"Bahasa Walloon",it:"vallone",ja:"ワロン語",nb_NO:"vallonsk",nl:"Waals",pl:"język waloński",pt:"valão",ru:"валлонский язык",sl:"valonščina",sv:"vallonska",_meta:{dir:["left-to-right"]}},Ym={de:"Wolaytta",en:"Wolaytta",es:"Idioma wolayta",fi:"Wolaitta",fr:"wolaita",he:"וולאיטה",it:"lingua wolaytta",ja:"ウォライタ語",nl:"Wolayta",pt:"Língua wolaytta",ru:"Воламо",sv:"wolaytta",_meta:{dir:["left-to-right"]}},Xm={ca:"waray-waray",cs:"warajština",da:"varajansk",de:"Wáray-Wáray",en:"Waray",eo:"ŭaraja lingvo",es:"samareño",eu:"samarera",fi:"waray-waray",fr:"ouarayen",gl:"Lingua waray-waray",he:"ואריי-ואריי",hu:"waray",id:"Bahasa Waray-waray",it:"waray-waray",ja:"ワライ語",nb_NO:"waray-waray",nl:"Waray-Waray",pl:"język warajski",pt:"língua waray-waray",pt_BR:"Língua waray-waray",ru:"варайский язык",sv:"waray-waray",_meta:{dir:["left-to-right"]}},Qm={ca:"wakhí",cs:"wachánština",de:"Wakhi",en:"Wakhi",es:"wají",fi:"Vahanin kieli",fr:"wakhi",gl:"Lingua vakhí",id:"Bahasa Wakhi",it:"wakhi",ja:"ワヒ語",nb_NO:"Wakhi",nl:"Wakhi",pl:"Język wachański",pt:"Língua wakhi",pt_BR:"Língua wakhi",ru:"Ваханский язык",sv:"wakhí",_meta:{dir:["right-to-left","left-to-right"]}},e0={ca:"sòrab",cs:"lužická srbština",da:"Sorbisk",de:"Sorbisch",en:"Sorbian",eo:"soraba lingvo",es:"sorbio",eu:"Sorabiera",fi:"Sorbi",fr:"sorabe",gl:"Lingua sorabia",he:"שפות סורביות",hu:"szorb",id:"Bahasa Sorbia",it:"sorabo",ja:"ソルブ語",nb_NO:"sorbisk",nl:"Sorbisch",pl:"języki łużyckie",pt:"sorábio",ru:"лужицкие языки",sl:"lužiščina",sv:"sorbiska",_meta:{dir:["left-to-right"]}},a0={ca:"wallisià",de:"Wallisianisch",en:"Wallisian",es:"walisiano",fi:"Uvean kieli",fr:"wallisien",gl:"Lingua wallisiana",he:"ואליסיאנית",it:"wallisiano",ja:"ウォリス語",nl:"Wallisiaans",pl:"Język uvea wschodni",pt:"Língua wallisiana",ru:"Уоллисский язык",sv:"walliska",_meta:{dir:["left-to-right"]}},t0={ca:"wòlof",cs:"wolofština",da:"Wolof",de:"Wolof",en:"Wolof",eo:"volofa lingvo",es:"wólof",eu:"Wolofera",fi:"wolofin kieli",fr:"wolof",gl:"lingua wolof",he:"וולופית",hu:"volof",id:"Bahasa Wolof",it:"wolof",ja:"ウォロフ語",nb_NO:"wolof",nl:"Wolof",pl:"język wolof",pt:"Língua wolof",ru:"волоф",sl:"volofščina",sv:"wolof",_meta:{countries:["SN"],dir:["right-to-left","left-to-right"]}},i0={ca:"wu",cs:"wu",de:"Wu",en:"Wu Chinese",eo:"vua lingvo",es:"Chino wu",eu:"Wu txinera",fi:"Wu-kiina",fr:"wu",gl:"Lingua wu",he:"סינית וו",id:"bahasa Wu",it:"wu",ja:"呉語",nb_NO:"wu",nl:"Wu",pl:"język wu",pt:"Língua wu",ru:"у",sl:"vu",sv:"wu",zh_Hant:"吳語",_meta:{dir:["top-to-bottom"]}},n0={ca:"wymysorys",cs:"vilamovština",da:"vimisørisk",de:"Wilmesaurisch",en:"Vilamovian",eo:"vilamovica lingvo",es:"vilamoviciano",eu:"Wymysorys",fi:"Wymysorys",fr:"wilamowicien",gl:"Lingua wymysorys",hu:"wilamowicei",id:"Bahasa Wimisoris",it:"vilamoviano",ja:"ヴィラモヴィアン語",nb_NO:"wymysörisk",nl:"Wymysöryś",pl:"język wilamowski",pt:"Wymysorys",pt_BR:"Wymysorys",ru:"вилямовский язык",sv:"wymysöriska",_meta:{dir:["left-to-right"]}},r0={ca:"xosa",cs:"Xhoština",da:"isiXhosa",de:"IsiXhosa",en:"Xhosa",eo:"kosa lingvo",es:"xhosa",eu:"xhosera",fi:"xhosan kieli",fr:"xhosa",gl:"Lingua xhosa",he:"קוסה",hu:"xhosza",id:"Bahasa Xhosa",it:"xhosa",ja:"コサ語",nb_NO:"xhosa",nl:"Xhosa",pl:"język xhosa",pt:"língua xhosa",pt_BR:"língua xhosa",ru:"коса",sl:"kojsanščina",sv:"xhosa",zh_Hant:"科薩語",_meta:{countries:["ZA","ZW"],dir:["left-to-right"]}},s0={ca:"mingrelià",cs:"mingrelština",de:"Mingrelisch",en:"Mingrelian",eo:"Mingrela kartvela lingvo",es:"megreliano",eu:"mingreliera",fi:"mingreli",fr:"mingrélien",gl:"Lingua mingreliana",he:"מגרלית",hu:"mingrél",id:"Bahasa Mingrelia",it:"mengrelio",ja:"メグレル語",nb_NO:"Mingrelsk",nl:"Mingreels",pl:"język megrelski",pt:"Língua mingreliana",pt_BR:"Língua mingreliana",ru:"мегрельский язык",sv:"megreliska",_meta:{dir:["left-to-right"]}},o0={cs:"jaghnóbština",de:"Jaghnobi",en:"Yaghnobi",eo:"jagnoba lingvo",es:"yagnobi",fi:"Jagnobin kieli",fr:"yaghnobi",gl:"Lingua iagnobí",id:"Bahasa Yaghnobi",it:"yaghnobī́",ja:"ヤグノビ語",nb_NO:"Yaghnobi",nl:"Yaghnobi",pl:"Język jagnobijski",pt:"Língua yaghnobi",ru:"ягнобский язык",sv:"yaghnobi",_meta:{dir:["left-to-right"]}},l0={de:"Yapesisch",en:"Yapese",eu:"Yapera",fi:"Yapin kieli",fr:"yap",it:"yapese",ja:"ヤップ語",nb_NO:"Yapesisk",nl:"Yapees",pl:"Język yap",pt:"Língua yap",ru:"япский язык",sv:"yapesiska",_meta:{dir:["left-to-right"]}},c0={en:"Yangben",fi:"Yangben",fr:"yangben",ja:"ヤンベン語",nl:"Yangben",sv:"yangben",_meta:{dir:["left-to-right"]}},u0={de:"Jenisch",en:"Yenish",eo:"jeniŝa lingvo",es:"Idioma yeniche",eu:"Yeniche hizkuntza",fr:"yéniche",id:"bahasa Yeni",it:"yeniche",ja:"イェニッシュ",nb_NO:"jenischespråket",nl:"Jenisch",pt:"Língua yeniche",ru:"Енишский язык",sv:"jeniska",_meta:{dir:["left-to-right"]}},d0={ca:"ídix",cs:"jidiš",da:"jiddisch",de:"Jiddisch",en:"Yiddish",eo:"jido",es:"yidis",eu:"Yiddish",fi:"jiddiš",fr:"yiddish",gl:"Lingua yiddish",he:"יידיש",hu:"jiddis",id:"bahasa Yiddi",it:"yiddish",ja:"イディッシュ語",nb_NO:"jiddisch",nl:"Jiddisch",pl:"jidysz",pt:"língua iídiche",pt_BR:"língua iídiche",ru:"идиш",sl:"jidiš",sv:"jiddisch",zh_Hant:"意第緒語",_meta:{dir:["right-to-left"]}},f0={ca:"ioruba",cs:"jorubština",de:"Yoruba",en:"Yoruba",eo:"joruba lingvo",es:"yoruba",eu:"jorubera",fi:"joruban kieli",fr:"yoruba",gl:"Lingua yoruba",he:"יורובה",hu:"joruba",id:"Bahasa Yoruba",it:"yoruba",ja:"ヨルバ語",nb_NO:"joruba",nl:"Yoruba",pl:"język joruba",pt:"Língua iorubá",ru:"йоруба",sl:"jorubščina",sv:"yoruba",zh_Hant:"約魯巴語",_meta:{dir:["left-to-right"]}},h0={ca:"yonaguni",en:"Yonaguni",es:"yonaguni",eu:"yonaguniera",fr:"yonaguni",id:"Bahasa Yonaguni",it:"yonaguni",ja:"与那国方言",pt:"Língua Yonaguni",ru:"Йонагунский язык",sv:"yonaguni",zh_Hant:"與那國語",_meta:{dir:["left-to-right","vertical right-to-left"]}},p0={ca:"iurac",cs:"něnečtina",de:"Nenzisch",en:"Nenets",eo:"neneca lingvo",es:"nenezo",eu:"nenetsera",fi:"nenetsi",fr:"nénètse",he:"ננצית",hu:"nyenyec",id:"Bahasa-bahasa Nenets",it:"lingua neneziana",ja:"ネネツ語",nb_NO:"nenetsisk",nl:"Nenets",pl:"język nieniecki",ru:"ненецкий язык",sv:"nentsiska",zh_Hans:"涅涅茨语",zh_Hant:"涅涅茨語",_meta:{dir:["left-to-right"]}},g0={ca:"nheengatu",de:"Nheengatu",en:"Nheengatu",eo:"nengatua lingvo",es:"ñe'engatú",fi:"Ñeengatú",fr:"nheengatu",gl:"Lingua nheengatu",it:"nheengatu",ja:"ニェエンガトゥ語",nl:"Nheengatu",pt:"nheengatu",pt_BR:"Nheengatu",ru:"ньенгату",sv:"nheengatu",_meta:{dir:["left-to-right"]}},m0={ca:"llengües zhuang",cs:"čuangština",da:"zhuang",de:"Zhuang",en:"Zhuang",eo:"ĝuanga lingvo",es:"chuang",eu:"zhuangera",fi:"Zhuangin kieli",fr:"zhuang",gl:"Linguas zhuang",he:"ג'ואנג",hu:"csuang",id:"Rumpun bahasa Zhuang",it:"zhuang",ja:"チワン語",nb_NO:"zhuang",nl:"Zhuang",pl:"język zhuang",pt:"Língua zhuang",ru:"чжуанский язык",sv:"zhuang",zh_Hans:"壮语",zh_Hant:"壯語",_meta:{dir:["left-to-right"]}},b0={ca:"zelandès",de:"Seeländisch",en:"Zeelandic",eo:"zelanda lingvo",es:"zelandés",fr:"zélandais",gl:"Lingua zelandesa",he:"זילנדית",it:"zelandese",ja:"ゼーランド語",nb_NO:"zeeuws",nl:"Zeeuws",pl:"dialekt zelandzki",pt:"zeêuws",ru:"зеландский диалект",sv:"zeeländska",zh_Hans:"西兰语",zh_Hant:"西蘭語",_meta:{dir:["left-to-right"]}},v0={ca:"amazic estàndard marroquí",de:"marokkanisches Tamazight",en:"Standard Moroccan Berber",eo:"norma maroka tamaziĥta lingvo",es:"Amazig estándar marroquí",fi:"Vakioitu tamazight",fr:"amazighe standard marocain",gl:"Amazigh estándar marroquí",ja:"標準モロッコ・タマジクト語",nl:"Standaardtamazight",ru:"Стандартный марокканский берберский язык",sl:"knjižna maroška berberščina",sv:"marockansk standardberbiska",zh_Hans:"标准摩洛哥柏柏尔语",zh_Hant:"標準摩洛哥柏柏語",_meta:{dir:["left-to-right"]}},k0={ca:"llengües sinítiques",cs:"čínština",da:"kinesisk",de:"Chinesisch",en:"Chinese",eo:"ĉina lingvo",es:"chino",eu:"txinera",fi:"kiina",fr:"langues chinoises",gl:"lingua chinesa",he:"סינית",hu:"kínai",id:"bahasa Tionghoa",it:"cinese",ja:"中国語",nb_NO:"kinesisk",nl:"Chinese talen",pl:"język chiński",pt:"língua chinesa",pt_BR:"língua chinesa",ru:"китайский язык",sl:"kitajščina",sv:"kinesiska",zh_Hans:"中文",zh_Hant:"漢語",_meta:{countries:["CN"],dir:["left-to-right","top-to-bottom"]}},y0={ca:"xinès simplificat",cs:"zjednodušená čínština",da:"forenklet kinesisk",de:"vereinfachtes Chinesisch",en:"Simplified Chinese",eo:"simpligita ĉina skribsistemo",es:"chino simplificado",eu:"Txinera sinplifikatua",fr:"chinois simplifié",gl:"chinés simplificado",he:"סינית מפושטת",hu:"egyszerűsített kínai",id:"aksara Han sederhana",it:"cinese semplificato",ja:"簡体字中国語",nb_NO:"forenklet kinesisk",nl:"vereenvoudigd Chinees",pl:"język chiński uproszczony",pt:"chinês simplificado",ru:"упрощённый китайский",sl:"poenostavljena kitajščina",sv:"förenklad kinesiska",zh_Hans:"简体中文",zh_Hant:"簡體中文",_meta:{dir:["left-to-right"]}},_0={ca:"xinès tradicional",cs:"čínština (tradiční)",da:"traditionel kinesisk",de:"traditionelles Chinesisch",en:"Traditional Chinese",eo:"ĉina lingvo de tradicia ortografio",es:"chino tradicional",eu:"Txinera tradizional",fi:"perinteinen kiina",fr:"chinois traditionnel",gl:"chinés tradicional",he:"סינית מסורתית",it:"cinese tradizionale",ja:"繁体字中国語",nb_NO:"tradisjonell kinesisk",nl:"traditioneel Chinees",pl:"język chiński tradycyjny",pt:"chinês tradicional",ru:"традиционный китайский",sl:"tradicionalna kitajščina",sv:"traditionell kinesiska",zh_Hans:"繁体中文",zh_Hant:"繁體中文",_meta:{dir:["left-to-right"]}},w0={ca:"zulu",cs:"zuluština",da:"zulu",de:"isiZulu",en:"Zulu",eo:"zulua lingvo",es:"zulú",eu:"zuluera",fi:"zulu",fr:"zoulou",gl:"Lingua zulú",he:"זולו",hu:"zulu",id:"Bahasa Zulu",it:"zulu",ja:"ズールー語",nb_NO:"zulu",nl:"Zoeloe",pl:"język zulu",pt:"língua zulu",pt_BR:"língua zulu",ru:"зулу",sl:"zulujščina",sv:"zulu",zh_Hant:"祖魯語",_meta:{countries:["ZA"],dir:["left-to-right"]}},z0={ca:"llengua zuni",de:"Zuñi",en:"Zuni",eo:"zunjia",es:"zuñi",eu:"Zuni hizkuntza",fi:"Zuni",fr:"zuni",hu:"zuni",id:"bahasa Zuni",it:"zuni",ja:"ズニ語",nb_NO:"zunispråket",nl:"Zuni",pl:"Język zuni",pt:"Língua zuni",pt_BR:"Língua zuni",ru:"зуни",sv:"zuni",zh_Hans:"苏尼语",zh_Hant:"蘇尼語",_meta:{dir:["left-to-right"]}},ni={aa:zc,ab:Sc,abq:jc,acm:Ac,adx:xc,ady:Bc,aeb:Ec,af:Mc,agq:Lc,ajp:Rc,ak:Hc,akl:Cc,akz:Oc,aln:Nc,als:Ic,alt:Pc,am:Tc,ami:Kc,an:Dc,anp:Uc,aoc:Jc,apc:qc,ar:Fc,arn:Wc,arq:Gc,ary:$c,arz:Vc,as:Zc,ase:Yc,ast:Xc,atj:Qc,av:eu,awa:au,ay:tu,az:iu,ba:nu,ban:ru,bar:su,"bat-smg":{ca:"samogitià",cs:"žemaitština",da:"Žemaitisk",de:"Schemaitisch",en:"Samogitian",eo:"Ĵemajtia dialekto",es:"Idioma samogitiano",eu:"samogatiera",fi:"Samogiitti",fr:"samogitien",gl:"Samoxiciano",hu:"szamogit",id:"Dialek Samogitia",it:"samogitico",ja:"サモギティア語",nb_NO:"samogitisk",nl:"Samogitisch",pl:"język żmudzki",pt:"Samogiciano",ru:"жемайтское наречие",sl:"samogitščina",sv:"žemaitiska",zh_Hans:"萨莫吉提亚语",zh_Hant:"薩莫吉提亞語",_meta:{dir:["left-to-right"]}},bbc:ou,bdr:lu,bej:cu,bfi:uu,bfq:du,bg:fu,bh:hu,bho:pu,bi:gu,bla:mu,bm:bu,bn:vu,bnn:ku,bo:yu,bpy:_u,bqi:wu,br:zu,brx:Su,bsa:ju,bsk:Au,bss:xu,btm:Bu,bug:Eu,bxr:Mu,bzs:Lu,ca:Ru,cak:Hu,cal:Cu,ccp:Ou,cdo:Nu,ce:Iu,ceb:Pu,ch:Tu,chn:Ku,cho:Du,chr:Uu,chy:Ju,ckb:qu,ckt:Fu,cnh:Wu,co:Gu,cpx:$u,cr:Vu,crh:Zu,crs:Yu,cs:Xu,csb:Qu,ctg:ed,cv:ad,cy:td,da:id,dag:nd,de:rd,din:sd,diq:od,dru:ld,dsb:cd,dtp:ud,dty:dd,dua:fd,dv:hd,dz:pd,ee:gd,efi:md,egl:bd,el:vd,en:kd,eo:yd,es:_d,esu:wd,et:zd,eu:Sd,ext:jd,fa:Ad,"fa-af":{ca:"darí",cs:"darijština",da:"dari",de:"Dari",en:"Dari",eo:"daria lingvo",es:"dari",eu:"dari",fi:"darin kieli",fr:"dari",gl:"Lingua dari",he:"דארי",hu:"dari",id:"Dari",it:"dari",ja:"ダリー語",nb_NO:"dari",nl:"Dari",pl:"Dari",pt:"Língua dari",pt_BR:"Língua dari",ru:"дари",sl:"darijščina",sv:"dari",zh_Hans:"达利语",zh_Hant:"達利語",_meta:{dir:["right-to-left"]}},ff:xd,fi:Bd,fil:Ed,fit:Md,"fiu-vro":{ca:"võro",cs:"võruština",da:"Võro",de:"Võro",en:"Võro",eo:"voroa lingvo",es:"idioma võro",fi:"võro",fr:"võro",gl:"Lingua võro",hu:"võro",id:"Bahasa Võro",it:"võro",ja:"ヴォロ語",nb_NO:"sørestisk",nl:"Võro",pl:"język võro",pt:"Língua võro",ru:"выруский диалект",sv:"võro",zh_Hans:"沃罗语",_meta:{dir:["left-to-right"]}},fj:Ld,fkv:Rd,fo:Hd,fon:Cd,fr:Od,frc:Nd,frp:Id,frr:Pd,fur:Td,fy:Kd,ga:Dd,gaa:Ud,gag:Jd,gan:qd,gcr:Fd,gd:Wd,gil:Gd,gl:$d,glk:Vd,gn:Zd,gom:Yd,gor:Xd,gpe:Qd,gsg:ef,"gsw-fr":{ca:"alsacià",cs:"alsaština",de:"Elsässisch",en:"Alsatian",eo:"alzaca lingvo",es:"alsaciano",eu:"Alsaziera",fi:"Elsassi",fr:"alsacien",gl:"Lingua alsaciana",he:"אלזסית",hu:"elzászi",id:"bahasa Elsass",it:"dialetto alsaziano",ja:"アルザス語",nb_NO:"elsassisk",nl:"Elzassisch",pl:"gwary alzackie",pt:"Língua alsaciana",pt_BR:"Língua alsaciana",ru:"эльзасский диалект",sv:"elsassiska",_meta:{dir:["left-to-right"]}},gu:af,guc:tf,guw:nf,gv:rf,ha:sf,hai:of,hak:lf,haw:cf,he:uf,hif:df,hil:ff,hno:hf,ho:pf,hoc:gf,hrx:mf,hsb:bf,ht:vf,hu:kf,hy:yf,hyw:_f,hz:wf,id:zf,ii:Sf,ik:jf,ilo:Af,inh:xf,is:Bf,it:Ef,iu:Mf,ja:Lf,jam:Rf,jax:Hf,jv:Cf,ka:Of,kaa:Nf,kab:If,kbd:Pf,kbp:Tf,kcg:Kf,kea:Df,kg:Uf,kgp:Jf,kha:qf,khg:Ff,khw:Wf,ki:Gf,kj:$f,kjg:Vf,kjp:Zf,kk:Yf,kl:Xf,km:Qf,kn:eh,ko:ah,koi:th,kr:ih,krc:nh,kri:rh,krj:sh,krl:oh,ks:lh,ksh:ch,ku:uh,kum:dh,kut:fh,kv:hh,kvr:ph,kw:gh,ky:mh,lad:bh,lag:vh,lb:kh,lez:yh,lg:_h,li:wh,lij:zh,lki:Sh,lkt:jh,lld:Ah,lmo:xh,ln:Bh,lo:Eh,loz:Mh,lrc:Lh,lt:Rh,ltg:Hh,lus:Ch,luz:Oh,lv:Nh,lvk:Ih,lzz:Ph,mad:Th,mai:Kh,mdf:Dh,mfe:Uh,mg:Jh,mh:qh,mhr:Fh,mi:Wh,mic:Gh,min:$h,mk:Vh,ml:Zh,mn:Yh,mnc:Xh,mni:Qh,mnw:ep,mo:ap,moe:tp,mr:ip,mrh:np,mrj:rp,ms:sp,mt:op,mui:lp,mus:cp,mwl:up,mwv:dp,my:fp,myv:hp,mzn:pp,na:gp,nan:mp,nap:bp,nb_NO:vp,nds:kp,ne:yp,new:{ca:"newar de Katmandú",cs:"névárština",de:"Newari",en:"Newar",eo:"nevara lingvo",es:"Newari",eu:"newarera",fi:"Newari",fr:"newari",gl:"Lingua newari",he:"נפאל בהאסה",hu:"névári",id:"bahasa Newar",it:"nepal bhasa",ja:"ネパール・バサ語",nb_NO:"Nepal bhasa",nl:"Newaars",pl:"Język newarski",pt:"Língua bhasa",ru:"неварский язык",sv:"newari",_meta:{dir:["left-to-right"]}},ng:_p,nia:wp,niu:zp,nl:Sp,nn:jp,no:Ap,nod:xp,nog:Bp,nqo:Ep,nr:Mp,"nrf-gg":{ca:"guernseiès",cs:"guernseyština",de:"Guernésiais",en:"Guernésiais",eo:"gernezeja lingvo",es:"guernseyés",fi:"Guernésiais",fr:"guernesiais",id:"bahasa Guernésiais",it:"dialetto guernesiais",ja:"ガーンジー島方言",nb_NO:"guernésiais",nl:"Dgèrnésiais",pl:"Dgèrnésiais",pt:"Guernésiais",ru:"Гернсийский диалект нормандского языка",sl:"Guernseyščina",sv:"guernésiais",zh_Hans:"根西方言",_meta:{dir:["left-to-right"]}},nso:Lp,nv:Rp,ny:Hp,nys:Cp,oc:Op,oj:Np,olo:Ip,om:Pp,ood:Tp,or:Kp,os:Dp,osa:Up,ovd:Jp,pa_PK:qp,pag:Fp,pap:Wp,pcd:Gp,pdc:$p,pdt:Vp,pfl:Zp,pih:Yp,pis:Xp,pjt:Qp,pl:eg,pms:ag,pnt:tg,prg:ig,ps:ng,pt:rg,pt_BR:sg,qu:og,quc:lg,rar:cg,rgn:ug,rif:dg,rki:fg,rm:hg,rmc:pg,rmy:gg,rn:mg,ro:bg,ru:vg,rue:kg,rup:yg,rw:_g,ryu:wg,sah:zg,sat:Sg,sc:jg,scn:Ag,sco:xg,sdc:Bg,sdh:Eg,se:Mg,sei:Lg,ses:Rg,sg:Hg,shi:Cg,shn:Og,shy:Ng,si:Ig,sid:Pg,sjd:Tg,sjt:Kg,sju:Dg,sk:Ug,sl:Jg,sli:qg,sm:Fg,sma:Wg,smj:Gg,smn:$g,sms:Vg,sn:Zg,so:Yg,sou:Xg,sq:Qg,srn:em,srq:am,ss:tm,st:im,sth:nm,stq:rm,su:sm,sv:om,sw:lm,syl:cm,szl:um,szy:dm,ta:fm,tay:hm,tcy:pm,te:gm,tet:mm,tg:bm,th:vm,ti:km,tk:ym,tl:_m,tli:wm,tly:zm,tn:Sm,to:jm,tpi:Am,tru:xm,trv:Bm,ts:Em,tt:Mm,tum:Lm,tvl:Rm,tw:Hm,ty:Cm,tyv:Om,tzm:Nm,udm:Im,ug:Pm,uk:Tm,uz:Km,uzs:Dm,ve:Um,vec:Jm,vep:qm,vi:Fm,vls:Wm,vmf:Gm,vot:$m,vro:Vm,wa:Zm,wal:Ym,war:Xm,wbl:Qm,wen:e0,wls:a0,wo:t0,wuu:i0,wym:n0,xh:r0,xmf:s0,yai:o0,yap:l0,yav:c0,yec:u0,yi:d0,yo:f0,yoi:h0,yrk:p0,yrl:g0,za:m0,zea:b0,zgh:v0,zh:k0,"zh-min-nan":{ca:"min nan",cs:"minnanština",da:"Minnan",de:"Min Nan",en:"Southern Min",eo:"minnana lingvo",es:"chino min nan",eu:"hegoaldeko min",fi:"Minnan",fr:"minnan",gl:"lingua min nam",he:"מין דרומי",hu:"minnan",id:"Min Selatan",it:"min nan",ja:"閩南語",nb_NO:"minnan",nl:"Minnanyu",pl:"język minnański",pt:"Min Nan",pt_BR:"Min nan",ru:"южноминьский язык",sl:"južna minščina",sv:"minnan",zh_Hans:"闽南语",zh_Hant:"閩南語",_meta:{dir:["top-to-bottom"]}},zh_Hans:y0,zh_Hant:_0,zu:w0,zun:z0},Z2=Object.freeze(Object.defineProperty({__proto__:null,aa:zc,ab:Sc,abq:jc,acm:Ac,adx:xc,ady:Bc,aeb:Ec,af:Mc,agq:Lc,ajp:Rc,ak:Hc,akl:Cc,akz:Oc,aln:Nc,als:Ic,alt:Pc,am:Tc,ami:Kc,an:Dc,anp:Uc,aoc:Jc,apc:qc,ar:Fc,arn:Wc,arq:Gc,ary:$c,arz:Vc,as:Zc,ase:Yc,ast:Xc,atj:Qc,av:eu,awa:au,ay:tu,az:iu,ba:nu,ban:ru,bar:su,bbc:ou,bdr:lu,bej:cu,bfi:uu,bfq:du,bg:fu,bh:hu,bho:pu,bi:gu,bla:mu,bm:bu,bn:vu,bnn:ku,bo:yu,bpy:_u,bqi:wu,br:zu,brx:Su,bsa:ju,bsk:Au,bss:xu,btm:Bu,bug:Eu,bxr:Mu,bzs:Lu,ca:Ru,cak:Hu,cal:Cu,ccp:Ou,cdo:Nu,ce:Iu,ceb:Pu,ch:Tu,chn:Ku,cho:Du,chr:Uu,chy:Ju,ckb:qu,ckt:Fu,cnh:Wu,co:Gu,cpx:$u,cr:Vu,crh:Zu,crs:Yu,cs:Xu,csb:Qu,ctg:ed,cv:ad,cy:td,da:id,dag:nd,de:rd,default:ni,din:sd,diq:od,dru:ld,dsb:cd,dtp:ud,dty:dd,dua:fd,dv:hd,dz:pd,ee:gd,efi:md,egl:bd,el:vd,en:kd,eo:yd,es:_d,esu:wd,et:zd,eu:Sd,ext:jd,fa:Ad,ff:xd,fi:Bd,fil:Ed,fit:Md,fj:Ld,fkv:Rd,fo:Hd,fon:Cd,fr:Od,frc:Nd,frp:Id,frr:Pd,fur:Td,fy:Kd,ga:Dd,gaa:Ud,gag:Jd,gan:qd,gcr:Fd,gd:Wd,gil:Gd,gl:$d,glk:Vd,gn:Zd,gom:Yd,gor:Xd,gpe:Qd,gsg:ef,gu:af,guc:tf,guw:nf,gv:rf,ha:sf,hai:of,hak:lf,haw:cf,he:uf,hif:df,hil:ff,hno:hf,ho:pf,hoc:gf,hrx:mf,hsb:bf,ht:vf,hu:kf,hy:yf,hyw:_f,hz:wf,id:zf,ii:Sf,ik:jf,ilo:Af,inh:xf,is:Bf,it:Ef,iu:Mf,ja:Lf,jam:Rf,jax:Hf,jv:Cf,ka:Of,kaa:Nf,kab:If,kbd:Pf,kbp:Tf,kcg:Kf,kea:Df,kg:Uf,kgp:Jf,kha:qf,khg:Ff,khw:Wf,ki:Gf,kj:$f,kjg:Vf,kjp:Zf,kk:Yf,kl:Xf,km:Qf,kn:eh,ko:ah,koi:th,kr:ih,krc:nh,kri:rh,krj:sh,krl:oh,ks:lh,ksh:ch,ku:uh,kum:dh,kut:fh,kv:hh,kvr:ph,kw:gh,ky:mh,lad:bh,lag:vh,lb:kh,lez:yh,lg:_h,li:wh,lij:zh,lki:Sh,lkt:jh,lld:Ah,lmo:xh,ln:Bh,lo:Eh,loz:Mh,lrc:Lh,lt:Rh,ltg:Hh,lus:Ch,luz:Oh,lv:Nh,lvk:Ih,lzz:Ph,mad:Th,mai:Kh,mdf:Dh,mfe:Uh,mg:Jh,mh:qh,mhr:Fh,mi:Wh,mic:Gh,min:$h,mk:Vh,ml:Zh,mn:Yh,mnc:Xh,mni:Qh,mnw:ep,mo:ap,moe:tp,mr:ip,mrh:np,mrj:rp,ms:sp,mt:op,mui:lp,mus:cp,mwl:up,mwv:dp,my:fp,myv:hp,mzn:pp,na:gp,nan:mp,nap:bp,nb_NO:vp,nds:kp,ne:yp,ng:_p,nia:wp,niu:zp,nl:Sp,nn:jp,no:Ap,nod:xp,nog:Bp,nqo:Ep,nr:Mp,nso:Lp,nv:Rp,ny:Hp,nys:Cp,oc:Op,oj:Np,olo:Ip,om:Pp,ood:Tp,or:Kp,os:Dp,osa:Up,ovd:Jp,pa_PK:qp,pag:Fp,pap:Wp,pcd:Gp,pdc:$p,pdt:Vp,pfl:Zp,pih:Yp,pis:Xp,pjt:Qp,pl:eg,pms:ag,pnt:tg,prg:ig,ps:ng,pt:rg,pt_BR:sg,qu:og,quc:lg,rar:cg,rgn:ug,rif:dg,rki:fg,rm:hg,rmc:pg,rmy:gg,rn:mg,ro:bg,ru:vg,rue:kg,rup:yg,rw:_g,ryu:wg,sah:zg,sat:Sg,sc:jg,scn:Ag,sco:xg,sdc:Bg,sdh:Eg,se:Mg,sei:Lg,ses:Rg,sg:Hg,shi:Cg,shn:Og,shy:Ng,si:Ig,sid:Pg,sjd:Tg,sjt:Kg,sju:Dg,sk:Ug,sl:Jg,sli:qg,sm:Fg,sma:Wg,smj:Gg,smn:$g,sms:Vg,sn:Zg,so:Yg,sou:Xg,sq:Qg,srn:em,srq:am,ss:tm,st:im,sth:nm,stq:rm,su:sm,sv:om,sw:lm,syl:cm,szl:um,szy:dm,ta:fm,tay:hm,tcy:pm,te:gm,tet:mm,tg:bm,th:vm,ti:km,tk:ym,tl:_m,tli:wm,tly:zm,tn:Sm,to:jm,tpi:Am,tru:xm,trv:Bm,ts:Em,tt:Mm,tum:Lm,tvl:Rm,tw:Hm,ty:Cm,tyv:Om,tzm:Nm,udm:Im,ug:Pm,uk:Tm,uz:Km,uzs:Dm,ve:Um,vec:Jm,vep:qm,vi:Fm,vls:Wm,vmf:Gm,vot:$m,vro:Vm,wa:Zm,wal:Ym,war:Xm,wbl:Qm,wen:e0,wls:a0,wo:t0,wuu:i0,wym:n0,xh:r0,xmf:s0,yai:o0,yap:l0,yav:c0,yec:u0,yi:d0,yo:f0,yoi:h0,yrk:p0,yrl:g0,za:m0,zea:b0,zgh:v0,zh:k0,zh_Hans:y0,zh_Hant:_0,zu:w0,zun:z0},Symbol.toStringTag,{value:"Module"}));function B2(a){let e,t;return e=new ur({props:{t:Lr.t.general.loginWithOpenStreetMap}}),{c(){qa(e.$$.fragment)},m(i,n){Fa(e,i,n),t=!0},p:x0,i(i){t||(ee(e.$$.fragment,i),t=!0)},o(i){ce(e.$$.fragment,i),t=!1},d(i){Wa(e,i)}}}function E2(a){let e,t,i,n,r,s;t=new Q_({props:{class:"m-1 w-12"}});const o=a[3].default,d=ut(o,a,a[2],null),p=d||B2();return{c(){e=Oa("button"),qa(t.$$.fragment),i=Na(),p&&p.c(),ge(e,"class",a[1]),A0(e,"margin-left","0")},m(u,v){ue(u,e,v),Fa(t,e,null),Ve(e,i),p&&p.m(e,null),n=!0,r||(s=Ae(e,"click",a[4]),r=!0)},p(u,[v]){d&&d.p&&(!n||v&4)&&dt(d,o,u,u[2],n?ht(o,u[2],v,null):ft(u[2]),null),(!n||v&2)&&ge(e,"class",u[1])},i(u){n||(ee(t.$$.fragment,u),ee(p,u),n=!0)},o(u){ce(t.$$.fragment,u),ce(p,u),n=!1},d(u){u&&de(e),Wa(t),p&&p.d(u),r=!1,s()}}}function M2(a,e,t){let{$$slots:i={},$$scope:n}=e,{osmConnection:r}=e,{clss:s=void 0}=e;r===void 0&&console.error("No osmConnection passed into loginButton");const o=()=>r.AttemptLogin();return a.$$set=d=>{"osmConnection"in d&&t(0,r=d.osmConnection),"clss"in d&&t(1,s=d.clss),"$$scope"in d&&t(2,n=d.$$scope)},[r,s,n,i,o]}class Y2 extends Bt{constructor(e){super(),Et(this,e,M2,E2,Mt,{osmConnection:0,clss:1})}}function oo(a,e,t){const i=a.slice();return i[7]=e[t],i}function lo(a,e,t){const i=a.slice();return i[7]=e[t],i}function co(a){let e,t,i,n,r,s,o,d,p;return i=new t2({props:{class:"mr-1 h-4 w-4 shrink-0","aria-hidden":"true"}}),r=new O0({props:{cls:"max-w-full",value:a[1],id:"pick-language",$$slots:{default:[H2]},$$scope:{ctx:a}}}),{c(){e=Oa("form"),t=Oa("label"),qa(i.$$.fragment),n=Na(),qa(r.$$.fragment),ge(t,"for","pick-language"),ge(t,"class","neutral-label flex max-w-full"),ge(e,"class",s=Ki("flex max-w-full items-center pr-4",a[2]))},m(u,v){ue(u,e,v),Ve(e,t),Fa(i,t,null),Ve(e,n),Fa(r,e,null),o=!0,d||(p=B0(P0.call(null,t,Lr.t.general.pickLanguage)),d=!0)},p(u,v){const S={};v&2&&(S.value=u[1]),v&4121&&(S.$$scope={dirty:v,ctx:u}),r.$set(S),(!o||v&4&&s!==(s=Ki("flex max-w-full items-center pr-4",u[2])))&&ge(e,"class",s)},i(u){o||(ee(i.$$.fragment,u),ee(r.$$.fragment,u),o=!0)},o(u){ce(i.$$.fragment,u),ce(r.$$.fragment,u),o=!1},d(u){u&&de(e),Wa(i),Wa(r),d=!1,p()}}}function uo(a){let e,t,i=a[3],n=[];for(let r=0;r<i.length;r+=1)n[r]=ho(lo(a,i,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=Na(),t=Oa("option"),t.disabled=!0,t.__value="",t.value=t.__value},m(r,s){for(let o=0;o<n.length;o+=1)n[o]&&n[o].m(r,s);ue(r,e,s),ue(r,t,s)},p(r,s){if(s&24){i=r[3];let o;for(o=0;o<i.length;o+=1){const d=lo(r,i,o);n[o]?n[o].p(d,s):(n[o]=ho(d),n[o].c(),n[o].m(e.parentNode,e))}for(;o<n.length;o+=1)n[o].d(1);n.length=i.length}},d(r){Mr(n,r),r&&de(e),r&&de(t)}}}function fo(a){var r;let e,t=(((r=ni[a[7]])==null?void 0:r[a[4]])??a[7])+"",i,n;return{c(){e=Ia("("),i=Ia(t),n=Ia(")")},m(s,o){ue(s,e,o),ue(s,i,o),ue(s,n,o)},p(s,o){var d;o&24&&t!==(t=(((d=ni[s[7]])==null?void 0:d[s[4]])??s[7])+"")&&zi(i,t)},d(s){s&&de(e),s&&de(i),s&&de(n)}}}function ho(a){let e,t=(vi[a[7]]??"")+"",i,n,r,s=a[7]!==a[4]&&fo(a);return{c(){e=Oa("option"),i=Ia(t),n=Na(),s&&s.c(),e.__value=r=a[7],e.value=e.__value,ge(e,"class","font-bold")},m(o,d){ue(o,e,d),Ve(e,i),Ve(e,n),s&&s.m(e,null)},p(o,d){d&8&&t!==(t=(vi[o[7]]??"")+"")&&zi(i,t),o[7]!==o[4]?s?s.p(o,d):(s=fo(o),s.c(),s.m(e,null)):s&&(s.d(1),s=null),d&8&&r!==(r=o[7])&&(e.__value=r,e.value=e.__value)},d(o){o&&de(e),s&&s.d()}}}function po(a){let e;function t(r,s){var o;return((o=ni[r[7]])==null?void 0:o[r[4]])!==void 0?R2:L2}let i=t(a),n=i(a);return{c(){n.c(),e=ri()},m(r,s){n.m(r,s),ue(r,e,s)},p(r,s){i===(i=t(r))&&n?n.p(r,s):(n.d(1),n=i(r),n&&(n.c(),n.m(e.parentNode,e)))},d(r){n.d(r),r&&de(e)}}}function L2(a){let e,t=a[7]+"",i,n;return{c(){e=Ia("("),i=Ia(t),n=Ia(")")},m(r,s){ue(r,e,s),ue(r,i,s),ue(r,n,s)},p(r,s){s&1&&t!==(t=r[7]+"")&&zi(i,t)},d(r){r&&de(e),r&&de(i),r&&de(n)}}}function R2(a){var r;let e,t=((r=ni[a[7]])==null?void 0:r[a[4]])+" - "+a[7],i,n;return{c(){e=Ia("("),i=Ia(t),n=Ia(")")},m(s,o){ue(s,e,o),ue(s,i,o),ue(s,n,o)},p(s,o){var d;o&17&&t!==(t=((d=ni[s[7]])==null?void 0:d[s[4]])+" - "+s[7])&&zi(i,t)},d(s){s&&de(e),s&&de(i),s&&de(n)}}}function go(a){let e,t=(vi[a[7]]??"")+"",i,n,r,s,o=a[7]!==a[4]&&po(a);return{c(){e=Oa("option"),i=Ia(t),n=Na(),o&&o.c(),r=Na(),e.__value=s=a[7],e.value=e.__value,ge(e,"class","font-bold")},m(d,p){ue(d,e,p),Ve(e,i),Ve(e,n),o&&o.m(e,null),Ve(e,r)},p(d,p){p&1&&t!==(t=(vi[d[7]]??"")+"")&&zi(i,t),d[7]!==d[4]?o?o.p(d,p):(o=po(d),o.c(),o.m(e,r)):o&&(o.d(1),o=null),p&1&&s!==(s=d[7])&&(e.__value=s,e.value=e.__value)},d(d){d&&de(e),o&&o.d()}}}function H2(a){let e,t,i=a[3]&&uo(a),n=a[0].filter(mo),r=[];for(let s=0;s<n.length;s+=1)r[s]=go(oo(a,n,s));return{c(){i&&i.c(),e=Na();for(let s=0;s<r.length;s+=1)r[s].c();t=ri()},m(s,o){i&&i.m(s,o),ue(s,e,o);for(let d=0;d<r.length;d+=1)r[d]&&r[d].m(s,o);ue(s,t,o)},p(s,o){if(s[3]?i?i.p(s,o):(i=uo(s),i.c(),i.m(e.parentNode,e)):i&&(i.d(1),i=null),o&17){n=s[0].filter(mo);let d;for(d=0;d<n.length;d+=1){const p=oo(s,n,d);r[d]?r[d].p(p,o):(r[d]=go(p),r[d].c(),r[d].m(t.parentNode,t))}for(;d<r.length;d+=1)r[d].d(1);r.length=n.length}},d(s){i&&i.d(s),s&&de(e),Mr(r,s),s&&de(t)}}}function C2(a){var n;let e,t,i=((n=a[0])==null?void 0:n.length)>1&&co(a);return{c(){i&&i.c(),e=ri()},m(r,s){i&&i.m(r,s),ue(r,e,s),t=!0},p(r,[s]){var o;((o=r[0])==null?void 0:o.length)>1?i?(i.p(r,s),s&1&&ee(i,1)):(i=co(r),i.c(),ee(i,1),i.m(e.parentNode,e)):i&&(_i(),ce(i,1,1,()=>{i=null}),wi())},i(r){t||(ee(i),t=!0)},o(r){ce(i),t=!1},d(r){i&&i.d(r),r&&de(e)}}}const mo=a=>a!=="_context";function O2(a,e,t){let i,{availableLanguages:n=Object.keys(vi)}=e,{assignTo:r=ya.language}=e,{preferredLanguages:s=void 0}=e,o;s==null||s.addCallbackAndRunD(u=>{const v=ya.getBestSupportedLanguage();(u==null?void 0:u.indexOf(v))<0&&(u==null||u.push(v)),t(3,o=u==null?void 0:u.filter(S=>n.indexOf(S)>=0))});let{clss:d=void 0}=e,p=ya.language;return Hi(a,p,u=>t(4,i=u)),a.$$set=u=>{"availableLanguages"in u&&t(0,n=u.availableLanguages),"assignTo"in u&&t(1,r=u.assignTo),"preferredLanguages"in u&&t(6,s=u.preferredLanguages),"clss"in u&&t(2,d=u.clss)},[n,r,d,o,i,p,s]}class X2 extends Bt{constructor(e){super(),Et(this,e,O2,C2,Mt,{availableLanguages:0,assignTo:1,preferredLanguages:6,clss:2})}}function bo(a,e,t){const i=a.slice();return i[4]=e[t],i}function vo(a){let e,t,i,n=a[2],r=[];for(let o=0;o<n.length;o+=1)r[o]=ko(bo(a,n,o));const s=o=>ce(r[o],1,1,()=>{r[o]=null});return{c(){e=Oa("div");for(let o=0;o<r.length;o+=1)r[o].c();ge(e,"class",t=Ki("relative",a[1]))},m(o,d){ue(o,e,d);for(let p=0;p<r.length;p+=1)r[p]&&r[p].m(e,null);i=!0},p(o,d){if(d&5){n=o[2];let p;for(p=0;p<n.length;p+=1){const u=bo(o,n,p);r[p]?(r[p].p(u,d),ee(r[p],1)):(r[p]=ko(u),r[p].c(),ee(r[p],1),r[p].m(e,null))}for(_i(),p=n.length;p<r.length;p+=1)s(p);wi()}(!i||d&2&&t!==(t=Ki("relative",o[1])))&&ge(e,"class",t)},i(o){if(!i){for(let d=0;d<n.length;d+=1)ee(r[d]);i=!0}},o(o){r=r.filter(Boolean);for(let d=0;d<r.length;d+=1)ce(r[d]);i=!1},d(o){o&&de(e),Mr(r,o)}}}function ko(a){let e,t,i,n;return t=new H0({props:{icon:a[4].icon,color:a[4].color,clss:a[0]}}),{c(){e=Oa("div"),qa(t.$$.fragment),i=Na(),ge(e,"class","absolute top-0 left-0 h-full w-full flex items-center")},m(r,s){ue(r,e,s),Fa(t,e,null),Ve(e,i),n=!0},p(r,s){const o={};s&4&&(o.icon=r[4].icon),s&4&&(o.color=r[4].color),s&1&&(o.clss=r[0]),t.$set(o)},i(r){n||(ee(t.$$.fragment,r),n=!0)},o(r){ce(t.$$.fragment,r),n=!1},d(r){r&&de(e),Wa(t)}}}function N2(a){let e,t,i=a[2]!==void 0&&a[2].length>0&&vo(a);return{c(){i&&i.c(),e=ri()},m(n,r){i&&i.m(n,r),ue(n,e,r),t=!0},p(n,[r]){n[2]!==void 0&&n[2].length>0?i?(i.p(n,r),r&4&&ee(i,1)):(i=vo(n),i.c(),ee(i,1),i.m(e.parentNode,e)):i&&(_i(),ce(i,1,1,()=>{i=null}),wi())},i(n){t||(ee(i),t=!0)},o(n){ce(i),t=!1},d(n){i&&i.d(n),n&&de(e)}}}function I2(a,e,t){let{icons:i}=e,n;typeof i=="string"?n=i.split(";").map(o=>{if(o.startsWith("http://")||o.startsWith("https://"))return{icon:o,color:"black"};const[d,p]=o.split(":");return{icon:d,color:p??"black"}}):n=i;let{clss:r=""}=e,{size:s="w-full h-full"}=e;return a.$$set=o=>{"icons"in o&&t(3,i=o.icons),"clss"in o&&t(0,r=o.clss),"size"in o&&t(1,s=o.size)},[r,s,n,i]}class Q2 extends Bt{constructor(e){super(),Et(this,e,I2,N2,Mt,{icons:3,clss:0,size:1})}}export{ao as F,$2 as L,Q2 as M,gs as S,to as U,W2 as a,Y2 as b,Z_ as c,P0 as d,X2 as e,Z2 as f,T0 as g,un as h,Or as i,Cr as j,wa as k,ni as l,V2 as p,No as s,$_ as t,m2 as u};
//# sourceMappingURL=Marker-cdaf4fc2.js.map
