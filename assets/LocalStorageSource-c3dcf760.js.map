{"version":3,"file":"LocalStorageSource-c3dcf760.js","sources":["../../src/Logic/Web/LocalStorageSource.ts"],"sourcesContent":["import { UIEventSource } from \"../UIEventSource\"\nimport { Utils } from \"../../Utils\"\n\n/**\n * UIEventsource-wrapper around localStorage\n */\nexport class LocalStorageSource {\n\n    private static readonly _cache: Record<string, UIEventSource<string>> = {}\n\n    static getParsed<T>(key: string, defaultValue: T): UIEventSource<T> {\n        return LocalStorageSource.get(key).sync(\n            (str) => {\n                if (str === undefined) {\n                    return defaultValue\n                }\n                try {\n                    return JSON.parse(str)\n                } catch {\n                    return defaultValue\n                }\n            },\n            [],\n            (value) => JSON.stringify(value),\n        )\n    }\n\n    static get(key: string, defaultValue: string = undefined): UIEventSource<string> {\n        const cached = LocalStorageSource._cache[key]\n        if (cached) {\n            return cached\n        }\n        let saved = defaultValue\n        if (!Utils.runningFromConsole) {\n\n            try {\n                saved = localStorage.getItem(key)\n                if (saved === \"undefined\") {\n                    saved = undefined\n                }\n            } catch (e) {\n                console.error(\"Could not get value\", key, \"from local storage\")\n            }\n        }\n        const source = new UIEventSource<string>(saved ?? defaultValue, \"localstorage:\" + key)\n\n        source.addCallback((data) => {\n            if (data === undefined || data === \"\" || data === null) {\n                localStorage.removeItem(key)\n                return\n            }\n            try {\n                localStorage.setItem(key, data)\n            } catch (e) {\n                // Probably exceeded the quota with this item!\n                // Let's nuke everything\n                localStorage.clear()\n            }\n        })\n        LocalStorageSource._cache[key] = source\n        return source\n    }\n}\n"],"names":["_LocalStorageSource","key","defaultValue","str","value","cached","saved","Utils","source","UIEventSource","data","__publicField","LocalStorageSource"],"mappings":"+NAMO,MAAMA,EAAN,MAAMA,CAAmB,CAI5B,OAAO,UAAaC,EAAaC,EAAmC,CACzD,OAAAF,EAAmB,IAAIC,CAAG,EAAE,KAC9BE,GAAQ,CACL,GAAIA,IAAQ,OACD,OAAAD,EAEP,GAAA,CACO,OAAA,KAAK,MAAMC,CAAG,CAAA,MACjB,CACG,OAAAD,CACX,CACJ,EACA,CAAC,EACAE,GAAU,KAAK,UAAUA,CAAK,CAAA,CAEvC,CAEA,OAAO,IAAIH,EAAaC,EAAuB,OAAkC,CACvE,MAAAG,EAASL,EAAmB,OAAOC,CAAG,EAC5C,GAAII,EACO,OAAAA,EAEX,IAAIC,EAAQJ,EACR,GAAA,CAACK,EAAM,mBAEH,GAAA,CACQD,EAAA,aAAa,QAAQL,CAAG,EAC5BK,IAAU,cACFA,EAAA,aAEJ,CACA,QAAA,MAAM,sBAAuBL,EAAK,oBAAoB,CAClE,CAEJ,MAAMO,EAAS,IAAIC,EAAsBH,GAASJ,EAAc,gBAAkBD,CAAG,EAE9E,OAAAO,EAAA,YAAaE,GAAS,CACzB,GAAIA,IAAS,QAAaA,IAAS,IAAMA,IAAS,KAAM,CACpD,aAAa,WAAWT,CAAG,EAC3B,MACJ,CACI,GAAA,CACa,aAAA,QAAQA,EAAKS,CAAI,OACtB,CAGR,aAAa,MAAM,CACvB,CAAA,CACH,EACkBV,EAAA,OAAOC,CAAG,EAAIO,EAC1BA,CACX,CACJ,EAtDIG,EAFSX,EAEe,SAAgD,CAAA,GAFrE,IAAMY,EAANZ"}