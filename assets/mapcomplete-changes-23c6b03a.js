var l=Object.defineProperty;var c=(t,e,r)=>e in t?l(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var m=(t,e,r)=>(c(t,typeof e!="symbol"?e+"":e,r),r);import{U as i}from"./UIEventSource-7e6b214a.js";import"./Pencil-43c13ced.js";import{m as o}from"./mapcomplete-changes-56adb9ac.js";import{s as d,g,a as h,h as u,b as y,r as _}from"./range-e6d9a308.js";import{M as f,T as w,a as b,l as C,s as v}from"./ThemeViewGUI-f116e08b.js";import{f as T}from"./FloatOver-148e85be.js";import{g as L}from"./ThemeViewStateHashActor-2ca66c6a.js";import{L as A}from"./LayoutConfig-6034c2ea.js";import{F as E}from"./Tr-d5b6277a.js";import{C as x}from"./Constants-6d06315d.js";import"./placeholder-7de6a263.js";import"./index-e92167ef.js";import"./_commonjsHelpers-de833af9.js";import"./tw-merge-6ca0df02.js";import"./tw-join-70ce42f3.js";import"./LocalStorageSource-ae5c6b0e.js";import"./OsmConnection-cce2ddde.js";import"./InputHelper-ea68c5a0.js";import"./Loading-ccdc5f33.js";import"./Checkbox-c56969b5.js";import"./OHTable-35750afe.js";import"./Dropdown-c9199929.js";import"./Marker-561b291c.js";import"./PrivacyPolicy-425db8c1.js";import"./Community-7988c26c.js";import"./AccordionSingle-9c54997e.js";import"./Filterview-ccb3dcc1.js";import"./BackButton-5a3ce80d.js";import"./Login-aa4d1fc3.js";class p{metaTaggging_for_mapcomplete_changes(e,r){}metaTaggging_for_current_view(e,r){const{distanceTo:n,overlapWith:s,enclosingFeatures:P,intersectionsWith:V,closest:W,closestn:k,get:z}=r;i.AddLazyProperty(e.properties,"_embedded_cs",()=>s(e)("mapcomplete-changes").map(a=>a.feat.properties)),i.AddLazyProperty(e.properties,"_embedded_cs:themes",()=>e.get("_embedded_cs").map(a=>a.theme)),i.AddLazyProperty(e.properties,"_embedded_cs:users",()=>e.get("_embedded_cs").map(a=>a["_last_edit:contributor"]))}}m(p,"themeName","mapcomplete-changes");function F(){try{var t=document.createElement("canvas");return!!window.WebGLRenderingContext&&(t.getContext("webgl")||t.getContext("experimental-webgl"))}catch{return!1}}async function M(t){return await i.waitFor(t),{layers:[]}}async function S(){try{const t=new URL(x.VectorTileServer).host,e=await Promise.any([i.downloadJson("https://"+t+"/summary/status.json"),M(0)]);return new Set(e.layers)}catch(t){return console.error("Could not get MVT available layers due to",t),new Set}}async function U(){if(!F())new E("WebGL is not supported or not enabled. This is essential for MapComplete to function, please enable this.").SetClass("block alert").AttachTo("maindiv");else{const t=await S();f.setThemeMetatagging(new p),o.layers.push(d),o.layers.push(g),o.layers.push(h),o.layers.push(u),o.layers.push(y),o.layers.push(_),o.layers.push(C),o.layers.push(T),o.layers.push(v),o.layers.push(L);const e=new w(new A(o),t),r=document.getElementById("maindiv"),n=Array.from(r.children);new b({target:r,props:{state:e}}),n.forEach(s=>r.removeChild(s)),Array.from(document.getElementsByClassName("delete-on-load")).forEach(s=>{s.parentElement.removeChild(s)})}}U();
//# sourceMappingURL=mapcomplete-changes-23c6b03a.js.map
