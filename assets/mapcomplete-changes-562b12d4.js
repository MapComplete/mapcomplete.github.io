var c=Object.defineProperty;var d=(t,e,r)=>e in t?c(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var n=(t,e,r)=>(d(t,typeof e!="symbol"?e+"":e,r),r);import"./modulepreload-polyfill-3cfb730f.js";import"./Pencil-ad9b74da.js";import{m as s}from"./mapcomplete-changes-bf8ea833.js";import{U as m}from"./UIEventSource-64bbdd19.js";import{s as h,g,a as u,h as y,b as _,r as f}from"./range-22c2a529.js";import{M as w,T as b,a as v,l as C,s as T}from"./ThemeViewGUI-a3699298.js";import{f as S}from"./FloatOver-5adce865.js";import{s as L,g as A}from"./SelectedElementView-7aa98731.js";import{T as E}from"./ThemeConfig-90ececc5.js";import{F as x}from"./tw-merge-66414870.js";import{C as p}from"./Constants-823bf632.js";import"./RasterLayerProperties-357e6e36.js";import"./Searchbar-eb0f1244.js";import"./index-34c7dc31.js";import"./LocalStorageSource-c3dcf760.js";import"./OsmConnection-fa95ab3c.js";import"./InputHelper-fb3b5e2c.js";import"./tw-join-70ce42f3.js";import"./Loading-aa985c94.js";import"./Checkbox-9bedbe7a.js";import"./Dropdown-8b54df95.js";import"./Marker-12676927.js";import"./PrivacyPolicy-f6a9e45a.js";import"./Community-b145c89c.js";import"./AccordionSingle-1c573f1a.js";import"./Filterview-5408ebf5.js";import"./BackButton-c24e0e32.js";import"./Login-c68ac5fb.js";class l{metaTaggging_for_mapcomplete_changes(e,r){}metaTaggging_for_current_view(e,r){const{distanceTo:i,overlapWith:a,enclosingFeatures:W,intersectionsWith:k,closest:z,closestn:G,get:V}=r;m.AddLazyProperty(e.properties,"_embedded_cs",()=>a(e)("mapcomplete-changes").map(o=>o.feat.properties)),m.AddLazyProperty(e.properties,"_embedded_cs:themes",()=>e.get("_embedded_cs").map(o=>o.theme)),m.AddLazyProperty(e.properties,"_embedded_cs:users",()=>e.get("_embedded_cs").map(o=>o["_last_edit:contributor"]))}}n(l,"themeName","mapcomplete-changes");function F(){try{var t=document.createElement("canvas");return!!window.WebGLRenderingContext&&(t.getContext("webgl")||t.getContext("experimental-webgl"))}catch{return!1}}async function M(t){return await m.waitFor(t),{layers:[]}}async function U(){if(!p.SummaryServer)return new Set;try{const t=new URL(p.SummaryServer).host,e=await Promise.any([m.downloadJson("https://"+t+"/summary/status.json"),M(0)]);return new Set(e.layers)}catch(t){return console.error("Could not get MVT available layers due to",t),new Set}}async function P(){if(!F())new x("WebGL is not supported or not enabled. This is essential for MapComplete to function, please enable this.").SetClass("block alert").AttachTo("maindiv");else{const t=await U();w.setThemeMetatagging(new l),s.layers.push(h),s.layers.push(g),s.layers.push(u),s.layers.push(y),s.layers.push(_),s.layers.push(f),s.layers.push(C),s.layers.push(S),s.layers.push(T),s.layers.push(L),s.layers.push(A);const e=new b(new E(s),t),r=document.getElementById("maindiv"),i=Array.from(r.children);new v({target:r,props:{state:e}}),i.forEach(a=>r.removeChild(a)),Array.from(document.getElementsByClassName("delete-on-load")).forEach(a=>{a.parentElement.removeChild(a)})}}P();
//# sourceMappingURL=mapcomplete-changes-562b12d4.js.map
